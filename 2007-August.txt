From ivop at mail.berlios.de  Tue Aug 28 12:38:50 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Tue, 28 Aug 2007 12:38:50 +0200
Subject: [Hmgen-svnlog] r1 - / trunk
Message-ID: <200708281038.l7SAcow2021246@sheep.berlios.de>

Author: ivop
Date: 2007-08-28 12:38:44 +0200 (Tue, 28 Aug 2007)
New Revision: 1

Added:
   trunk/
   trunk/AUTHORS
   trunk/LICENSE
   trunk/Makefile
   trunk/README
   trunk/cli_main.c
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
   trunk/gui_interface.h
   trunk/gui_main.c
   trunk/gui_support.c
   trunk/gui_support.h
   trunk/hmgen.png
   trunk/lib_algo_ff.c
   trunk/lib_algo_forge.c
   trunk/lib_algo_mpd.c
   trunk/lib_hmgen.c
   trunk/lib_hmgen.h
   trunk/lib_postproc.c
   trunk/lib_util.c
   trunk/target.mak
   trunk/version.h
Log:
Initial Import

Added: trunk/AUTHORS
===================================================================
--- trunk/AUTHORS	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/AUTHORS	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1 @@
+Ivo van Poorten <ivop at euronet.nl>

Added: trunk/LICENSE
===================================================================
--- trunk/LICENSE	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/LICENSE	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,340 @@
+		    GNU GENERAL PUBLIC LICENSE
+		       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc.
+        51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Library General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+			    NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+	    How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program; if not, write to the Free Software
+    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  <signature of Ty Coon>, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Library General
+Public License instead of this License.

Added: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/Makefile	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,88 @@
+
+include target.mak
+
+CLI = hmgen$(EXESUF)
+CLIg = hmgen_g$(EXESUF)
+CLI_BASENAMES = cli_main
+CLI_OBJS = $(addsuffix $(OBJSUF), $(CLI_BASENAMES))
+CLI_SRCS = $(addsuffix .c, $(CLI_BASENAMES))
+
+GUI = hmgengui$(EXESUF)
+GUIg = hmgengui_g$(EXESUF)
+GUI_BASENAMES = gui_main gui_callbacks gui_interface gui_support
+GUI_OBJS = $(addsuffix $(OBJSUF), $(GUI_BASENAMES))
+GUI_SRCS = $(addsuffix .c, $(GUI_BASENAMES))
+
+LIBHMGEN = libhmgen.a
+LIBHMGEN_BASENAMES = lib_algo_ff lib_algo_mpd lib_algo_forge \
+					 lib_postproc lib_util lib_hmgen
+LIBHMGEN_OBJS = $(addsuffix $(OBJSUF), $(LIBHMGEN_BASENAMES))
+LIBHMGEN_SRCS = $(addsuffix .c, $(LIBHMGEN_BASENAMES))
+
+SILENT ?= yes
+SILENT_EXEC = test "$(SILENT)" = "yes" && echo $$SHORT || echo $$LONG; $$LONG
+
+all: $(GUI) $(CLI)
+
+verbose: SILENT=no
+verbose: all
+
+$(CLI)-verbose: SILENT=no
+$(CLI)-verbose: $(CLI)
+$(CLI): $(CLIg)
+	@LONG="cp $(CLIg) $@"; SHORT="CP $(CLIg) $@"; $(SILENT_EXEC)
+	@LONG="$(STRIP) $@"; SHORT="STRIP $@"; $(SILENT_EXEC)
+
+$(CLIg): CFLAGS = $(DEF_CFLAGS)
+$(CLIg): LDFLAGS = $(DEF_LDFLAGS)
+$(CLIg): $(LIBHMGEN) $(CLI_OBJS)
+	@LONG="$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS)"; SHORT="LD $@"; \
+		$(SILENT_EXEC)
+
+$(GUI)-verbose: SILENT=no
+$(GUI)-verbose: $(GUI)
+$(GUI): $(GUIg)
+	@LONG="cp $(GUIg) $@"; SHORT="CP $(GUIg) $@"; $(SILENT_EXEC)
+	@LONG="$(STRIP) $@"; SHORT="STRIP $@"; $(SILENT_EXEC)
+
+$(GUIg): CFLAGS = $(GTK_CFLAGS) $(DEF_CFLAGS)
+$(GUIg): LDFLAGS = $(GTK_LDFLAGS) $(DEF_LDFLAGS)
+$(GUIg): $(LIBHMGEN) $(GUI_OBJS)
+	@LONG="$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS)"; SHORT="LD $@"; \
+		$(SILENT_EXEC)
+
+$(LIBHMGEN)-verbose: SILENT=no
+$(LIBHMGEN)-verbose: $(LIBHMGEN)
+$(LIBHMGEN): CFLAGS = $(DEF_CFLAGS)
+$(LIBHMGEN): LDFLAGS = $(DEF_LDFLAGS)
+$(LIBHMGEN): $(LIBHMGEN_OBJS)
+	@LONG="$(AR) $(AR_FLAGS) $@ $^"; SHORT="AR $@"; $(SILENT_EXEC)
+	@LONG="$(RANLIB) $@"; SHORT="RANLIB $@"; $(SILENT_EXEC)
+
+.c.o:
+	@LONG="$(CC) -c -o $@ $< $(CFLAGS)"; SHORT="CC $<"; $(SILENT_EXEC)
+
+clean:
+	rm -f $(CLI) $(CLIg) $(CLI_OBJS)
+	rm -f $(LIBHMGEN) $(LIBHMGEN_OBJS)
+	rm -f $(GUI) $(GUIg) $(GUI_OBJS)
+
+mrproper distclean: clean
+	rm -f *~ .depend *.pgm *.ppm
+
+depend-verbose dep-verbose: SILENT=no
+depend-verbose dep-verbose: dep
+depend dep: $(CLI_SRCS) $(LIBHMGEN_SRCS) $(GUI_SRCS)
+	@LONG="$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $^"; \
+		SHORT="CCDEP >.depend"; $(SILENT_EXEC) 1>.depend
+
+size:
+	@wc -l *.[ch] Makefile *.mak | tail -1
+
+size-long:
+	@wc -l *.[ch] Makefile *.mak
+
+.PHONY:	all dep depend clean distclean mrproper verbose $(CLI)-verbose size
+.PHONY: $(GUI)-verbose $(LIBHMGEN)-verbose depend-verbose dep-verbose size-long
+
+-include .depend

Added: trunk/README
===================================================================
--- trunk/README	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/README	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,42 @@
+Requirements:
+=============
+
+Mandatory:
+
+C compiler
+
+Optional:
+
+pkg-config
+gtk+-2.0 + gdk-pixbuf + development files
+
+
+Building:
+=========
+
+One-time build:
+    make all
+
+To build without the GTK+-2.0 GUI, type:
+    make hmgen
+
+Developer build:
+    make dep verbose
+    or
+    make dep hmgen-verbose
+    etc...
+
+Clean up:
+    make clean
+
+Cleaner up:
+    make distclean
+    make mrproper
+
+The default target is linux-gcc. To change that, use:
+    make TARGET=linux-suncc all
+
+Porting to another target can be done by adding it to target.mak.
+
+Yeah, I am too lazy to copy & paste & adjust a proper configure script.
+Send a patch if you want. I will not accept any autotools stuff though.

Added: trunk/cli_main.c
===================================================================
--- trunk/cli_main.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/cli_main.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,258 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <math.h>
+#include <assert.h>
+#include "lib_hmgen.h"
+#include "version.h"
+
+#define DEF_BLURX       31
+#define DEF_BLURY       31
+#define DEF_BLURSIGMA   6.0f
+
+#define DEF_NORMMIN     0
+#define DEF_NORMMAX     255
+
+static const char defoutfile[] = "output.pgm";
+static const char defcolfile[] = "output.ppm";
+
+static int size = 8, algo = 0, blur = 0, blurx = DEF_BLURX, blury = DEF_BLURY;
+static double blursigma = DEF_BLURSIGMA;
+static int normmin = DEF_NORMMIN, normmax = DEF_NORMMAX,
+           normfirst = 0, normlast = 0, inv = 0;
+static unsigned int w, h;
+static char *outfile = (char *) defoutfile;
+static char *colfile = (char *) defcolfile;
+static unsigned int outputcol = 0;
+static const char *params = NULL;
+
+static unsigned char *map, *tempmap;
+
+static void help_message(char **argv) {
+    fprintf(stderr,
+"\nHeight Map Generator - Version %s - %s\n\n"
+"usage: %s [options]\n\n"
+"-s INT         size, 2^VAL+1 [default: 8]\n"
+"-o FILE        output filename [default: output.pgm]\n"
+"-c             enable output of colorized version\n"
+"-cfile FILE    output file name of colorized version [default: output.ppm]\n"
+"-p STRING      algorithm parameters (param:param:param...)\n"
+"-a INT         algorithm [default: 0]\n"
+"                   0 - Fault Formation\n"
+"                       seed=INT        random seed\n"
+"                       init=INT        initial height (0-255)\n"
+"                       n=INT           number of tectonic plates\n"
+"                       up=INT          move up factor\n"
+"                       down=INT        move down factor\n"
+"                   1 - Midpoint Displacement (plasma)\n"
+"                       seed=INT        random seed\n"
+"                       tl=INT          top-left initial height\n"
+"                       tr=INT          top-right initial height\n"
+"                       bl=INT          bottom-left initial height\n"
+"                       br=INT          bottom-right initial height\n"
+"                       d=INT           initial displacement\n"
+"                       r=FLOAT         roughness factor\n"
+"                   2 - ppmforge/gforge Algorithm\n"
+"                       seed=INT        random seed\n"
+"                       fracdim=FLOAT   fractal dimension\n"
+"                       powscale=FLOAT  power scale\n"
+"\n"
+"-nf            postprocess, normalize first [default: no]\n"
+"-nl            postprocess, normalize last [default: no]\n"
+"-nmin INT      normalize minimum (0-255) [default: %i]\n"
+"-nmax INT      normalize maximum (0-255) [default: %i]\n"
+"-b             postprocess, gaussian blur [default: no]\n"
+"-bx INT        blur x-radius [default: %i]\n"
+"-by INT        blur y-radius [default: %i]\n"
+"-bxy INT       blur xy-radius\n"
+"-bs FLOAT      blur sigma [default: %0.2f]\n"
+"-i             postprocess, invert heightmap [default: no]\n"
+"\n",
+        VERSION_STRING, COPYRIGHT_STRING, argv[0],
+        DEF_NORMMIN, DEF_NORMMAX,
+        DEF_BLURX, DEF_BLURY, DEF_BLURSIGMA);
+    exit(0);
+}
+
+static inline int test_argument(int a, int argc, char **argv) {
+    if (a+1 >= argc) {
+        fprintf(stderr, "option %s needs an argument\n", argv[a]);
+        return 0;
+    } else
+        return 1;
+}
+
+static int parse_command_line(int argc, char**argv) {
+    int a;
+
+    a = 1;
+
+    while (a < argc) {
+        if (!strcmp(argv[a], "-s")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            size = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-a")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            algo = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-o")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            outfile = argv[++a];
+        } else if (!strcmp(argv[a], "-c")) {
+            outputcol = 1;
+        } else if (!strcmp(argv[a], "-cfile")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            colfile = argv[++a];
+        } else if (!strcmp(argv[a], "-p")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            params = argv[++a];
+        } else if (!strcmp(argv[a], "-b")) {
+            blur = 1;
+        } else if (!strcmp(argv[a], "-bx")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            blurx = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-by")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            blury = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-bxy")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            blurx = blury = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-bs")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            blursigma = atof(argv[++a]);
+        } else if (!strcmp(argv[a], "-h")) {
+            help_message(argv);
+        } else if (!strcmp(argv[a], "-nf")) {
+            normfirst = 1;
+        } else if (!strcmp(argv[a], "-nl")) {
+            normlast = 1;
+        } else if (!strcmp(argv[a], "-nmin")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            normmin = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-nmax")) {
+            if (!test_argument(a, argc, argv)) return 0;
+            normmax = atoi(argv[++a]);
+        } else if (!strcmp(argv[a], "-i")) {
+            inv = 1;
+        } else {
+            fprintf(stderr, "unknown option: %s\n", argv[a]);
+            return 0;
+        }
+        a++;
+    }
+
+    return 1;
+}
+
+static int test_global_settings(void) {
+    if (size<1 || size>14) {
+        fprintf(stderr, "size is smaller than 1 or larger than 16\n");
+        return 0;
+    }
+    if (algo<ALGO_FF || algo>=ALGO_LAST) {
+        fprintf(stderr, "algo is smaller then %i or larger than %i\n",
+                ALGO_FF, ALGO_LAST-1);
+        return 0;
+    }
+    if (blurx < 1) {
+        fprintf(stderr, "blurx is smaller than 1\n");
+        return 0;
+    }
+    if (blury < 1) {
+        fprintf(stderr, "blury is smaller than 1\n");
+        return 0;
+    }
+    if (normmin < 0) {
+        fprintf(stderr, "normmin is smaller than 0\n");
+        return 0;
+    }
+    if (normmax > 255) {
+        fprintf(stderr, "normmax is larger than 255\n");
+        return 0;
+    }
+
+    return 1;
+}
+
+int main(int argc, char **argv) {
+    FILE *fp1, *fp2;
+
+    if (!parse_command_line(argc, argv)) {
+        fprintf(stderr, "error, parsing command line\n");
+        exit(1);
+    }
+    if (!test_global_settings()) {
+        fprintf(stderr, "error, invalid global settings\n");
+        exit(1);
+    }
+
+    fp1 = fopen(outfile, "wb");
+    if (!fp1) {
+        fprintf(stderr, "error, cannot open %s for writing\n", outfile);
+        exit(1);
+    }
+
+    if (outputcol) {
+        fp2 = fopen(colfile, "wb");
+        if (!fp2) {
+            fprintf(stderr, "error, cannot open %s for writing\n", colfile);
+            fclose(fp1);
+            exit(1);
+        }
+    }
+
+    w = h = exp2(size) + 1;
+
+    fprintf(stderr, "Dimensions: %i x %i\n", w, h);
+    fprintf(stderr, "Algorithm: %s\n", hmg_algorithms[algo]->name);
+
+    if (!hmg_parse_params(params, hmg_algorithms[algo]->params)) {
+        fprintf(stderr, "error, parsing parameters\n");
+        exit(1);
+    }
+
+    map = calloc(h, w);
+    if (!map) {
+        fprintf(stderr, "error, unable to allocate memory\n");
+        exit(1);
+    }
+    tempmap = calloc(h, w);
+    if (!tempmap) {
+        fprintf(stderr, "error, unable to allocate memory\n");
+        free(map);
+        exit(1);
+    }
+
+    hmg_algorithms[algo]->func(map, tempmap, w, h);
+
+    if (normfirst)
+        hmg_normalize(map, normmin, normmax, w, h);
+    if (blur)
+        hmg_gaussian_blur(map, tempmap, blurx, blury, blursigma, w, h);
+    if (normlast)
+        hmg_normalize(map, normmin, normmax, w, h);
+    if (inv)
+        hmg_invert(map, w, h);
+
+    fprintf(stderr, "Saving to %s\n", outfile);
+
+    fprintf(fp1, "P5\n# Generated by HMGEN\n%i %i\n255\n", w, h);
+    fwrite(map, w, h, fp1);
+    fclose(fp1);
+
+    if (outputcol) {
+        unsigned int i;
+        fprintf(stderr, "Saving colorized version to %s\n", colfile);
+
+        fprintf(fp2, "P6\n# Generated by HMGEN\n%i %i\n255\n", w, h);
+
+        hmg_init_colormap();
+        for (i=0; i<w*h; i++)
+            fwrite(hmg_colormap[map[i]], 1, 3, fp2);
+
+        fclose(fp2);
+    }
+
+    free(tempmap);
+    free(map);
+    return 0;
+}

Added: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_callbacks.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,362 @@
+#include <gtk/gtk.h>
+#include <string.h>
+#include <assert.h>
+#include <glib.h>
+#include <unistd.h>
+#include <stdlib.h>
+#include <math.h>
+#include "gui_callbacks.h"
+#include "gui_interface.h"
+#include "gui_support.h"
+#include "lib_hmgen.h"
+
+static unsigned char *map = NULL, *tempmap = NULL;
+static GdkPixbuf *map_pixbuf = NULL;
+static unsigned int map_width = 4097, map_height = 4097;
+static GtkProgressBar *main_progressbar = NULL;
+static unsigned int algo_combo_set = 0, size_combo_set = 0;
+
+static void gui_progress_meter(char *context, int p) {
+    static char *prevcontext = NULL;
+    static int prevp = 0;
+
+    if (p>=0) {
+        gdk_threads_enter();
+            if (context != prevcontext) {
+                gtk_progress_bar_set_text(main_progressbar, context);
+                prevcontext = context;
+            }
+            if (p>prevp) {
+                gtk_progress_bar_set_fraction(main_progressbar, p/100.0);
+                prevp = p;
+            }
+        gdk_threads_leave();
+    } else {
+        gdk_threads_enter();
+            gtk_progress_bar_set_text(main_progressbar, "Idle...");
+            gtk_progress_bar_set_fraction(main_progressbar, 0.0);
+            prevp = 0;
+            prevcontext = NULL;
+        gdk_threads_leave();
+    }
+}
+
+static void render_map(GtkWidget *widget) {
+    unsigned int x, y, stride;
+    unsigned char *p, *m;
+
+    if (map_pixbuf) {
+        gdk_threads_enter();
+            g_object_unref(map_pixbuf);
+        gdk_threads_leave();
+    }
+
+    gdk_threads_enter();
+        map_pixbuf = gdk_pixbuf_new(GDK_COLORSPACE_RGB, FALSE, 8, map_width, map_height);
+        stride = gdk_pixbuf_get_rowstride(map_pixbuf);
+        p = gdk_pixbuf_get_pixels(map_pixbuf);
+    gdk_threads_leave();
+
+    m = map;
+
+    for (y=0; y<map_height; y++) {
+        if (y&0x10)
+            gui_progress_meter("Rendering", round(y*100.0/(map_height-1)));
+        for (x=0; x<map_width; x++) {
+            int x3 = x + (x<<1);
+            p[x3  ] = hmg_colormap[m[x]][0];
+            p[x3+1] = hmg_colormap[m[x]][1];
+            p[x3+2] = hmg_colormap[m[x]][2];
+        }
+        m += map_width;
+        p += stride;
+    }
+    gui_progress_meter("", -1);
+}
+
+static void generate_button_sensitivity(GtkComboBox *cb) {
+    GtkWidget *w;
+
+    if (algo_combo_set && size_combo_set) {
+        w = lookup_widget(GTK_WIDGET(cb), "generate_button");
+        gtk_widget_set_sensitive (w, TRUE);
+    }
+}
+
+void on_algorithm_combobox_changed(GtkComboBox *combobox, gpointer user_data) {
+    gint active;
+    GtkWidget *w;
+
+    algo_combo_set = 1;
+    generate_button_sensitivity(combobox);
+
+    w = lookup_widget(GTK_WIDGET(combobox), "algosettings_notebook");
+    active = gtk_combo_box_get_active(combobox);
+
+    gtk_notebook_set_current_page(GTK_NOTEBOOK(w), active);
+}
+
+void on_size_combobox_changed(GtkComboBox *combobox, gpointer user_data) {
+    size_combo_set = 1;
+    generate_button_sensitivity(combobox);
+}
+
+static void retrieve_settings_ff(GtkWidget *widget, char *buf, int len) {
+    GtkWidget *w;
+    unsigned int seed, init, nplates, up, down;
+
+    gdk_threads_enter();
+        w = lookup_widget(widget, "ff_seed_spinbutton");
+        seed = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "ff_init_spinbutton");
+        init = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "ff_nplates_spinbutton");
+        nplates = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "ff_upfactor_spinbutton");
+        up = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "ff_downfactor_spinbutton");
+        down = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+    gdk_threads_leave();
+
+    snprintf(buf, len, "seed=%u:init=%u:n=%u:up=%u:down=%u", seed, init,
+                                                        nplates, up, down);
+}
+
+static void retrieve_settings_mpd(GtkWidget *widget, char *buf, int len) {
+    GtkWidget *w;
+    unsigned int seed, tl, tr, bl, br, d;
+    float r;
+
+    gdk_threads_enter();
+        w = lookup_widget(widget, "mpd_seed_spinbutton");
+        seed = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "mpd_tl_spinbutton");
+        tl = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "mpd_tr_spinbutton");
+        tr = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "mpd_bl_spinbutton");
+        bl = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "mpd_br_spinbutton");
+        br = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "mpd_displacement_spinbutton");
+        d = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "mpd_roughness_spinbutton");
+        r = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
+    gdk_threads_leave();
+
+    snprintf(buf, len, "seed=%u:tl=%u:tr=%u:bl=%u:br=%u:d=%u:r=%0.2f", seed,
+                                                        tl, tr, bl, br, d, r);
+}
+
+static void retrieve_settings_forge(GtkWidget *widget, char *buf, int len) {
+    GtkWidget *w;
+    unsigned int seed;
+    float fracdim, powscale;
+
+    gdk_threads_enter();
+        w = lookup_widget(widget, "forge_seed_spinbutton");
+        seed = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "forge_fracdim_spinbutton");
+        fracdim = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
+        w = lookup_widget(widget, "forge_powscale_spinbutton");
+        powscale = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
+    gdk_threads_leave();
+
+    snprintf(buf, len, "seed=%u:fracdim=%0.2f:powscale=%0.2f", seed, fracdim,
+                                                                powscale);
+}
+
+#define BUFSIZE 512
+static char *retrieve_settings(GtkWidget *widget, int which) {
+    static char settings[BUFSIZE];
+    void (*retrieve[])(GtkWidget *widget, char *buf, int len) = {
+        retrieve_settings_ff,
+        retrieve_settings_mpd,
+        retrieve_settings_forge
+    };
+    retrieve[which](widget, settings, BUFSIZE);
+    return settings;
+}
+
+static void *generate_thread(void *args) {
+    GtkWidget *widget;
+    gint active;
+    unsigned int dims[] = { 3, 5, 9, 17, 33, 65, 129, 257, 513, 1025, 2049, 4097, 8193, 16385 };
+    unsigned int normmin, normmax, normfirst, normlast, inv, blurx, blury;
+    unsigned int blur;
+    double blursigma;
+    char *settings;
+ 
+    if (!main_progressbar) {
+        gdk_threads_enter();
+            widget = lookup_widget(GTK_WIDGET(args), "main_progressbar");
+            main_progressbar = GTK_PROGRESS_BAR(widget);
+        gdk_threads_leave();
+    }
+ 
+    hmg_progress_meter = gui_progress_meter;
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "size_combobox");
+        active = gtk_combo_box_get_active(GTK_COMBO_BOX(widget));
+    gdk_threads_leave();
+    map_width = map_height = dims[active];
+
+    if (map_pixbuf) {
+        gdk_threads_enter();
+            g_object_unref(map_pixbuf);
+            map_pixbuf = NULL;
+        gdk_threads_leave();
+    }
+
+    map     = realloc(map,     map_width * map_height);
+    tempmap = realloc(tempmap, map_width * map_height);
+
+    if (!map || !tempmap) {
+        gui_progress_meter("Out of memory!", 42);
+        goto stopit;
+    }
+
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "algorithm_combobox");
+        active = gtk_combo_box_get_active(GTK_COMBO_BOX(widget));
+    gdk_threads_leave();
+
+    settings = retrieve_settings(args, active);
+    hmg_parse_params(settings, hmg_algorithms[active]->params);
+    hmg_algorithms[active]->func(map, tempmap, map_width, map_height);
+
+    // post-processing
+
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "norm_first_checkbutton");
+        normfirst = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "norm_last_checkbutton");
+        normlast = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "norm_min_spinbutton");
+        normmin = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "norm_max_spinbutton");
+        normmax = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "invert_checkbutton");
+        inv = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "blur_checkbutton");
+        blur = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "blur_xradius_spinbutton");
+        blurx = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "blur_yradius_spinbutton");
+        blury = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "blur_sigma_spinbutton");
+        blursigma = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(widget));
+    gdk_threads_leave();
+
+    if (normfirst)
+        hmg_normalize(map, normmin, normmax, map_width, map_height);
+
+    if (blur)
+        hmg_gaussian_blur(map, tempmap, blurx, blury, blursigma, map_width,
+                                                                map_height);
+    if (normlast)
+        hmg_normalize(map, normmin, normmax, map_width, map_height);
+
+    if (inv)
+        hmg_invert(map, map_width, map_height);
+
+    if (tempmap)
+        free(tempmap);
+    tempmap = NULL;
+
+    render_map(args);
+
+stopit:
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "main_notebook");
+        gtk_widget_set_sensitive (widget, TRUE);
+        gtk_notebook_set_current_page(GTK_NOTEBOOK(widget), 0);
+    gdk_threads_leave();
+
+    return NULL;
+}
+
+void on_generate_button_clicked(GtkButton *button, gpointer user_data) {
+    GtkWidget *widget = lookup_widget(GTK_WIDGET(button), "main_notebook");
+
+    gtk_widget_set_sensitive (widget, FALSE);
+
+    g_thread_create(generate_thread, button, FALSE, NULL);
+}
+
+void on_pgm_save_as_button_clicked(GtkButton *button, gpointer user_data) {
+}
+
+
+void on_ppm_save_as_button_clicked(GtkButton *button, gpointer user_data) {
+}
+
+gboolean on_view_drawingarea_expose_event(GtkWidget *widget,
+                                          GdkEventExpose *event,
+                                          gpointer user_data) {
+    GdkDrawable *drawable = widget->window;
+    GdkGC *gc = widget->style->fg_gc[GTK_WIDGET_STATE (widget)];
+    gint width, height;
+
+    if (!map_pixbuf)
+        return FALSE;
+
+    width = gdk_pixbuf_get_width(map_pixbuf);
+    height = gdk_pixbuf_get_height(map_pixbuf);
+
+    gtk_widget_set_size_request(widget, width, height);
+
+    gdk_draw_pixbuf(drawable, gc, map_pixbuf, 0, 0, 0, 0, width, height,
+            GDK_RGB_DITHER_NONE, 0, 0);
+
+    return FALSE;
+}
+
+void gui_quit(GtkWidget *widget, gpointer user_data) {
+    if (map_pixbuf)
+        g_object_unref(map_pixbuf);
+    if (map)
+        free(map);
+    if (tempmap)
+        free(tempmap);
+
+    gtk_main_quit();
+}
+
+void on_new_create_button_clicked(GtkButton *button, gpointer user_data) {
+}
+
+void on_norm2_button_clicked(GtkButton *button, gpointer user_data) {
+}
+
+void on_blur2_button_clicked(GtkButton *button, gpointer user_data) {
+}
+
+void on_invert2_button_clicked(GtkButton *button, gpointer user_data) {
+}
+
+gboolean on_colormap_display_expose_event(GtkWidget *widget,
+                                          GdkEventExpose *event,
+                                          gpointer user_data) {
+    GdkDrawable *drawable = widget->window;
+    GdkGC *gc = gdk_gc_new(drawable);
+    unsigned int width = 514, height = 32, x;
+    GdkColor ourcolor = { 0, 0, 0, 0 };
+
+    gtk_widget_set_size_request(widget, width, height);
+
+    gdk_gc_set_foreground(gc, &ourcolor);
+    gdk_draw_rectangle(drawable, gc, TRUE, 0, 0, width, height);
+
+    for (x=0; x<256; x++) {
+        ourcolor.pixel = (hmg_colormap[x][0]<<16) +
+                         (hmg_colormap[x][1]<<8)  +
+                          hmg_colormap[x][2];
+        gdk_gc_set_foreground(gc, &ourcolor);
+        gdk_draw_rectangle(drawable, gc, FALSE, 1+2*x, 1, 1, height-3);
+    }
+
+    g_object_unref(gc);
+    return FALSE;
+}
+

Added: trunk/gui_callbacks.h
===================================================================
--- trunk/gui_callbacks.h	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_callbacks.h	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,24 @@
+#ifndef HMG_GUI_CALLBACKS_H
+#define HMG_GUI_CALLBACKS_H
+
+#include <gtk/gtk.h>
+
+void gui_quit(GtkWidget *widget, gpointer user_data);
+
+void on_algorithm_combobox_changed(GtkComboBox *combobox, gpointer user_data);
+void on_size_combobox_changed     (GtkComboBox *combobox, gpointer user_data);
+
+void on_generate_button_clicked   (GtkButton *button, gpointer user_data);
+void on_pgm_save_as_button_clicked(GtkButton *button, gpointer user_data);
+void on_ppm_save_as_button_clicked(GtkButton *button, gpointer user_data);
+void on_new_create_button_clicked (GtkButton *button, gpointer user_data);
+void on_norm2_button_clicked      (GtkButton *button, gpointer user_data);
+void on_blur2_button_clicked      (GtkButton *button, gpointer user_data);
+void on_invert2_button_clicked    (GtkButton *button, gpointer user_data);
+
+gboolean on_view_drawingarea_expose_event (GtkWidget *widget,
+                                    GdkEventExpose *event, gpointer user_data);
+gboolean on_colormap_display_expose_event (GtkWidget *widget,
+                                    GdkEventExpose *event, gpointer user_data);
+
+#endif

Added: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_interface.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,1000 @@
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <string.h>
+#include <stdio.h>
+#include <gdk/gdkkeysyms.h>
+#include <gtk/gtk.h>
+#include "gui_callbacks.h"
+#include "gui_interface.h"
+#include "gui_support.h"
+
+#define GLADE_HOOKUP_OBJECT(component,widget,name) \
+  g_object_set_data_full (G_OBJECT (component), name, \
+    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)
+
+#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
+  g_object_set_data (G_OBJECT (component), name, widget)
+
+GtkWidget * create_hmgengui(void) {
+  GtkWidget *hmgengui, *vbox1, *main_notebook;
+  GtkWidget *view_scrolledwindow, *viewport1, *view_drawingarea, *view_label;
+  GtkWidget *vbox3, *frame1, *alignment1, *hbox1, *label9, *algorithm_combobox;
+  GtkWidget *label10, *size_combobox, *generate_button, *label6, *frame2;
+  GtkWidget *alignment2, *postprocessing_notebook, *table7, *label26, *label27;
+  GtkWidget *norm_min_spinbutton, *norm_max_spinbutton;
+  GtkWidget *norm_first_checkbutton, *norm_last_checkbutton;
+  GtkWidget *normalize_label, *table5, *blur_checkbutton, *label28, *label29;
+  GtkWidget *label30, *blur_sigma_spinbutton, *blur_yradius_spinbutton;
+  GtkWidget *blur_xradius_spinbutton, *blur_label, *table6;
+  GtkWidget *invert_checkbutton, *invert_label, *label7, *frame3;
+  GtkWidget *alignment3, *algosettings_notebook, *table1, *label11, *label12;
+  GtkWidget *label13, *label14, *label15, *ff_seed_spinbutton;
+  GtkWidget *ff_init_spinbutton, *ff_nplates_spinbutton;
+  GtkWidget *ff_upfactor_spinbutton, *ff_downfactor_spinbutton;
+  GtkWidget *ff_label, *table3, *label16, *label17, *label18, *label19;
+  GtkWidget *label20, *label21, *label22, *mpd_roughness_spinbutton;
+  GtkWidget *mpd_displacement_spinbutton, *mpd_br_spinbutton;
+  GtkWidget *mpd_bl_spinbutton, *mpd_tr_spinbutton, *mpd_tl_spinbutton;
+  GtkWidget *mpd_seed_spinbutton, *mpd_label, *table4, *label23, *label24;
+  GtkWidget *label25, *forge_seed_spinbutton, *forge_fracdim_spinbutton;
+  GtkWidget *forge_powscale_spinbutton, *forge_label, *label8, *generate_label;
+  GtkWidget *table8, *label31, *label32, *pgm_save_as_button, *alignment4;
+  GtkWidget *hbox3, *image1, *label33, *ppm_save_as_button, *alignment5;
+  GtkWidget *hbox4, *image2, *label34, *save_label, *vbox4, *image3;
+  GtkWidget *about_message, *about_label, *main_progressbar;
+  GtkWidget *hbox5, *view_sidepanel_notebook, *table9, *label39, *label40;
+  GtkWidget *new_width_spinbutton, *new_height_spinbutton, *new_create_button;
+  GtkWidget *label35, *table10, *label36, *table11, *label37, *table12;
+  GtkWidget *label38, *label41, *new_level_spinbutton, *table13, *label42;
+  GtkWidget *label43, *label44, *norm2_min_spinbutton, *norm2_max_spinbutton;
+  GtkWidget *norm2_button, *label45, *label46, *label47, *vbox5, *hbox7;
+  GtkWidget *blur2_xrad_spinbutton, *blur2_yrad_spinbutton, *colormap_display;
+  GtkWidget *blur2_sigma_spinbutton, *blur2_button, *label48, *invert2_button;
+  GtkWidget *label49, *table14;
+
+  GtkObject *norm_min_spinbutton_adj, *norm_max_spinbutton_adj;
+  GtkObject *blur_sigma_spinbutton_adj, *blur_yradius_spinbutton_adj;
+  GtkObject *blur_xradius_spinbutton_adj, *ff_seed_spinbutton_adj;
+  GtkObject *ff_init_spinbutton_adj, *ff_nplates_spinbutton_adj;
+  GtkObject *ff_upfactor_spinbutton_adj, *ff_downfactor_spinbutton_adj;
+  GtkObject *mpd_roughness_spinbutton_adj, *mpd_displacement_spinbutton_adj;
+  GtkObject *mpd_br_spinbutton_adj, *mpd_bl_spinbutton_adj;
+  GtkObject *mpd_tr_spinbutton_adj, *mpd_tl_spinbutton_adj;
+  GtkObject *mpd_seed_spinbutton_adj, *forge_seed_spinbutton_adj;
+  GtkObject *forge_fracdim_spinbutton_adj, *forge_powscale_spinbutton_adj;
+  GtkObject *new_width_spinbutton_adj, *new_height_spinbutton_adj;
+  GtkObject *new_level_spinbutton_adj, *norm2_min_spinbutton_adj;
+  GtkObject *norm2_max_spinbutton_adj, *blur2_xrad_spinbutton_adj;
+  GtkObject *blur2_yrad_spinbutton_adj, *blur2_sigma_spinbutton_adj;
+
+  hmgengui = gtk_window_new (GTK_WINDOW_TOPLEVEL);
+//  gtk_widget_set_size_request (hmgengui, 800, -1);
+  gtk_window_set_title (GTK_WINDOW (hmgengui), "hmgengui");
+
+  vbox1 = gtk_vbox_new (FALSE, 0);
+  gtk_widget_show (vbox1);
+  gtk_container_add (GTK_CONTAINER (hmgengui), vbox1);
+//  gtk_widget_set_sensitive (vbox1, FALSE);
+
+  main_notebook = gtk_notebook_new ();
+  gtk_widget_show (main_notebook);
+  gtk_box_pack_start (GTK_BOX (vbox1), main_notebook, TRUE, TRUE, 0);
+
+  hbox5 = gtk_hbox_new (FALSE, 0);
+  gtk_widget_show (hbox5);
+  gtk_container_add (GTK_CONTAINER (main_notebook), hbox5);
+
+  view_sidepanel_notebook = gtk_notebook_new ();
+  gtk_widget_show (view_sidepanel_notebook);
+  gtk_box_pack_start (GTK_BOX (hbox5), view_sidepanel_notebook, FALSE, TRUE, 0);
+  gtk_notebook_set_show_border (GTK_NOTEBOOK (view_sidepanel_notebook), FALSE);
+  gtk_notebook_set_tab_pos (GTK_NOTEBOOK (view_sidepanel_notebook), GTK_POS_LEFT);
+
+  table9 = gtk_table_new (5, 3, FALSE);
+  gtk_widget_show (table9);
+  gtk_container_add (GTK_CONTAINER (view_sidepanel_notebook), table9);
+  gtk_container_set_border_width (GTK_CONTAINER (table9), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table9), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table9), 8);
+
+  label39 = gtk_label_new ("Width");
+  gtk_widget_show (label39);
+  gtk_table_attach (GTK_TABLE (table9), label39, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label39), 0, 0.5);
+
+  label40 = gtk_label_new ("Height");
+  gtk_widget_show (label40);
+  gtk_table_attach (GTK_TABLE (table9), label40, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label40), 0, 0.5);
+
+  new_width_spinbutton_adj = gtk_adjustment_new (513, 1, 16385, 1, 10, 10);
+  new_width_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (new_width_spinbutton_adj), 1, 0);
+  gtk_widget_show (new_width_spinbutton);
+  gtk_table_attach (GTK_TABLE (table9), new_width_spinbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  new_height_spinbutton_adj = gtk_adjustment_new (513, 1, 16385, 1, 10, 10);
+  new_height_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (new_height_spinbutton_adj), 1, 0);
+  gtk_widget_show (new_height_spinbutton);
+  gtk_table_attach (GTK_TABLE (table9), new_height_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  new_create_button = gtk_button_new_with_mnemonic ("Create");
+  gtk_widget_show (new_create_button);
+  gtk_table_attach (GTK_TABLE (table9), new_create_button, 1, 2, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  label41 = gtk_label_new ("Level");
+  gtk_widget_show (label41);
+  gtk_table_attach (GTK_TABLE (table9), label41, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label41), 0, 0.5);
+
+  new_level_spinbutton_adj = gtk_adjustment_new (128, 0, 255, 1, 10, 10);
+  new_level_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (new_level_spinbutton_adj), 1, 0);
+  gtk_widget_show (new_level_spinbutton);
+  gtk_table_attach (GTK_TABLE (table9), new_level_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  label35 = gtk_label_new ("New");
+  gtk_widget_show (label35);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (view_sidepanel_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (view_sidepanel_notebook), 0), label35);
+
+  table10 = gtk_table_new (4, 3, FALSE);
+  gtk_widget_show (table10);
+  gtk_container_add (GTK_CONTAINER (view_sidepanel_notebook), table10);
+  gtk_container_set_border_width (GTK_CONTAINER (table10), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table10), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table10), 8);
+
+  label43 = gtk_label_new ("Minimum");
+  gtk_widget_show (label43);
+  gtk_table_attach (GTK_TABLE (table10), label43, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label43), 0, 0.5);
+
+  label44 = gtk_label_new ("Maximum");
+  gtk_widget_show (label44);
+  gtk_table_attach (GTK_TABLE (table10), label44, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label44), 0, 0.5);
+
+  norm2_min_spinbutton_adj = gtk_adjustment_new (0, 0, 255, 1, 10, 10);
+  norm2_min_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (norm2_min_spinbutton_adj), 1, 0);
+  gtk_widget_show (norm2_min_spinbutton);
+  gtk_table_attach (GTK_TABLE (table10), norm2_min_spinbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  norm2_max_spinbutton_adj = gtk_adjustment_new (255, 0, 255, 1, 10, 10);
+  norm2_max_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (norm2_max_spinbutton_adj), 1, 0);
+  gtk_widget_show (norm2_max_spinbutton);
+  gtk_table_attach (GTK_TABLE (table10), norm2_max_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  norm2_button = gtk_button_new_with_mnemonic ("Normalize");
+  gtk_widget_show (norm2_button);
+  gtk_table_attach (GTK_TABLE (table10), norm2_button, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  label36 = gtk_label_new ("Normalize");
+  gtk_widget_show (label36);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (view_sidepanel_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (view_sidepanel_notebook), 1), label36);
+
+  table11 = gtk_table_new (5, 3, FALSE);
+  gtk_widget_show (table11);
+  gtk_container_add (GTK_CONTAINER (view_sidepanel_notebook), table11);
+  gtk_container_set_border_width (GTK_CONTAINER (table11), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table11), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table11), 8);
+
+  label45 = gtk_label_new ("X Radius");
+  gtk_widget_show (label45);
+  gtk_table_attach (GTK_TABLE (table11), label45, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label45), 0, 0.5);
+
+  label46 = gtk_label_new ("Y Radius");
+  gtk_widget_show (label46);
+  gtk_table_attach (GTK_TABLE (table11), label46, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label46), 0, 0.5);
+
+  label47 = gtk_label_new ("Sigma");
+  gtk_widget_show (label47);
+  gtk_table_attach (GTK_TABLE (table11), label47, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label47), 0, 0.5);
+
+  blur2_xrad_spinbutton_adj = gtk_adjustment_new (3, 1, 128, 1, 10, 10);
+  blur2_xrad_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (blur2_xrad_spinbutton_adj), 1, 0);
+  gtk_widget_show (blur2_xrad_spinbutton);
+  gtk_table_attach (GTK_TABLE (table11), blur2_xrad_spinbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  blur2_yrad_spinbutton_adj = gtk_adjustment_new (3, 1, 128, 1, 10, 10);
+  blur2_yrad_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (blur2_yrad_spinbutton_adj), 1, 0);
+  gtk_widget_show (blur2_yrad_spinbutton);
+  gtk_table_attach (GTK_TABLE (table11), blur2_yrad_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  blur2_sigma_spinbutton_adj = gtk_adjustment_new (1, 0, 100, 1, 10, 10);
+  blur2_sigma_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (blur2_sigma_spinbutton_adj), 1, 2);
+  gtk_widget_show (blur2_sigma_spinbutton);
+  gtk_table_attach (GTK_TABLE (table11), blur2_sigma_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_EXPAND | GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  blur2_button = gtk_button_new_with_mnemonic ("Blur");
+  gtk_widget_show (blur2_button);
+  gtk_table_attach (GTK_TABLE (table11), blur2_button, 1, 2, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  label37 = gtk_label_new ("Blur");
+  gtk_widget_show (label37);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (view_sidepanel_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (view_sidepanel_notebook), 2), label37);
+
+  table12 = gtk_table_new (3, 3, FALSE);
+  gtk_widget_show (table12);
+  gtk_container_add (GTK_CONTAINER (view_sidepanel_notebook), table12);
+  gtk_container_set_border_width (GTK_CONTAINER (table12), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table12), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table12), 8);
+
+  label48 = gtk_label_new ("          ");
+  gtk_widget_show (label48);
+  gtk_table_attach (GTK_TABLE (table12), label48, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label48), 0, 0.5);
+
+  invert2_button = gtk_button_new_with_mnemonic ("Invert");
+  gtk_widget_show (invert2_button);
+  gtk_table_attach (GTK_TABLE (table12), invert2_button, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  label38 = gtk_label_new ("Invert");
+  gtk_widget_show (label38);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (view_sidepanel_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (view_sidepanel_notebook), 3), label38);
+
+  view_scrolledwindow = gtk_scrolled_window_new (NULL, NULL);
+  gtk_widget_show (view_scrolledwindow);
+  gtk_box_pack_start (GTK_BOX (hbox5), view_scrolledwindow, TRUE, TRUE, 0);
+
+  viewport1 = gtk_viewport_new (NULL, NULL);
+  gtk_widget_show (viewport1);
+  gtk_container_add (GTK_CONTAINER (view_scrolledwindow), viewport1);
+
+  view_drawingarea = gtk_drawing_area_new ();
+  gtk_widget_show (view_drawingarea);
+  gtk_container_add (GTK_CONTAINER (viewport1), view_drawingarea);
+
+  view_label = gtk_label_new ("2D View");
+  gtk_widget_show (view_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 0), view_label);
+
+  vbox3 = gtk_vbox_new (FALSE, 0);
+  gtk_widget_show (vbox3);
+  gtk_container_add (GTK_CONTAINER (main_notebook), vbox3);
+
+  frame1 = gtk_frame_new (NULL);
+  gtk_widget_show (frame1);
+  gtk_box_pack_start (GTK_BOX (vbox3), frame1, FALSE, FALSE, 0);
+  gtk_container_set_border_width (GTK_CONTAINER (frame1), 8);
+
+  alignment1 = gtk_alignment_new (0.5, 0.5, 1, 1);
+  gtk_widget_show (alignment1);
+  gtk_container_add (GTK_CONTAINER (frame1), alignment1);
+  gtk_container_set_border_width (GTK_CONTAINER (alignment1), 8);
+  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment1), 0, 0, 12, 0);
+
+  hbox1 = gtk_hbox_new (FALSE, 8);
+  gtk_widget_show (hbox1);
+  gtk_container_add (GTK_CONTAINER (alignment1), hbox1);
+
+  label9 = gtk_label_new ("Algorithm");
+  gtk_widget_show (label9);
+  gtk_box_pack_start (GTK_BOX (hbox1), label9, FALSE, FALSE, 0);
+
+  algorithm_combobox = gtk_combo_box_new_text ();
+  gtk_widget_show (algorithm_combobox);
+  gtk_box_pack_start (GTK_BOX (hbox1), algorithm_combobox, FALSE, FALSE, 0);
+  gtk_combo_box_append_text (GTK_COMBO_BOX (algorithm_combobox), "Fault Formation");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (algorithm_combobox), "Midpoint Displacement (plasma)");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (algorithm_combobox), "Forge (ppmforge/gforge/fft'd noise)");
+
+  label10 = gtk_label_new ("Size");
+  gtk_widget_show (label10);
+  gtk_box_pack_start (GTK_BOX (hbox1), label10, FALSE, FALSE, 0);
+
+  size_combobox = gtk_combo_box_new_text ();
+  gtk_widget_show (size_combobox);
+  gtk_box_pack_start (GTK_BOX (hbox1), size_combobox, FALSE, FALSE, 0);
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "3 x 3");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "5 x 5");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "9 x 9");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "17 x 17");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "33 x 33");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "65 x 65");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "129 x 129");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "257 x 257");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "513 x 513");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "1025 x 1025");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "2049 x 2049");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "4097 x 4097");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "8193 x 8193");
+  gtk_combo_box_append_text (GTK_COMBO_BOX (size_combobox), "16385 x 16384");
+
+  generate_button = gtk_button_new_with_mnemonic ("Generate!");
+  gtk_widget_show (generate_button);
+  gtk_box_pack_start (GTK_BOX (hbox1), generate_button, FALSE, FALSE, 0);
+  gtk_widget_set_sensitive (generate_button, FALSE);
+
+  label6 = gtk_label_new ("Main");
+  gtk_widget_show (label6);
+  gtk_frame_set_label_widget (GTK_FRAME (frame1), label6);
+  gtk_label_set_use_markup (GTK_LABEL (label6), TRUE);
+
+  frame2 = gtk_frame_new (NULL);
+  gtk_widget_show (frame2);
+  gtk_box_pack_start (GTK_BOX (vbox3), frame2, FALSE, FALSE, 0);
+  gtk_container_set_border_width (GTK_CONTAINER (frame2), 8);
+
+  alignment2 = gtk_alignment_new (0.5, 0.5, 1, 1);
+  gtk_widget_show (alignment2);
+  gtk_container_add (GTK_CONTAINER (frame2), alignment2);
+  gtk_container_set_border_width (GTK_CONTAINER (alignment2), 8);
+  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment2), 0, 0, 12, 0);
+
+  postprocessing_notebook = gtk_notebook_new ();
+  gtk_widget_show (postprocessing_notebook);
+  gtk_container_add (GTK_CONTAINER (alignment2), postprocessing_notebook);
+
+  table7 = gtk_table_new (4, 4, FALSE);
+  gtk_widget_show (table7);
+  gtk_container_add (GTK_CONTAINER (postprocessing_notebook), table7);
+  gtk_container_set_border_width (GTK_CONTAINER (table7), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table7), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table7), 8);
+
+  label26 = gtk_label_new ("Minimum");
+  gtk_widget_show (label26);
+  gtk_table_attach (GTK_TABLE (table7), label26, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label26), 0, 0.5);
+
+  label27 = gtk_label_new ("Maximum");
+  gtk_widget_show (label27);
+  gtk_table_attach (GTK_TABLE (table7), label27, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label27), 0, 0.5);
+
+  norm_min_spinbutton_adj = gtk_adjustment_new (0, 0, 255, 1, 10, 10);
+  norm_min_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (norm_min_spinbutton_adj), 1, 0);
+  gtk_widget_show (norm_min_spinbutton);
+  gtk_table_attach (GTK_TABLE (table7), norm_min_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  norm_max_spinbutton_adj = gtk_adjustment_new (255, 0, 255, 1, 10, 10);
+  norm_max_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (norm_max_spinbutton_adj), 1, 0);
+  gtk_widget_show (norm_max_spinbutton);
+  gtk_table_attach (GTK_TABLE (table7), norm_max_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  norm_first_checkbutton = gtk_check_button_new_with_mnemonic ("First");
+  gtk_widget_show (norm_first_checkbutton);
+  gtk_table_attach (GTK_TABLE (table7), norm_first_checkbutton, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  norm_last_checkbutton = gtk_check_button_new_with_mnemonic ("Last");
+  gtk_widget_show (norm_last_checkbutton);
+  gtk_table_attach (GTK_TABLE (table7), norm_last_checkbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  normalize_label = gtk_label_new ("Normalize");
+  gtk_widget_show (normalize_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (postprocessing_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (postprocessing_notebook), 0), normalize_label);
+
+  table5 = gtk_table_new (5, 3, FALSE);
+  gtk_widget_show (table5);
+  gtk_container_add (GTK_CONTAINER (postprocessing_notebook), table5);
+  gtk_container_set_border_width (GTK_CONTAINER (table5), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table5), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table5), 8);
+
+  blur_checkbutton = gtk_check_button_new_with_mnemonic ("Enable");
+  gtk_widget_show (blur_checkbutton);
+  gtk_table_attach (GTK_TABLE (table5), blur_checkbutton, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  label28 = gtk_label_new ("X Radius");
+  gtk_widget_show (label28);
+  gtk_table_attach (GTK_TABLE (table5), label28, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label28), 0, 0.5);
+
+  label29 = gtk_label_new ("Y Radius");
+  gtk_widget_show (label29);
+  gtk_table_attach (GTK_TABLE (table5), label29, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label29), 0, 0.5);
+
+  label30 = gtk_label_new ("Sigma");
+  gtk_widget_show (label30);
+  gtk_table_attach (GTK_TABLE (table5), label30, 0, 1, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label30), 0, 0.5);
+
+  blur_sigma_spinbutton_adj = gtk_adjustment_new (1, 0, 100, 1, 10, 10);
+  blur_sigma_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (blur_sigma_spinbutton_adj), 1, 2);
+  gtk_widget_show (blur_sigma_spinbutton);
+  gtk_table_attach (GTK_TABLE (table5), blur_sigma_spinbutton, 1, 2, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  blur_yradius_spinbutton_adj = gtk_adjustment_new (3, 1, 128, 1, 10, 10);
+  blur_yradius_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (blur_yradius_spinbutton_adj), 1, 0);
+  gtk_widget_show (blur_yradius_spinbutton);
+  gtk_table_attach (GTK_TABLE (table5), blur_yradius_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  blur_xradius_spinbutton_adj = gtk_adjustment_new (3, 1, 128, 1, 10, 10);
+  blur_xradius_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (blur_xradius_spinbutton_adj), 1, 0);
+  gtk_widget_show (blur_xradius_spinbutton);
+  gtk_table_attach (GTK_TABLE (table5), blur_xradius_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  blur_label = gtk_label_new ("Blur");
+  gtk_widget_show (blur_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (postprocessing_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (postprocessing_notebook), 1), blur_label);
+
+  table6 = gtk_table_new (2, 2, FALSE);
+  gtk_widget_show (table6);
+  gtk_container_add (GTK_CONTAINER (postprocessing_notebook), table6);
+  gtk_container_set_border_width (GTK_CONTAINER (table6), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table6), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table6), 8);
+
+  invert_checkbutton = gtk_check_button_new_with_mnemonic ("Enable");
+  gtk_widget_show (invert_checkbutton);
+  gtk_table_attach (GTK_TABLE (table6), invert_checkbutton, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  invert_label = gtk_label_new ("Invert");
+  gtk_widget_show (invert_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (postprocessing_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (postprocessing_notebook), 2), invert_label);
+
+  label7 = gtk_label_new ("Postprocessing");
+  gtk_widget_show (label7);
+  gtk_frame_set_label_widget (GTK_FRAME (frame2), label7);
+  gtk_label_set_use_markup (GTK_LABEL (label7), TRUE);
+
+  frame3 = gtk_frame_new (NULL);
+  gtk_widget_show (frame3);
+  gtk_box_pack_start (GTK_BOX (vbox3), frame3, FALSE, FALSE, 0);
+  gtk_container_set_border_width (GTK_CONTAINER (frame3), 8);
+
+  alignment3 = gtk_alignment_new (0.5, 0.5, 1, 1);
+  gtk_widget_show (alignment3);
+  gtk_container_add (GTK_CONTAINER (frame3), alignment3);
+  gtk_container_set_border_width (GTK_CONTAINER (alignment3), 8);
+  gtk_alignment_set_padding (GTK_ALIGNMENT (alignment3), 0, 0, 12, 0);
+
+  algosettings_notebook = gtk_notebook_new ();
+  gtk_notebook_set_show_tabs(GTK_NOTEBOOK(algosettings_notebook), FALSE);
+  gtk_widget_show (algosettings_notebook);
+  gtk_container_add (GTK_CONTAINER (alignment3), algosettings_notebook);
+
+  table1 = gtk_table_new (6, 3, FALSE);
+  gtk_widget_show (table1);
+  gtk_container_add (GTK_CONTAINER (algosettings_notebook), table1);
+  gtk_container_set_border_width (GTK_CONTAINER (table1), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table1), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table1), 8);
+
+  label11 = gtk_label_new ("Seed");
+  gtk_widget_show (label11);
+  gtk_table_attach (GTK_TABLE (table1), label11, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label11), 0, 0.5);
+
+  label12 = gtk_label_new ("Initial Height");
+  gtk_widget_show (label12);
+  gtk_table_attach (GTK_TABLE (table1), label12, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label12), 0, 0.5);
+
+  label13 = gtk_label_new ("Number of Plates");
+  gtk_widget_show (label13);
+  gtk_table_attach (GTK_TABLE (table1), label13, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label13), 0, 0.5);
+
+  label14 = gtk_label_new ("Up Factor");
+  gtk_widget_show (label14);
+  gtk_table_attach (GTK_TABLE (table1), label14, 0, 1, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label14), 0, 0.5);
+
+  label15 = gtk_label_new ("Down Factor");
+  gtk_widget_show (label15);
+  gtk_table_attach (GTK_TABLE (table1), label15, 0, 1, 4, 5,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label15), 0, 0.5);
+
+  ff_seed_spinbutton_adj = gtk_adjustment_new (42, 0, 2147469952, 1, 10, 10);
+  ff_seed_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (ff_seed_spinbutton_adj), 1, 0);
+  gtk_widget_show (ff_seed_spinbutton);
+  gtk_table_attach (GTK_TABLE (table1), ff_seed_spinbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  ff_init_spinbutton_adj = gtk_adjustment_new (128, 0, 255, 1, 10, 10);
+  ff_init_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (ff_init_spinbutton_adj), 1, 0);
+  gtk_widget_show (ff_init_spinbutton);
+  gtk_table_attach (GTK_TABLE (table1), ff_init_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  ff_nplates_spinbutton_adj = gtk_adjustment_new (512, 1, 65536, 1, 10, 10);
+  ff_nplates_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (ff_nplates_spinbutton_adj), 1, 0);
+  gtk_widget_show (ff_nplates_spinbutton);
+  gtk_table_attach (GTK_TABLE (table1), ff_nplates_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  ff_upfactor_spinbutton_adj = gtk_adjustment_new (1, 0, 255, 1, 10, 10);
+  ff_upfactor_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (ff_upfactor_spinbutton_adj), 1, 0);
+  gtk_widget_show (ff_upfactor_spinbutton);
+  gtk_table_attach (GTK_TABLE (table1), ff_upfactor_spinbutton, 1, 2, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  ff_downfactor_spinbutton_adj = gtk_adjustment_new (1, 0, 255, 1, 10, 10);
+  ff_downfactor_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (ff_downfactor_spinbutton_adj), 1, 0);
+  gtk_widget_show (ff_downfactor_spinbutton);
+  gtk_table_attach (GTK_TABLE (table1), ff_downfactor_spinbutton, 1, 2, 4, 5,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  ff_label = gtk_label_new ("FF");
+  gtk_widget_show (ff_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (algosettings_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (algosettings_notebook), 0), ff_label);
+
+  table3 = gtk_table_new (8, 3, FALSE);
+  gtk_widget_show (table3);
+  gtk_container_add (GTK_CONTAINER (algosettings_notebook), table3);
+  gtk_container_set_border_width (GTK_CONTAINER (table3), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table3), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table3), 8);
+
+  label16 = gtk_label_new ("Seed");
+  gtk_widget_show (label16);
+  gtk_table_attach (GTK_TABLE (table3), label16, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label16), 0, 0.5);
+
+  label17 = gtk_label_new ("Top Left");
+  gtk_widget_show (label17);
+  gtk_table_attach (GTK_TABLE (table3), label17, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label17), 0, 0.5);
+
+  label18 = gtk_label_new ("Top Right");
+  gtk_widget_show (label18);
+  gtk_table_attach (GTK_TABLE (table3), label18, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label18), 0, 0.5);
+
+  label19 = gtk_label_new ("Bottom Left");
+  gtk_widget_show (label19);
+  gtk_table_attach (GTK_TABLE (table3), label19, 0, 1, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label19), 0, 0.5);
+
+  label20 = gtk_label_new ("Bottom Right");
+  gtk_widget_show (label20);
+  gtk_table_attach (GTK_TABLE (table3), label20, 0, 1, 4, 5,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label20), 0, 0.5);
+
+  label21 = gtk_label_new ("Displacement");
+  gtk_widget_show (label21);
+  gtk_table_attach (GTK_TABLE (table3), label21, 0, 1, 5, 6,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label21), 0, 0.5);
+
+  label22 = gtk_label_new ("Roughness");
+  gtk_widget_show (label22);
+  gtk_table_attach (GTK_TABLE (table3), label22, 0, 1, 6, 7,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label22), 0, 0.5);
+
+  mpd_roughness_spinbutton_adj = gtk_adjustment_new (0.6, 0, 2, 0.00999999977648, 0.10000000149, 1);
+  mpd_roughness_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_roughness_spinbutton_adj), 1, 2);
+  gtk_widget_show (mpd_roughness_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_roughness_spinbutton, 1, 2, 6, 7,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_displacement_spinbutton_adj = gtk_adjustment_new (64, 0, 255, 1, 10, 10);
+  mpd_displacement_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_displacement_spinbutton_adj), 1, 0);
+  gtk_widget_show (mpd_displacement_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_displacement_spinbutton, 1, 2, 5, 6,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_br_spinbutton_adj = gtk_adjustment_new (128, 0, 255, 1, 10, 10);
+  mpd_br_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_br_spinbutton_adj), 1, 0);
+  gtk_widget_show (mpd_br_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_br_spinbutton, 1, 2, 4, 5,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_bl_spinbutton_adj = gtk_adjustment_new (128, 0, 255, 1, 10, 10);
+  mpd_bl_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_bl_spinbutton_adj), 1, 0);
+  gtk_widget_show (mpd_bl_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_bl_spinbutton, 1, 2, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_tr_spinbutton_adj = gtk_adjustment_new (128, 0, 255, 1, 10, 10);
+  mpd_tr_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_tr_spinbutton_adj), 1, 0);
+  gtk_widget_show (mpd_tr_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_tr_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_tl_spinbutton_adj = gtk_adjustment_new (128, 0, 255, 1, 10, 10);
+  mpd_tl_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_tl_spinbutton_adj), 1, 0);
+  gtk_widget_show (mpd_tl_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_tl_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_seed_spinbutton_adj = gtk_adjustment_new (42, 0, 2147469952, 1, 10, 10);
+  mpd_seed_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (mpd_seed_spinbutton_adj), 1, 0);
+  gtk_widget_show (mpd_seed_spinbutton);
+  gtk_table_attach (GTK_TABLE (table3), mpd_seed_spinbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  mpd_label = gtk_label_new ("MPD");
+  gtk_widget_show (mpd_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (algosettings_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (algosettings_notebook), 1), mpd_label);
+
+  table4 = gtk_table_new (4, 3, FALSE);
+  gtk_widget_show (table4);
+  gtk_container_add (GTK_CONTAINER (algosettings_notebook), table4);
+  gtk_container_set_border_width (GTK_CONTAINER (table4), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table4), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table4), 8);
+
+  label23 = gtk_label_new ("Seed");
+  gtk_widget_show (label23);
+  gtk_table_attach (GTK_TABLE (table4), label23, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label23), 0, 0.5);
+
+  label24 = gtk_label_new ("Fractal Dimension");
+  gtk_widget_show (label24);
+  gtk_table_attach (GTK_TABLE (table4), label24, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label24), 0, 0.5);
+
+  label25 = gtk_label_new ("Power Scale");
+  gtk_widget_show (label25);
+  gtk_table_attach (GTK_TABLE (table4), label25, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label25), 0, 0.5);
+
+  forge_seed_spinbutton_adj = gtk_adjustment_new (47, 0, 2147469952, 1, 10, 10);
+  forge_seed_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (forge_seed_spinbutton_adj), 1, 0);
+  gtk_widget_show (forge_seed_spinbutton);
+  gtk_table_attach (GTK_TABLE (table4), forge_seed_spinbutton, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  forge_fracdim_spinbutton_adj = gtk_adjustment_new (2.40000009537, 0, 3, 0.00999999977648, 0.10000000149, 1);
+  forge_fracdim_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (forge_fracdim_spinbutton_adj), 1, 2);
+  gtk_widget_show (forge_fracdim_spinbutton);
+  gtk_table_attach (GTK_TABLE (table4), forge_fracdim_spinbutton, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  forge_powscale_spinbutton_adj = gtk_adjustment_new (1, 0, 8, 0.00999999977648, 0.10000000149, 1);
+  forge_powscale_spinbutton = gtk_spin_button_new (GTK_ADJUSTMENT (forge_powscale_spinbutton_adj), 1, 2);
+  gtk_widget_show (forge_powscale_spinbutton);
+  gtk_table_attach (GTK_TABLE (table4), forge_powscale_spinbutton, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  forge_label = gtk_label_new ("Forge");
+  gtk_widget_show (forge_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (algosettings_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (algosettings_notebook), 2), forge_label);
+
+  label8 = gtk_label_new ("Algorithm Settings");
+  gtk_widget_show (label8);
+  gtk_frame_set_label_widget (GTK_FRAME (frame3), label8);
+  gtk_label_set_use_markup (GTK_LABEL (label8), TRUE);
+
+  generate_label = gtk_label_new ("Generate");
+  gtk_widget_show (generate_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 1), generate_label);
+
+  vbox5 = gtk_vbox_new (FALSE, 8);
+  gtk_widget_show (vbox5);
+  gtk_container_add (GTK_CONTAINER (main_notebook), vbox5);
+  gtk_container_set_border_width (GTK_CONTAINER (vbox5), 8);
+
+  hbox7 = gtk_hbox_new (FALSE, 0);
+  gtk_widget_show (hbox7);
+  gtk_box_pack_start (GTK_BOX (vbox5), hbox7, FALSE, FALSE, 0);
+
+  colormap_display = gtk_drawing_area_new();
+  gtk_widget_show (colormap_display);
+  gtk_box_pack_start (GTK_BOX (hbox7), colormap_display, FALSE, FALSE, 0);
+  gtk_widget_set_size_request (colormap_display, 258, 32);
+
+  table14 = gtk_table_new (3, 3, FALSE);
+  gtk_widget_show (table14);
+  gtk_box_pack_start (GTK_BOX (vbox5), table14, TRUE, TRUE, 0);
+
+  label49 = gtk_label_new ("Colormap");
+  gtk_widget_show (label49);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 2), label49);
+
+  table13 = gtk_table_new (3, 3, FALSE);
+  gtk_widget_show (table13);
+  gtk_container_add (GTK_CONTAINER (main_notebook), table13);
+
+  label42 = gtk_label_new ("Import");
+  gtk_widget_show (label42);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 3), label42);
+
+  table8 = gtk_table_new (3, 3, FALSE);
+  gtk_widget_show (table8);
+  gtk_container_add (GTK_CONTAINER (main_notebook), table8);
+  gtk_container_set_border_width (GTK_CONTAINER (table8), 8);
+  gtk_table_set_row_spacings (GTK_TABLE (table8), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table8), 8);
+
+  label31 = gtk_label_new ("PGM");
+  gtk_widget_show (label31);
+  gtk_table_attach (GTK_TABLE (table8), label31, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label31), 0, 0.5);
+
+  label32 = gtk_label_new ("PPM");
+  gtk_widget_show (label32);
+  gtk_table_attach (GTK_TABLE (table8), label32, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_misc_set_alignment (GTK_MISC (label32), 0, 0.5);
+
+  pgm_save_as_button = gtk_button_new ();
+  gtk_widget_show (pgm_save_as_button);
+  gtk_table_attach (GTK_TABLE (table8), pgm_save_as_button, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_widget_set_sensitive (pgm_save_as_button, FALSE);
+
+  alignment4 = gtk_alignment_new (0.5, 0.5, 0, 0);
+  gtk_widget_show (alignment4);
+  gtk_container_add (GTK_CONTAINER (pgm_save_as_button), alignment4);
+
+  hbox3 = gtk_hbox_new (FALSE, 2);
+  gtk_widget_show (hbox3);
+  gtk_container_add (GTK_CONTAINER (alignment4), hbox3);
+
+  image1 = gtk_image_new_from_stock ("gtk-save-as", GTK_ICON_SIZE_BUTTON);
+  gtk_widget_show (image1);
+  gtk_box_pack_start (GTK_BOX (hbox3), image1, FALSE, FALSE, 0);
+
+  label33 = gtk_label_new_with_mnemonic ("Save As...");
+  gtk_widget_show (label33);
+  gtk_box_pack_start (GTK_BOX (hbox3), label33, FALSE, FALSE, 0);
+
+  ppm_save_as_button = gtk_button_new ();
+  gtk_widget_show (ppm_save_as_button);
+  gtk_table_attach (GTK_TABLE (table8), ppm_save_as_button, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+  gtk_widget_set_sensitive (ppm_save_as_button, FALSE);
+
+  alignment5 = gtk_alignment_new (0.5, 0.5, 0, 0);
+  gtk_widget_show (alignment5);
+  gtk_container_add (GTK_CONTAINER (ppm_save_as_button), alignment5);
+
+  hbox4 = gtk_hbox_new (FALSE, 2);
+  gtk_widget_show (hbox4);
+  gtk_container_add (GTK_CONTAINER (alignment5), hbox4);
+
+  image2 = gtk_image_new_from_stock ("gtk-save-as", GTK_ICON_SIZE_BUTTON);
+  gtk_widget_show (image2);
+  gtk_box_pack_start (GTK_BOX (hbox4), image2, FALSE, FALSE, 0);
+
+  label34 = gtk_label_new_with_mnemonic ("Save As...");
+  gtk_widget_show (label34);
+  gtk_box_pack_start (GTK_BOX (hbox4), label34, FALSE, FALSE, 0);
+
+  save_label = gtk_label_new ("Export");
+  gtk_widget_show (save_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 4), save_label);
+
+  vbox4 = gtk_vbox_new (FALSE, 0);
+  gtk_widget_show (vbox4);
+  gtk_container_add (GTK_CONTAINER (main_notebook), vbox4);
+
+  image3 = create_pixmap (hmgengui, "hmgen.png");
+  gtk_widget_show (image3);
+  gtk_box_pack_start (GTK_BOX (vbox4), image3, FALSE, FALSE, 64);
+
+  about_message = gtk_label_new("\nVersion 0.9.0");
+  gtk_widget_show (about_message);
+  gtk_box_pack_start (GTK_BOX (vbox4), about_message, FALSE, FALSE, 0);
+  gtk_label_set_justify (GTK_LABEL (about_message), GTK_JUSTIFY_CENTER);
+
+  about_label = gtk_label_new ("About...");
+  gtk_widget_show (about_label);
+  gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 5), about_label);
+
+  main_progressbar = gtk_progress_bar_new ();
+  gtk_widget_show (main_progressbar);
+  gtk_box_pack_start (GTK_BOX (vbox1), main_progressbar, FALSE, FALSE, 0);
+  gtk_progress_bar_set_text (GTK_PROGRESS_BAR (main_progressbar), "Idle...");
+
+  g_signal_connect ((gpointer) hmgengui, "delete_event",
+                    G_CALLBACK (gui_quit),
+                    NULL);
+  g_signal_connect ((gpointer) view_drawingarea, "expose_event",
+                    G_CALLBACK (on_view_drawingarea_expose_event),
+                    NULL);
+  g_signal_connect ((gpointer) algorithm_combobox, "changed",
+                    G_CALLBACK (on_algorithm_combobox_changed),
+                    NULL);
+  g_signal_connect ((gpointer) size_combobox, "changed",
+                    G_CALLBACK (on_size_combobox_changed),
+                    NULL);
+  g_signal_connect ((gpointer) generate_button, "clicked",
+                    G_CALLBACK (on_generate_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) pgm_save_as_button, "clicked",
+                    G_CALLBACK (on_pgm_save_as_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) ppm_save_as_button, "clicked",
+                    G_CALLBACK (on_ppm_save_as_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) new_create_button, "clicked",
+                    G_CALLBACK (on_new_create_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) norm2_button, "clicked",
+                    G_CALLBACK (on_norm2_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) blur2_button, "clicked",
+                    G_CALLBACK (on_blur2_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) invert2_button, "clicked",
+                    G_CALLBACK (on_invert2_button_clicked),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_display, "expose_event",
+                    G_CALLBACK (on_colormap_display_expose_event),
+                    NULL);
+
+  /* Store pointers to all widgets, for use by lookup_widget(). */
+  GLADE_HOOKUP_OBJECT_NO_REF (hmgengui, hmgengui, "hmgengui");
+  GLADE_HOOKUP_OBJECT (hmgengui, main_notebook, "main_notebook");
+  GLADE_HOOKUP_OBJECT (hmgengui, view_scrolledwindow, "view_scrolledwindow");
+  GLADE_HOOKUP_OBJECT (hmgengui, view_drawingarea, "view_drawingarea");
+  GLADE_HOOKUP_OBJECT (hmgengui, view_label, "view_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, algorithm_combobox, "algorithm_combobox");
+  GLADE_HOOKUP_OBJECT (hmgengui, size_combobox, "size_combobox");
+  GLADE_HOOKUP_OBJECT (hmgengui, generate_button, "generate_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, postprocessing_notebook, "postprocessing_notebook");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm_min_spinbutton, "norm_min_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm_max_spinbutton, "norm_max_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm_first_checkbutton, "norm_first_checkbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm_last_checkbutton, "norm_last_checkbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, normalize_label, "normalize_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur_checkbutton, "blur_checkbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur_sigma_spinbutton, "blur_sigma_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur_yradius_spinbutton, "blur_yradius_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur_xradius_spinbutton, "blur_xradius_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur_label, "blur_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, invert_checkbutton, "invert_checkbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, invert_label, "invert_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, algosettings_notebook, "algosettings_notebook");
+  GLADE_HOOKUP_OBJECT (hmgengui, ff_seed_spinbutton, "ff_seed_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, ff_init_spinbutton, "ff_init_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, ff_nplates_spinbutton, "ff_nplates_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, ff_upfactor_spinbutton, "ff_upfactor_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, ff_downfactor_spinbutton, "ff_downfactor_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, ff_label, "ff_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_roughness_spinbutton, "mpd_roughness_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_displacement_spinbutton, "mpd_displacement_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_br_spinbutton, "mpd_br_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_bl_spinbutton, "mpd_bl_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_tr_spinbutton, "mpd_tr_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_tl_spinbutton, "mpd_tl_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_seed_spinbutton, "mpd_seed_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, mpd_label, "mpd_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, forge_seed_spinbutton, "forge_seed_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, forge_fracdim_spinbutton, "forge_fracdim_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, forge_powscale_spinbutton, "forge_powscale_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, forge_label, "forge_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, generate_label, "generate_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, pgm_save_as_button, "pgm_save_as_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, ppm_save_as_button, "ppm_save_as_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, save_label, "save_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, about_message, "about_message");
+  GLADE_HOOKUP_OBJECT (hmgengui, about_label, "about_label");
+  GLADE_HOOKUP_OBJECT (hmgengui, main_progressbar, "main_progressbar");
+  GLADE_HOOKUP_OBJECT (hmgengui, view_sidepanel_notebook, "view_sidepanel_note book");
+  GLADE_HOOKUP_OBJECT (hmgengui, new_width_spinbutton, "new_width_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, new_height_spinbutton, "new_height_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, new_create_button, "new_create_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, new_level_spinbutton, "new_level_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm2_min_spinbutton, "norm2_min_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm2_max_spinbutton, "norm2_max_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, norm2_button, "norm2_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur2_xrad_spinbutton, "blur2_xrad_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur2_yrad_spinbutton, "blur2_yrad_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur2_sigma_spinbutton, "blur2_sigma_spinbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, blur2_button, "blur2_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, invert2_button, "invert2_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_display, "colormap_display");
+
+  gtk_notebook_set_current_page(GTK_NOTEBOOK(main_notebook), 1);
+
+  return hmgengui;
+}
+

Added: trunk/gui_interface.h
===================================================================
--- trunk/gui_interface.h	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_interface.h	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,8 @@
+#ifndef HMG_GUI_INTERFACE_H
+#define HMG_GUI_INTERFACE_H
+
+#include <gtk/gtk.h>
+
+GtkWidget* create_hmgengui (void);
+
+#endif

Added: trunk/gui_main.c
===================================================================
--- trunk/gui_main.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_main.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,31 @@
+#include <gtk/gtk.h>
+#include <locale.h>
+#include <stdlib.h>
+#include "gui_interface.h"
+#include "gui_support.h"
+#include "lib_hmgen.c"
+
+int main(int argc, char *argv[]) {
+    GtkWidget *hmgengui;
+
+    gtk_disable_setlocale();
+    setlocale(LC_ALL, "C");
+
+    hmg_init_colormap();
+
+    g_thread_init(NULL);
+    gdk_threads_init();
+    gdk_threads_enter();
+
+    gtk_init(&argc, &argv);
+
+    add_pixmap_directory (".");
+
+    hmgengui = create_hmgengui();
+    gtk_widget_show(hmgengui);
+
+    gtk_main ();
+    gdk_threads_leave();
+
+    return 0;
+}

Added: trunk/gui_support.c
===================================================================
--- trunk/gui_support.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_support.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,97 @@
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <unistd.h>
+#include <string.h>
+#include <stdio.h>
+#include <gtk/gtk.h>
+#include "gui_support.h"
+#include "lib_hmgen.h"
+
+GtkWidget *lookup_widget(GtkWidget *widget, const gchar *widget_name) {
+    GtkWidget *parent, *found_widget;
+
+    for(;;) {
+        if (GTK_IS_MENU (widget))
+            parent = gtk_menu_get_attach_widget (GTK_MENU (widget));
+        else
+            parent = widget->parent;
+        if (!parent)
+            parent = (GtkWidget*) g_object_get_data(G_OBJECT(widget),
+                                                            "GladeParentKey");
+        if (parent == NULL)
+            break;
+        widget = parent;
+    }
+
+    found_widget = (GtkWidget*)g_object_get_data(G_OBJECT(widget),widget_name);
+    if (!found_widget)
+        g_warning ("Widget not found: %s", widget_name);
+    return found_widget;
+}
+
+static GList *pixmaps_directories = NULL;
+
+void add_pixmap_directory(const gchar *directory) {
+    pixmaps_directories = g_list_prepend(pixmaps_directories,
+                                                        g_strdup(directory));
+}
+
+static gchar* find_pixmap_file(const gchar *filename) {
+    GList *elem;
+
+    elem = pixmaps_directories;
+    while (elem) {
+        gchar *pathname = g_strdup_printf ("%s%s%s", (gchar*)elem->data,
+                                                 G_DIR_SEPARATOR_S, filename);
+        if (g_file_test(pathname, G_FILE_TEST_EXISTS))
+            return pathname;
+        g_free(pathname);
+        elem = elem->next;
+    }
+    return NULL;
+}
+
+GtkWidget* create_pixmap(GtkWidget *widget HMG_ATTR_UNUSED,
+                         const gchar *filename) {
+    gchar *pathname = NULL;
+    GtkWidget *pixmap;
+
+    if (!filename || !filename[0])
+        return gtk_image_new();
+
+    pathname = find_pixmap_file(filename);
+
+    if (!pathname) {
+        g_warning ("Couldn't find pixmap file: %s", filename);
+        return gtk_image_new ();
+    }
+
+    pixmap = gtk_image_new_from_file(pathname);
+    g_free(pathname);
+    return pixmap;
+}
+
+GdkPixbuf* create_pixbuf(const gchar *filename) {
+    gchar *pathname = NULL;
+    GdkPixbuf *pixbuf;
+    GError *error = NULL;
+
+    if (!filename || !filename[0])
+        return NULL;
+
+    pathname = find_pixmap_file(filename);
+
+    if (!pathname) {
+        g_warning("Couldn't find pixmap file: %s", filename);
+        return NULL;
+    }
+
+    pixbuf = gdk_pixbuf_new_from_file(pathname, &error);
+    if (!pixbuf) {
+      fprintf(stderr, "Failed to load pixbuf file: %s: %s\n", pathname,
+                                                            error->message);
+      g_error_free(error);
+    }
+    g_free(pathname);
+    return pixbuf;
+}

Added: trunk/gui_support.h
===================================================================
--- trunk/gui_support.h	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/gui_support.h	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,12 @@
+#ifndef HMG_GUI_SUPPORT_H
+#define HMG_GUI_SUPPORT_H
+
+#include <gtk/gtk.h>
+
+GtkWidget* lookup_widget(GtkWidget *widget, const gchar *widget_name);
+void add_pixmap_directory(const gchar *directory);
+
+GtkWidget*  create_pixmap(GtkWidget *widget, const gchar *filename);
+GdkPixbuf*  create_pixbuf(const gchar *filename);
+
+#endif

Added: trunk/hmgen.png
===================================================================
(Binary files differ)


Property changes on: trunk/hmgen.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/lib_algo_ff.c
===================================================================
--- trunk/lib_algo_ff.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_algo_ff.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,103 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <math.h>
+#include "lib_hmgen.h"
+
+#define HMGEN_MODULE "Fault Formation"
+
+static struct ff_settings_s {
+    unsigned int seed;
+    unsigned char init_value;
+    unsigned int number_of_plates;
+    unsigned int up_factor;
+    unsigned int down_factor;
+} ff_settings = { 42, 128, 512, 1, 1 };
+
+static const hmg_param_t params_ff[] = {
+    { "seed=", &ff_settings.seed, 0.0, 4294967295.0, PARAM_INT },
+    { "init=", &ff_settings.init_value, 0.0, 255.0, PARAM_CHAR },
+    { "n=", &ff_settings.number_of_plates, 0.0, 4294967295.0, PARAM_INT },
+    { "up=", &ff_settings.up_factor, 0.0, 255.0, PARAM_INT },
+    { "down=", &ff_settings.down_factor, 0.0, 255.0, PARAM_INT },
+    { NULL, NULL, 0, 0, 0 }
+};
+
+static void algo_ff(unsigned char *map, unsigned char *tempmap HMG_ATTR_UNUSED,
+                    unsigned int w, unsigned int h) {
+    unsigned int x, y, a = 0, b = 0, c = 0, d = 0, side, i;
+    int t;
+    float r;
+
+    srand(ff_settings.seed);
+
+    for (x=0; x<w; x++)
+        for (y=0; y<h; y++)
+            map[x+y*w] = ff_settings.init_value;
+
+    for (i=0; i<ff_settings.number_of_plates; i++) {
+        progress_meter((int)round(i*100.0/(ff_settings.number_of_plates-1)));
+        switch (rand()&3) {
+        case 0:
+            a = 0;
+            b = rand() % h;
+            break;
+        case 1:
+            a = rand() % w;
+            b = 0;
+            break;
+        case 2:
+            a = w-1;
+            b = rand() % h;
+            break;
+        case 3:
+            a = rand() % w;
+            b = h-1;
+            break;
+        }
+        do {
+            switch (rand()&3) {
+            case 0:
+                c = 0;
+                d = rand() % h;
+                break;
+            case 1:
+                c = rand() % w;
+                d = 0;
+                break;
+            case 2:
+                c = w-1;
+                d = rand() % h;
+                break;
+            case 3:
+                c = rand() % w;
+                d = h-1;
+                break;
+            }
+        } while (a == c || b == d);
+
+        side = rand()&1;
+
+        for (x=0; x<w; x++) {
+            for (y=0; y<h; y++) {
+                r = (float) y - b - (((float)d-b)/((float)c-a)) * ((float)x - (float)a);
+                r *= side ? -1 : 1;
+                if (r>0) {
+                    t = (int)map[x+y*w] + ff_settings.up_factor;
+                    map[x+y*w] = t>255 ? 255 : t;
+                } else {
+                    t = (int)map[x+y*w] - ff_settings.down_factor;
+                    map[x+y*w] = t<0 ? 0 : t;
+                }
+            }
+        }
+    }
+    progress_meter(-1);
+}
+
+const hmg_algorithm_t hmg_algo_ff_info = {
+    "Fault Formation",
+    algo_ff,
+    params_ff
+};
+

Added: trunk/lib_algo_forge.c
===================================================================
--- trunk/lib_algo_forge.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_algo_forge.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,293 @@
+/* This code is mostly taken from ppmforge.c
+ * Author: John Walker http://www.fourmilab.ch/ (C)1989
+ *
+ * Permission  to  use, copy, modify, and distribute this software and
+ * its documentation  for  any  purpose  and  without  fee  is  hereby
+ * granted,  without any conditions or restrictions.  This software is
+ * provided "as is" without express or implied warranty.
+ *
+ * Modifications and adaptation by Ivo van Poorten (C)2007
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#define _XOPEN_SOURCE
+#define __USE_XOPEN
+#include <math.h>
+#include <assert.h>
+#include "lib_hmgen.h"
+
+#define HMGEN_MODULE "Forge"
+
+#ifndef M_PI
+#define M_PI 3.14159265358979323846
+#endif
+
+#define hugeVal HUGE_VAL
+
+#define MIN(a,b)    (a<b?a:b)
+#define MAX(a,b)    (a>b?a:b)
+
+extern double arand;
+
+static struct forge_settings_s {
+    unsigned int seed;
+    double fracdim;
+    double powscale;
+} forge_settings = { 47, 2.4, 1.2 };
+
+static const hmg_param_t params_forge[] = {
+    { "seed=", &forge_settings.seed, 0.0, 4294967295.0, PARAM_INT },
+    { "fracdim=", &forge_settings.fracdim, 0.0, 3.0, PARAM_DOUBLE },
+    { "powscale=", &forge_settings.powscale, 0.0, 8.0, PARAM_DOUBLE },
+    { NULL, NULL, 0, 0, 0 }
+};
+
+static int meshsize;
+
+#define Real(v, x, y)  v[1 + (((x) * meshsize) + (y)) * 2]
+#define Imag(v, x, y)  v[2 + (((x) * meshsize) + (y)) * 2]
+
+/* FOURN  --  Multi-dimensional fast Fourier transform
+ *
+ * data     A one-dimensional array of floats (NOTE!!! NOT DOUBLES!!)
+ *          indexed from one (NOTE!!! NOT ZERO!!), containing  pairs of
+ *          numbers representing the complex valued samples. The Fourier
+ *          transformed results  are returned in the same array.
+ *
+ * nn       An  array specifying the edge size in each dimension. THIS ARRAY
+ *          IS INDEXED FROM ONE, AND ALL THE EDGE SIZES MUST BE POWERS OF TWO!!
+ *
+ * ndim     Number of dimensions of FFT to perform. Set to 2 for 2D FFT.
+ *
+ * isign    If 1, a Fourier transform is done; if -1 the  inverse
+ *          transformation is performed.
+ *
+ * This  function  is essentially as given in Press et al., "Numerical
+ * Recipes In C", Section 12.11, pp.  467-470.
+ */
+
+static void fourn(data, nn, ndim, isign)
+    float data[];
+    int nn[], ndim, isign;
+{
+    register int i1, i2, i3;
+    int i2rev, i3rev, ip1, ip2, ip3, ifp1, ifp2;
+    int ibit, idim, k1, k2, n, nprev, nrem, ntot;
+    float tempi, tempr;
+    double theta, wi, wpi, wpr, wr, wtemp;
+
+#define SWAP(a,b) tempr=(a); (a) = (b); (b) = tempr
+
+    ntot = 1;
+    for (idim = 1; idim <= ndim; idim++)
+        ntot *= nn[idim];
+    nprev = 1;
+    for (idim = ndim; idim >= 1; idim--) {
+        /* FIXME: this makes only two steps */
+        progress_meter(66+(int)round((ndim-idim)*34.0/ndim));
+
+        n = nn[idim];
+        nrem = ntot / (n * nprev);
+        ip1 = nprev << 1;
+        ip2 = ip1 * n;
+        ip3 = ip2 * nrem;
+        i2rev = 1;
+        for (i2 = 1; i2 <= ip2; i2 += ip1) {
+            if (i2 < i2rev) {
+                for (i1 = i2; i1 <= i2 + ip1 - 2; i1 += 2) {
+                    for (i3 = i1; i3 <= ip3; i3 += ip2) {
+                        i3rev = i2rev + i3 - i2;
+                        SWAP(data[i3], data[i3rev]);
+                        SWAP(data[i3 + 1], data[i3rev + 1]);
+                    }
+                }
+            }
+            ibit = ip2 >> 1;
+            while (ibit >= ip1 && i2rev > ibit) {
+                i2rev -= ibit;
+                ibit >>= 1;
+            }
+            i2rev += ibit;
+        }
+        ifp1 = ip1;
+        while (ifp1 < ip2) {
+            ifp2 = ifp1 << 1;
+            theta = isign * (M_PI * 2) / (ifp2 / ip1);
+            wtemp = sin(0.5 * theta);
+            wpr = -2.0 * wtemp * wtemp;
+            wpi = sin(theta);
+            wr = 1.0;
+            wi = 0.0;
+            for (i3 = 1; i3 <= ifp1; i3 += ip1) {
+                for (i1 = i3; i1 <= i3 + ip1 - 2; i1 += 2) {
+                    for (i2 = i1; i2 <= ip3; i2 += ifp2) {
+                        k1 = i2;
+                        k2 = k1 + ifp1;
+                        tempr = wr * data[k2] - wi * data[k2 + 1];
+                        tempi = wr * data[k2 + 1] + wi * data[k2];
+                        data[k2] = data[k1] - tempr;
+                        data[k2 + 1] = data[k1 + 1] - tempi;
+                        data[k1] += tempr;
+                        data[k1 + 1] += tempi;
+                    }
+                }
+                wr = (wtemp = wr) * wpr - wi * wpi + wr;
+                wi = wi * wpr + wtemp * wpi + wi;
+            }
+            ifp1 = ifp2;
+        }
+        nprev *= n;
+    }
+}
+#undef SWAP
+
+/* SPECTRALSYNTH  --  Spectrally synthesized fractal motion in two
+ * dimensions. This algorithm is given under the name SpectralSynthesisFM2D
+ * on page 108 of Peitgen & Saupe.
+ */
+
+static void spectral_synth(float **x, int n, double h) {
+    unsigned int bl;
+    int i, j, i0, j0, nsize[3];
+    double rad, phase, rcos, rsin;
+    float *a;
+
+    bl = ((((unsigned long) n) * n) + 1) * 2 * sizeof(float);
+    a = (float *) calloc(bl, 1);
+    if (a == (float *) 0) {
+        fprintf(stderr, "error, cannot allocate memory\n");
+        exit(1);
+    }
+    *x = a;
+
+    for (i = 0; i <= n / 2; i++) {
+        progress_meter((int)round(i*33.0/((n/2)-1)));
+        for (j = 0; j <= n / 2; j++) {
+            phase = 2 * M_PI * ((rand() & 0x7FFF) / arand);
+            if (i != 0 || j != 0) {
+                rad = pow((double)(i*i + j*j), -(h + 1) / 2) * hmg_rng_gauss();
+            } else {
+                rad = 0;
+            }
+            rcos = rad * cos(phase);
+            rsin = rad * sin(phase);
+            Real(a, i, j) = rcos;
+            Imag(a, i, j) = rsin;
+            i0 = (i == 0) ? 0 : n - i;
+            j0 = (j == 0) ? 0 : n - j;
+            Real(a, i0, j0) = rcos;
+            Imag(a, i0, j0) = - rsin;
+        }
+    }
+    Imag(a, n / 2, 0) = 0;
+    Imag(a, 0, n / 2) = 0;
+    Imag(a, n / 2, n / 2) = 0;
+    for (i = 1; i <= n / 2 - 1; i++) {
+        progress_meter(33 + (int)round(i*33.0/((n/2)-1)));
+        for (j = 1; j <= n / 2 - 1; j++) {
+            phase = 2 * M_PI * ((rand() & 0x7FFF) / arand);
+            rad = pow((double)(i*i + j*j), -(h + 1) / 2) * hmg_rng_gauss();
+            rcos = rad * cos(phase);
+            rsin = rad * sin(phase);
+            Real(a, i, n - j) = rcos;
+            Imag(a, i, n - j) = rsin;
+            Real(a, n - i, j) = rcos;
+            Imag(a, n - i, j) = - rsin;
+        }
+    }
+
+    nsize[0] = 0;
+    nsize[1] = nsize[2] = n;          /* Dimension of frequency domain array */
+    fourn(a, nsize, 2, -1);       /* Take inverse 2D Fourier transform */
+}
+
+static void power_law_scaling(float * const a, int const meshsize,
+                              double const powscale) {
+
+    if (powscale != 1.0) {
+        int i, j;
+        for (i = 0; i < meshsize; i++) {
+            for (j = 0; j < meshsize; j++) {
+                double const r = Real(a, i, j);
+                if (r > 0)
+                    Real(a, i, j) = pow(r, powscale);
+            }
+        }
+    }
+}
+
+static void compute_extreme_real(const float * const a, int const meshsize,
+                                 double * const rminP, double * const rmaxP) {
+    double rmin, rmax;
+    int i, j;
+
+    rmin = hugeVal;
+    rmax = -hugeVal;
+
+    for (i = 0; i < meshsize; i++) {
+        for (j = 0; j < meshsize; j++) {
+            double r = Real(a, i, j);
+
+            rmin = MIN(rmin, r);
+            rmax = MAX(rmax, r);
+        }
+    }
+    *rminP = rmin;
+    *rmaxP = rmax;
+}
+
+/* Replace the real part of each element of the 'a' array with a
+ * measure of how far the real is from the middle; sort of a standard
+ * deviation.
+ */
+static void replace_with_spread(float * const a, int const meshsize) {
+    double rmin, rmax;
+    double rmean, rrange;
+    int i, j;
+
+    compute_extreme_real(a, meshsize, &rmin, &rmax);
+
+    rmean = (rmin + rmax) / 2;
+    rrange = (rmax - rmin) / 2;
+
+    for (i = 0; i < meshsize; i++) {
+        for (j = 0; j < meshsize; j++) {
+            Real(a, i, j) = (Real(a, i, j) - rmean) / rrange;
+        }
+    }
+}
+
+static void algo_forge(unsigned char *map,
+                       unsigned char *tempmap HMG_ATTR_UNUSED,
+                       unsigned int w, unsigned int h) {
+    float *a;
+    unsigned int x, y;
+
+    hmg_rng_initgauss(forge_settings.seed);
+
+    assert(w == h);
+    meshsize = w-1;
+
+    spectral_synth(&a, meshsize, 3.0 - forge_settings.fracdim);
+    assert(a);
+
+    power_law_scaling(a, meshsize, forge_settings.powscale);
+    replace_with_spread(a, meshsize);
+
+    for (y=0; y<h-1; y++)
+        for(x=0; x<w-1; x++)
+            map[x+y*w] = round ((Real(a,x,y) + 1.0) * 127.5);
+
+    if (a) free(a);
+    progress_meter(100);
+    progress_meter(-1);
+}
+
+const hmg_algorithm_t hmg_algo_forge_info = {
+    "ppmforge/gforge - noise/fft",
+    algo_forge,
+    params_forge
+};
+

Added: trunk/lib_algo_mpd.c
===================================================================
--- trunk/lib_algo_mpd.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_algo_mpd.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,136 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <math.h>
+#include "lib_hmgen.h"
+
+#define HMGEN_MODULE "Midpoint Displacement"
+
+static struct mpd_settings_s {
+    unsigned int seed;
+    unsigned char tl, tr, bl, br;   /* top-left --> bottom-right */
+    unsigned char d;                /* displacement */
+    double r;                       /* roughness factor */
+} mpd_settings = { 42, 128, 128, 128, 128, 16, 0.6f };
+
+static const hmg_param_t params_mpd[] = {
+    { "seed=", &mpd_settings.seed, 0.0, 4294967295.0, PARAM_INT },
+    { "tl=",   &mpd_settings.tl, 0.0, 255.0, PARAM_CHAR },
+    { "tr=",   &mpd_settings.tr, 0.0, 255.0, PARAM_CHAR },
+    { "bl=",   &mpd_settings.bl, 0.0, 255.0, PARAM_CHAR },
+    { "br=",   &mpd_settings.br, 0.0, 255.0, PARAM_CHAR },
+    { "d=",    &mpd_settings.d,  0.0, 255.0, PARAM_CHAR },
+    { "r=",    &mpd_settings.r,  0.0, 2.0,  PARAM_DOUBLE },
+    { NULL, NULL, 0, 0, 0 }
+};
+
+static inline unsigned char getpix(unsigned char *map,
+                                   int w, int h, int x, int y) {
+    if (x<0) x += w-1;
+    else if (x>=w) x -= w-1;
+    if (y<0) y += h-1;
+    else if (y>=h) y -= h-1;
+    return map[x+y*w];
+}
+
+static inline void putpix(unsigned char *map,
+                          int w, int h, int x, int y, int c) {
+    if (x<0) x += w-1;
+    else if (x>=w) x -= w-1;
+    if (y<0) y += h-1;
+    else if (y>=h) y -= h-1;
+    if (c<0) c=0;
+    else if (c>255) c=255;
+    map[x+y*w] = c;
+}
+
+static inline char myrand(unsigned int d) {
+    return rand() % (2*d) - d;
+}
+
+static void mpd(unsigned char *map, int x, int y,
+                unsigned int xw, unsigned int yh,
+                unsigned int w, unsigned int h,
+                unsigned char d, unsigned int m) {
+    int tl = getpix(map, w, h, x, y),
+        tr = getpix(map, w, h, x+xw, y),
+        bl = getpix(map, w, h, x, y+yh),
+        br = getpix(map, w, h, x+xw, y+yh),
+        midu, midd, midl, midr, mid;
+
+    xw /= 2;
+    yh /= 2;
+
+    if (m) {
+        mid = round((tl+tr+bl+br)/4.0 + myrand(d));
+        putpix(map, w, h, x+xw, y+yh, mid);
+
+        return;
+    }
+
+    mid  = getpix(map, w, h, x+xw, y+yh);
+    midu = getpix(map, w, h, x+xw, y-yh);
+    midd = getpix(map, w, h, x+xw, y+yh+yh+yh);
+    midl = getpix(map, w, h, x-xw, y+yh);
+    midr = getpix(map, w, h, x+xw+xw+xw, y+yh);
+
+    putpix(map, w, h, x+xw,    y,       round((tl+tr+mid+midu)/4.0 +myrand(d)));
+    putpix(map, w, h, x,       y+yh,    round((tl+bl+mid+midl)/4.0 +myrand(d)));
+    putpix(map, w, h, x+xw+xw, y+yh,    round((tr+br+mid+midr)/4.0 +myrand(d)));
+    putpix(map, w, h, x+xw,    y+yh+yh, round((bl+br+mid+midd)/4.0 +myrand(d)));
+}
+
+static void algo_mpd(unsigned char *map,
+                     unsigned char *tempmap HMG_ATTR_UNUSED,
+                     unsigned int w, unsigned int h) {
+    unsigned int s = w-1, t = h-1, x, y, cnt = 0, tot = 0;
+    double dd = mpd_settings.d;
+    unsigned char d;
+
+    /* calculate total number of calls to mpd() for progress counter */
+    y = s/2;
+    while (y!=1) {
+        tot += y*y;
+        y /= 2;
+    }
+    tot++;
+    tot *= 2;
+
+    srand(mpd_settings.seed);
+
+    map[0]       = mpd_settings.tl;
+    map[w-1]     = mpd_settings.tr;
+    map[(h-1)*w] = mpd_settings.bl;
+    map[h*w-1]   = mpd_settings.br;
+
+    while (s != 1) {
+        d = round(dd);
+        d = d<1 ? 1 : d;
+        for (y=0; y<h-1; y+=t) {
+            progress_meter((int)round(cnt*100.0/tot));
+            for (x=0; x<w-1; x+=s) {
+                mpd(map, x, y, s, t, w, h, d, 1);
+                cnt++;
+            }
+        }
+        for (y=0; y<h-1; y+=t) {
+            progress_meter((int)round(cnt*100.0/tot));
+            for (x=0; x<w-1; x+=s) {
+                mpd(map, x, y, s, t, w, h, d, 0);
+                cnt++;
+            }
+        }
+        progress_meter((int)round(cnt*100.0/tot));
+        s /= 2;
+        t /= 2;
+        dd *= mpd_settings.r;
+    }
+    progress_meter(-1);
+}
+
+const hmg_algorithm_t hmg_algo_mpd_info = {
+    "Midpoint Displacement",
+    algo_mpd,
+    params_mpd
+};
+

Added: trunk/lib_hmgen.c
===================================================================
--- trunk/lib_hmgen.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_hmgen.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,104 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <assert.h>
+#include "lib_hmgen.h"
+
+extern const hmg_algorithm_t hmg_algo_ff_info;
+extern const hmg_algorithm_t hmg_algo_mpd_info;
+extern const hmg_algorithm_t hmg_algo_forge_info;
+
+const hmg_algorithm_t *hmg_algorithms[] = {
+    &hmg_algo_ff_info,
+    &hmg_algo_mpd_info,
+    &hmg_algo_forge_info
+};
+
+static void default_progress_meter(char *context, int p) {
+    if (p<0)
+        fprintf(stderr, "\r[done] %s\n", context);
+    else
+        fprintf(stderr, "\r[%3i%%] %s\r", p, context);
+}
+
+void (*hmg_progress_meter)(char *context, int p) = default_progress_meter;
+
+int hmg_parse_params(const char *arg, const hmg_param_t *params) {
+    unsigned int n, i;
+    const char *p = arg, *t;
+
+    for (n=0; params[n].name; n++)  ;
+
+    while (p!=NULL && *p!='\0') {
+        for (i=0; i<n; i++)
+            if (!strncmp(p, params[i].name, strlen(params[i].name)))
+                break;
+
+        if (i == n) {
+            fprintf(stderr, "unknown parameter: %8s...\n", p);
+            return 0;
+        }
+
+        p = strchr(p, '=');
+        assert(*p == '=');
+        p++;
+
+        switch (params[i].type) {
+        case PARAM_INT: {
+            int x;
+
+            x = atoi(p);
+            if (x<params[i].min) {
+                fprintf(stderr, "%s, value smaller than %i\n", params[i].name,
+                                                        (int) params[i].min);
+                return 0;
+            } else if (x>params[i].max) {
+                fprintf(stderr, "%s, value larger than %i\n", params[i].name,
+                                                        (int) params[i].max);
+                return 0;
+            }
+            *(int*)params[i].store = x;
+            break; }
+        case PARAM_CHAR: {
+            int x;
+
+            x = atoi(p);
+            if (x<params[i].min) {
+                fprintf(stderr, "%s, value smaller than %i\n", params[i].name,
+                                                        (int) params[i].min);
+                return 0;
+            } else if (x>params[i].max) {
+                fprintf(stderr, "%s, value larger than %i\n", params[i].name,
+                                                        (int) params[i].max);
+                return 0;
+            }
+            *(char*)params[i].store = x;
+            break; }
+        case PARAM_DOUBLE: {
+            double d;
+
+            d = atof(p);
+            if (d<params[i].min) {
+                fprintf(stderr, "%s, value smaller than %0.2f\n",
+                                                params[i].name, params[i].min);
+                return 0;
+            } else if (d>params[i].max) {
+                fprintf(stderr, "%s, value larger than %0.2f\n",
+                                                params[i].name, params[i].max);
+                return 0;
+            }
+            *(double*)params[i].store = d;
+            break; }
+        default:
+            assert(0);
+            break;
+        }
+
+        t = strchr(p, ':');
+        if (t == NULL)
+            break;
+        p = t+1;
+    }
+
+    return 1;
+}

Added: trunk/lib_hmgen.h
===================================================================
--- trunk/lib_hmgen.h	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_hmgen.h	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,62 @@
+#ifndef HMG_LIB_HMGEN_H
+#define HMG_LIB_HMGEN_H
+
+extern void (*hmg_progress_meter)(char *context, int p);
+
+typedef enum hmg_param_type_e {
+    PARAM_INT,
+    PARAM_CHAR,
+    PARAM_DOUBLE
+} hmg_param_type_t;
+
+typedef struct hmg_param_s {
+    char *name;
+    void *store;
+    double min, max;
+    hmg_param_type_t type;
+} hmg_param_t;
+
+typedef struct hmg_algorithm_s {
+    const char *name;
+    void (*func)(unsigned char *map, unsigned char *tempmap,
+                 unsigned int width, unsigned int height);
+    const hmg_param_t *params;
+} hmg_algorithm_t;
+
+extern const hmg_algorithm_t *hmg_algorithms[];
+
+int hmg_parse_params(const char *arg, const hmg_param_t *params);
+
+void hmg_normalize(unsigned char *map,
+                   unsigned int normmin, unsigned int normmax,
+                   unsigned int w, unsigned int h);
+
+void hmg_gaussian_blur(unsigned char *map, unsigned char *tempmap,
+                       int blurx, int blury, double blursigma,
+                       unsigned int w, unsigned int h);
+
+void hmg_invert(unsigned char *map, unsigned int w, unsigned int h);
+
+extern unsigned char hmg_colormap[256][3];
+
+void hmg_init_colormap(void);
+
+void hmg_rng_initgauss(unsigned int seed);
+double hmg_rng_gauss(void);
+
+#ifdef __GNUC__
+#define HMG_ATTR_UNUSED     __attribute__((unused))
+#else
+#define HMG_ATTR_UNUSED
+#endif
+
+#define ALGO_FF     0       /* Fault Formation */
+#define ALGO_MDP    1       /* Midpoint Displacement */
+#define ALGO_FORGE  2       /* ppmforge/gforge */
+#define ALGO_LAST   3       /* Nothing */
+
+/* Handy shortcut */
+
+#define progress_meter(a) hmg_progress_meter(HMGEN_MODULE, a)
+
+#endif

Added: trunk/lib_postproc.c
===================================================================
--- trunk/lib_postproc.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_postproc.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,109 @@
+#include <stdio.h>
+#include <math.h>
+#include <stdlib.h>
+#include <string.h>
+#include "lib_hmgen.h"
+
+#define HMGEN_MODULE "Normalize"
+
+void hmg_normalize(unsigned char *map,
+                   unsigned int normmin, unsigned int normmax,
+                   unsigned int w, unsigned int h) {
+    unsigned int x = 0, y, minval = 255, maxval = 0, v = 0;
+    double f;
+
+    for (y=0; y<h; y++) {
+        progress_meter((int)round(y*50.0/(h-1)));
+        for (x=0; x<w; x++) {
+            v = map[x+y*w];
+            minval = v<minval ? v : minval;
+            maxval = v>maxval ? v : maxval;
+        }
+    }
+
+    f = 1.0 * (normmax-normmin) / (maxval-minval);
+
+    for (y=0; y<h; y++) {
+        progress_meter(50 + (int)round(y*50.0/(h-1)));
+        for (x=0; x<w; x++) {
+            v = map[x+y*w];
+            map[x+y*w] = round((v - minval) * f + normmin);
+        }
+    }
+    progress_meter(-1);
+}
+
+#undef  HMGEN_MODULE
+#define HMGEN_MODULE "Gaussian Blur"
+
+void hmg_gaussian_blur(unsigned char *map, unsigned char *tempmap,
+                       int blurx, int blury,
+                       double blursigma,
+                       unsigned int w, unsigned int h) {
+    double mask[blurx*blury];
+    double cx = 0, cy = 0, r = 0, m = 0, nv;
+    int x, y, a, b, v;
+    double cr = -1.0/(2.0*blursigma*blursigma);
+
+    memcpy(tempmap, map, w*h);
+
+    for (y=0; y<blury; y++) {
+        for (x=0; x<blurx; x++) {
+            cx = (double) x - (double)(blurx-1) / 2.0;
+            cy = (double) y - (double)(blury-1) / 2.0;
+            r = cx*cx + cy*cy;
+            m += exp(cr*r);
+        }
+    }
+    m = 1.0/m;
+
+    for (y=0; y<blury; y++) {
+        for (x=0; x<blurx; x++) {
+            cx = (double) x - (double)(blurx-1) / 2.0;
+            cy = (double) y - (double)(blury-1) / 2.0;
+            r = cx*cx + cy*cy;
+            mask[y*blurx+x] = m * exp(cr*r);
+        }
+    }
+
+    for (y=0; y<(int)h; y++) {
+        progress_meter((int)round(y*100.0/(h-1)));
+        for (x=0; x<(int)w; x++) {
+
+            nv = 0.0;
+
+            for (b=0; b<blury; b++) {
+                int bb = y+b-blury/2;
+                bb = bb>=(int)h ? h-1 : bb<0 ? 0 : bb;
+
+                for (a=0; a<blurx; a++) {
+                    int aa = x+a-blurx/2;
+                    aa = aa>=(int)w ? w-1 : aa<0 ? 0 : aa;
+
+                    v = tempmap[aa+bb*w];
+                    nv += v * mask[a+b*blurx];
+                }
+            }
+
+            nv = round(nv);
+            nv = nv>255 ? 255 : nv<0 ? 0 : nv;
+            map[x+y*w] = nv;
+        }
+    }
+    progress_meter(-1);
+}
+
+
+#undef  HMGEN_MODULE
+#define HMGEN_MODULE "Invert"
+
+void hmg_invert(unsigned char *map, unsigned int w, unsigned int h) {
+    unsigned int x = 0, y;
+
+    for (y=0; y<h; y++) {
+        progress_meter((int)round(y*100.0/(h-1)));
+        for (x=0; x<w; x++)
+            map[x+y*w] = 255 - map[x+y*w];
+    }
+    progress_meter(-1);
+}

Added: trunk/lib_util.c
===================================================================
--- trunk/lib_util.c	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/lib_util.c	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,74 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <math.h>
+
+unsigned char hmg_colormap[256][3];
+
+#define B_WATER_GRASS    32
+#define B_GRASS_ROCK     96
+#define B_ROCK_SNOW      192
+
+#if 0
+static unsigned char waterstart[3] = {   0,   0, 128 },
+                     waterend[3]   = {   0,   0, 255 },
+                     grassstart[3] = {   0, 128,   0 },
+                     grassend[3]   = {   0, 255,   0 },
+                     rockstart[3]  = { 128,   0,   0 },
+                     rockend[3]    = { 255, 128, 128 },
+                     snowstart[3]  = { 128, 128, 128 },
+                     snowend[3]    = { 255, 255, 255 };
+#endif
+static unsigned char waterstart[3] = {   0,   0, 96 },
+                     waterend[3]   = {   0,   0, 192 },
+                     grassstart[3] = {   0, 0,  192 },
+                     grassend[3]   = {   0, 192,   0 },
+                     rockstart[3]  = { 0,   192,   0 },
+                     rockend[3]    = { 192, 128, 128 },
+                     snowstart[3]  = { 192, 128, 128 },
+                     snowend[3]    = { 255, 255, 255 };
+
+// colormap[last] is NOT set
+static void do_gradient(unsigned char start[3], unsigned char end[3],
+                        int first, int last) {
+    double d[3];
+    int steps = last - first - 1, i;
+
+    d[0] = (double)(end[0] - start[0]) / steps;
+    d[1] = (double)(end[1] - start[1]) / steps;
+    d[2] = (double)(end[2] - start[2]) / steps;
+
+    for (i=first; i<last; i++) {
+        int j = i-first;
+        hmg_colormap[i][0] = round((double)start[0] + d[0]*j);
+        hmg_colormap[i][1] = round((double)start[1] + d[1]*j);
+        hmg_colormap[i][2] = round((double)start[2] + d[2]*j);
+    }
+}
+
+void hmg_init_colormap(void) {
+    do_gradient(waterstart, waterend, 0,             B_WATER_GRASS);
+    do_gradient(grassstart, grassend, B_WATER_GRASS, B_GRASS_ROCK);
+    do_gradient(rockstart,  rockend,  B_GRASS_ROCK,  B_ROCK_SNOW);
+    do_gradient(snowstart,  snowend,  B_ROCK_SNOW,   256);
+}
+
+#define nrand 4
+
+double arand;
+static double gaussadd, gaussfac;
+
+void hmg_rng_initgauss(unsigned int seed) {
+    arand = pow(2.0, 15.0) - 1.0;
+    gaussadd = sqrt(3.0 * nrand);
+    gaussfac = 2 * gaussadd / (nrand * nrand);
+    srand(seed);
+}
+
+double hmg_rng_gauss(void) {
+    int i;
+    double sum = 0.0;
+
+    for (i=1; i<=nrand; i++)
+        sum += rand() & 0x7fff;
+    return gaussfac * sum - gaussadd;
+}

Added: trunk/target.mak
===================================================================
--- trunk/target.mak	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/target.mak	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,43 @@
+TARGET ?= linux-gcc
+
+ifeq ($(TARGET),linux-gcc)
+CC = gcc
+CC_DEP = $(CC)
+AR ?= ar
+RANLIB ?= ranlib
+STRIP ?= strip
+PKG_CONFIG ?= pkg-config
+STD_FLAGS=-std=c99
+WARN_FLAGS=-Wall -W
+OPT_FLAGS=-O3
+DEBUG_FLAGS=-g
+DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
+DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
+GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0`
+GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0 gthread-2.0`
+DEP_FLAGS = -MM
+AR_FLAGS = cru
+EXESUF =
+OBJSUF = .o
+endif
+
+ifeq ($(TARGET),linux-suncc)
+CC = suncc
+CC_DEP = $(CC)
+AR ?= ar
+RANLIB ?= ranlib
+STRIP ?= strip
+PKG_CONFIG ?= pkg-config
+STD_FLAGS=-Xc
+WARN_FLAGS=
+OPT_FLAGS=-xO5
+DEBUG_FLAGS=-g
+DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
+DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
+GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0 | sed 's/-pthread//'`
+GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0 gthread-2.0 | sed 's/-pthread//'`
+DEP_FLAGS = -xM
+AR_FLAGS = cru
+EXESUF =
+OBJSUF = .o
+endif

Added: trunk/version.h
===================================================================
--- trunk/version.h	2007-08-26 17:08:51 UTC (rev 0)
+++ trunk/version.h	2007-08-28 10:38:44 UTC (rev 1)
@@ -0,0 +1,11 @@
+#ifndef VERSION_H
+#define VERSION_H
+
+#define VERSION_MAJOR       0
+#define VERSION_MINOR       9
+#define VERSION_MICRO       0
+#define VERSION_INT         (VERSION_MAJOR<<8)+(VERSION_MINOR<<4)+VERSION_MICRO
+#define VERSION_STRING      "0.9.0"
+#define COPYRIGHT_STRING    "Copyright (C) 2007"
+
+#endif



From ivop at mail.berlios.de  Wed Aug 29 13:57:32 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 13:57:32 +0200
Subject: [Hmgen-svnlog] r2 - trunk
Message-ID: <200708291157.l7TBvWlI026024@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 13:57:31 +0200 (Wed, 29 Aug 2007)
New Revision: 2

Modified:
   trunk/Makefile
Log:
cleaner silent/verbose handling


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-28 10:38:44 UTC (rev 1)
+++ trunk/Makefile	2007-08-29 11:57:31 UTC (rev 2)
@@ -20,7 +20,7 @@
 LIBHMGEN_SRCS = $(addsuffix .c, $(LIBHMGEN_BASENAMES))
 
 SILENT ?= yes
-SILENT_EXEC = test "$(SILENT)" = "yes" && echo $$SHORT || echo $$LONG; $$LONG
+SILENT_EXEC = @test "$(SILENT)" = "yes" && echo "$(2)" || echo $(1); $(1)
 
 all: $(GUI) $(CLI)
 
@@ -30,37 +30,35 @@
 $(CLI)-verbose: SILENT=no
 $(CLI)-verbose: $(CLI)
 $(CLI): $(CLIg)
-	@LONG="cp $(CLIg) $@"; SHORT="CP $(CLIg) $@"; $(SILENT_EXEC)
-	@LONG="$(STRIP) $@"; SHORT="STRIP $@"; $(SILENT_EXEC)
+	$(call SILENT_EXEC,cp $(CLIg) $@,CP $(CLIg) $@)
+	$(call SILENT_EXEC,$(STRIP) $@,STRIP $@)
 
 $(CLIg): CFLAGS = $(DEF_CFLAGS)
 $(CLIg): LDFLAGS = $(DEF_LDFLAGS)
 $(CLIg): $(LIBHMGEN) $(CLI_OBJS)
-	@LONG="$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS)"; SHORT="LD $@"; \
-		$(SILENT_EXEC)
+	$(call SILENT_EXEC,$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS),LD $@)
 
 $(GUI)-verbose: SILENT=no
 $(GUI)-verbose: $(GUI)
 $(GUI): $(GUIg)
-	@LONG="cp $(GUIg) $@"; SHORT="CP $(GUIg) $@"; $(SILENT_EXEC)
-	@LONG="$(STRIP) $@"; SHORT="STRIP $@"; $(SILENT_EXEC)
+	$(call SILENT_EXEC,cp $(GUIg) $@,CP $(GUIg) $@)
+	$(call SILENT_EXEC,$(STRIP) $@,STRIP $@)
 
 $(GUIg): CFLAGS = $(GTK_CFLAGS) $(DEF_CFLAGS)
 $(GUIg): LDFLAGS = $(GTK_LDFLAGS) $(DEF_LDFLAGS)
 $(GUIg): $(LIBHMGEN) $(GUI_OBJS)
-	@LONG="$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS)"; SHORT="LD $@"; \
-		$(SILENT_EXEC)
+	$(call SILENT_EXEC,$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS),LD $@)
 
 $(LIBHMGEN)-verbose: SILENT=no
 $(LIBHMGEN)-verbose: $(LIBHMGEN)
 $(LIBHMGEN): CFLAGS = $(DEF_CFLAGS)
 $(LIBHMGEN): LDFLAGS = $(DEF_LDFLAGS)
 $(LIBHMGEN): $(LIBHMGEN_OBJS)
-	@LONG="$(AR) $(AR_FLAGS) $@ $^"; SHORT="AR $@"; $(SILENT_EXEC)
-	@LONG="$(RANLIB) $@"; SHORT="RANLIB $@"; $(SILENT_EXEC)
+	$(call SILENT_EXEC,$(AR) $(AR_FLAGS) $@ $^,AR $@)
+	$(call SILENT_EXEC,$(RANLIB) $@,RANLIB $@)
 
 .c.o:
-	@LONG="$(CC) -c -o $@ $< $(CFLAGS)"; SHORT="CC $<"; $(SILENT_EXEC)
+	$(call SILENT_EXEC,$(CC) -c -o $@ $< $(CFLAGS),CC $<)
 
 clean:
 	rm -f $(CLI) $(CLIg) $(CLI_OBJS)
@@ -73,8 +71,7 @@
 depend-verbose dep-verbose: SILENT=no
 depend-verbose dep-verbose: dep
 depend dep: $(CLI_SRCS) $(LIBHMGEN_SRCS) $(GUI_SRCS)
-	@LONG="$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $^"; \
-		SHORT="CCDEP >.depend"; $(SILENT_EXEC) 1>.depend
+	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $^ 1>.depend,CCDEP >.depend)
 
 size:
 	@wc -l *.[ch] Makefile *.mak | tail -1



From ivop at mail.berlios.de  Wed Aug 29 14:00:03 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 14:00:03 +0200
Subject: [Hmgen-svnlog] r3 - trunk
Message-ID: <200708291200.l7TC03UV027154@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 14:00:03 +0200 (Wed, 29 Aug 2007)
New Revision: 3

Modified:
   trunk/Makefile
   trunk/target.mak
Log:
move default flags order out of target.mak


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 11:57:31 UTC (rev 2)
+++ trunk/Makefile	2007-08-29 12:00:03 UTC (rev 3)
@@ -1,6 +1,9 @@
 
 include target.mak
 
+DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
+DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
+
 CLI = hmgen$(EXESUF)
 CLIg = hmgen_g$(EXESUF)
 CLI_BASENAMES = cli_main

Modified: trunk/target.mak
===================================================================
--- trunk/target.mak	2007-08-29 11:57:31 UTC (rev 2)
+++ trunk/target.mak	2007-08-29 12:00:03 UTC (rev 3)
@@ -11,8 +11,6 @@
 WARN_FLAGS=-Wall -W
 OPT_FLAGS=-O3
 DEBUG_FLAGS=-g
-DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
-DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
 GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0`
 GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0 gthread-2.0`
 DEP_FLAGS = -MM
@@ -32,8 +30,6 @@
 WARN_FLAGS=
 OPT_FLAGS=-xO5
 DEBUG_FLAGS=-g
-DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
-DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
 GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0 | sed 's/-pthread//'`
 GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0 gthread-2.0 | sed 's/-pthread//'`
 DEP_FLAGS = -xM



From ivop at mail.berlios.de  Wed Aug 29 14:12:50 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 14:12:50 +0200
Subject: [Hmgen-svnlog] r4 - trunk
Message-ID: <200708291212.l7TCCoev030907@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 14:12:48 +0200 (Wed, 29 Aug 2007)
New Revision: 4

Modified:
   trunk/Makefile
   trunk/target.mak
Log:
split GTK_* and GTHREAD_*


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 12:00:03 UTC (rev 3)
+++ trunk/Makefile	2007-08-29 12:12:48 UTC (rev 4)
@@ -23,7 +23,7 @@
 LIBHMGEN_SRCS = $(addsuffix .c, $(LIBHMGEN_BASENAMES))
 
 SILENT ?= yes
-SILENT_EXEC = @test "$(SILENT)" = "yes" && echo "$(2)" || echo $(1); $(1)
+SILENT_EXEC = @test "$(SILENT)" = "yes" && echo "$(2)" || echo "$(1)"; $(1)
 
 all: $(GUI) $(CLI)
 
@@ -47,8 +47,8 @@
 	$(call SILENT_EXEC,cp $(GUIg) $@,CP $(GUIg) $@)
 	$(call SILENT_EXEC,$(STRIP) $@,STRIP $@)
 
-$(GUIg): CFLAGS = $(GTK_CFLAGS) $(DEF_CFLAGS)
-$(GUIg): LDFLAGS = $(GTK_LDFLAGS) $(DEF_LDFLAGS)
+$(GUIg): CFLAGS = $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $(DEF_CFLAGS)
+$(GUIg): LDFLAGS = $(GTK_LDFLAGS) $(GTHREAD_LDFLAGS) $(DEF_LDFLAGS)
 $(GUIg): $(LIBHMGEN) $(GUI_OBJS)
 	$(call SILENT_EXEC,$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS),LD $@)
 
@@ -74,7 +74,7 @@
 depend-verbose dep-verbose: SILENT=no
 depend-verbose dep-verbose: dep
 depend dep: $(CLI_SRCS) $(LIBHMGEN_SRCS) $(GUI_SRCS)
-	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $^ 1>.depend,CCDEP >.depend)
+	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $^ 1>.depend,CCDEP >.depend)
 
 size:
 	@wc -l *.[ch] Makefile *.mak | tail -1

Modified: trunk/target.mak
===================================================================
--- trunk/target.mak	2007-08-29 12:00:03 UTC (rev 3)
+++ trunk/target.mak	2007-08-29 12:12:48 UTC (rev 4)
@@ -11,8 +11,10 @@
 WARN_FLAGS=-Wall -W
 OPT_FLAGS=-O3
 DEBUG_FLAGS=-g
-GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0`
-GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0 gthread-2.0`
+GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0`
+GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0`
+GTHREAD_CFLAGS = `$(PKG_CONFIG) --cflags gthread-2.0`
+GTHREAD_LDFLAGS = `$(PKG_CONFIG) --static --libs gthread-2.0`
 DEP_FLAGS = -MM
 AR_FLAGS = cru
 EXESUF =
@@ -30,8 +32,10 @@
 WARN_FLAGS=
 OPT_FLAGS=-xO5
 DEBUG_FLAGS=-g
-GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0 gthread-2.0 | sed 's/-pthread//'`
-GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0 gthread-2.0 | sed 's/-pthread//'`
+GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0`
+GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0`
+GTHREAD_CFLAGS = `$(PKG_CONFIG) --cflags gthread-2.0 | sed 's/-pthread//'`
+GTHREAD_LDFLAGS = `$(PKG_CONFIG) --static --libs gthread-2.0 | sed 's/-pthread//'`
 DEP_FLAGS = -xM
 AR_FLAGS = cru
 EXESUF =



From ivop at mail.berlios.de  Wed Aug 29 17:49:29 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 17:49:29 +0200
Subject: [Hmgen-svnlog] r5 - trunk
Message-ID: <200708291549.l7TFnTMo014906@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 17:49:29 +0200 (Wed, 29 Aug 2007)
New Revision: 5

Modified:
   trunk/Makefile
Log:
flush default suffix list


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 12:12:48 UTC (rev 4)
+++ trunk/Makefile	2007-08-29 15:49:29 UTC (rev 5)
@@ -1,6 +1,9 @@
 
 include target.mak
 
+.SUFFIXES:
+.SUFFIXES: $(OBJSUF) .c
+
 DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
 DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
 



From ivop at mail.berlios.de  Wed Aug 29 18:08:50 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 18:08:50 +0200
Subject: [Hmgen-svnlog] r6 - trunk
Message-ID: <200708291608.l7TG8o8e015846@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 18:08:49 +0200 (Wed, 29 Aug 2007)
New Revision: 6

Removed:
   trunk/target.mak
Modified:
   trunk/Makefile
Log:
Makefile with built-in configure experiment


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 15:49:29 UTC (rev 5)
+++ trunk/Makefile	2007-08-29 16:08:49 UTC (rev 6)
@@ -1,6 +1,22 @@
 
-include target.mak
+# Makefile with built-in configure experiment
+# Needs GNU Make to run properly
 
+# ---------- CONFIGURE PREAMBLE ----------
+
+-include config.mak
+
+MAKEFLAGS += --no-print-directory
+
+ifneq ($(CONFIGURE_DONE),yes)
+DEFGOAL=$(filter-out clean distclean configure, $(MAKECMDGOALS))
+$(DEFGOAL) all::
+	@make configure
+	@make $(MAKECMDGOALS)
+else
+
+# ---------- PROJECT ----------
+
 .SUFFIXES:
 .SUFFIXES: $(OBJSUF) .c
 
@@ -66,14 +82,6 @@
 .c.o:
 	$(call SILENT_EXEC,$(CC) -c -o $@ $< $(CFLAGS),CC $<)
 
-clean:
-	rm -f $(CLI) $(CLIg) $(CLI_OBJS)
-	rm -f $(LIBHMGEN) $(LIBHMGEN_OBJS)
-	rm -f $(GUI) $(GUIg) $(GUI_OBJS)
-
-mrproper distclean: clean
-	rm -f *~ .depend *.pgm *.ppm
-
 depend-verbose dep-verbose: SILENT=no
 depend-verbose dep-verbose: dep
 depend dep: $(CLI_SRCS) $(LIBHMGEN_SRCS) $(GUI_SRCS)
@@ -85,7 +93,138 @@
 size-long:
 	@wc -l *.[ch] Makefile *.mak
 
-.PHONY:	all dep depend clean distclean mrproper verbose $(CLI)-verbose size
+endif	# END CONFIGURE PREAMBLE
+
+# ---------- CLEAN UP ----------
+
+clean:
+	rm -f $(CLI) $(CLIg) $(CLI_OBJS)
+	rm -f $(LIBHMGEN) $(LIBHMGEN_OBJS)
+	rm -f $(GUI) $(GUIg) $(GUI_OBJS)
+
+mrproper distclean: clean
+	rm -f *~ .depend *.pgm *.ppm config.mak
+
+.PHONY: all dep depend clean distclean mrproper verbose $(CLI)-verbose size
 .PHONY: $(GUI)-verbose $(LIBHMGEN)-verbose depend-verbose dep-verbose size-long
 
+# ---------- CONFIGURE ----------
+
+clean-config.mak:
+	@> config.mak
+
+config-cc:
+	@echo C compiler... $(CC)
+	@echo CC=$(CC) >> config.mak
+	@echo CC_DEP=$(CC) >> config.mak
+
+config-cc-vendor-and-version:	config-cc
+	@CC_VENDOR=`$(CC) --help 2>/dev/null | grep -q gcc && echo gnu` ; \
+	if test "$$CC_VENDOR" = "gnu" ; then \
+		CC_VERSION=`$(CC) -dumpversion` ; \
+	else \
+		CC_VENDOR=`$(CC) -flags 2>/dev/null | grep -q sunperf && echo sun` ; \
+		if test "$$CC_VENDOR" = "sun" ; then \
+			CC_VERSION=`echo | $(CC) -E - | grep ident | cut -d ' ' -f 5` ; \
+		else \
+			CC_VENDOR=unknown; \
+		fi ; \
+	fi ; \
+	echo CC_VENDOR=$$CC_VENDOR >> config.mak ; \
+	echo CC_VERSION=$$CC_VERSION >> config.mak ; \
+	echo CC_VERSION_MAJOR=`echo $$CC_VERSION | cut -d '.' -f 1` \
+		>>config.mak ;\
+	echo CC_VERSION_MINOR=`echo $$CC_VERSION | cut -d '.' -f 2` \
+		>>config.mak ;\
+	echo CC_VERSION_SUBMINOR=`echo $$CC_VERSION | cut -d '.' -f 3` \
+		>>config.mak ;\
+	echo Vendor... $$CC_VENDOR ; \
+	echo Version... $$CC_VERSION
+
+config-cc-vendor-and-version-restrict:	config-cc-vendor-and-version
+	@. config.mak ; \
+	if test "$$CC_VENDOR" = gnu ; then \
+		if test "$$CC_VERSION_MAJOR" -le 2 ; then \
+			echo "gcc version < 3.x is not supported" ; \
+			exit 1 ; \
+		fi ; \
+	fi ;
+
+config-cc-flags: 	config-cc-vendor-and-version-restrict
+	@. config.mak ; \
+	case $$CC_VENDOR in \
+		gnu) \
+			WARN_FLAGS="-Wall -W" ; \
+			OPT_FLAGS="-O3" ; \
+			STD_FLAGS="-std=c99" ; \
+			DEBUG_FLAGS="-g" ; \
+			DEP_FLAGS="-MM" ; \
+			;; \
+		sun) \
+			WARN_FLAGS= ; \
+			OPT_FLAGS="-xO5" ; \
+			STD_FLAGS="-Xc" ; \
+			DEBUG_FLAGS="-g" ; \
+			DEP_FLAGS="-xM" ; \
+			;; \
+	esac ; \
+	echo WARN_FLAGS=$$WARN_FLAGS >> config.mak ; \
+	echo OPT_FLAGS=$$OPT_FLAGS >> config.mak ; \
+	echo STD_FLAGS=$$STD_FLAGS >> config.mak ; \
+	echo DEBUG_FLAGS=$$DEBUG_FLAGS >> config.mak ; \
+	echo DEP_FLAGS=$$DEP_FLAGS >> config.mak ; \
+	echo Warnings... $$WARN_FLAGS ; \
+	echo Optimize... $$OPT_FLAGS ; \
+	echo Standards... $$STD_FLAGS ; \
+	echo Debug... $$DEBUG_FLAGS ; \
+	echo Dependencies... $$DEP_FLAGS ;
+
+config-pkg-config:
+	@TMP=`pkg-config --version 2>/dev/null 1>&2 && echo yes || echo no` ; \
+	echo pkg-config... $$TMP ; \
+	if test "$$TMP" != "yes" ; then \
+		echo "pkg-config not found" ; \
+		exit 1 ; \
+	fi ; \
+
+NOERR=2>/dev/null
+
+define CONFIG_PKG_CONFIG_PKG
+	@TMP=`pkg-config --atleast-version=$(4) $(1) $(NOERR) && echo yes || echo no` ;\
+	echo $(1)... $$TMP ; \
+	if test "$$TMP" != "yes" ; then \
+		echo "$(1), at least version $(4), not found." ; \
+		echo "Perhaps you need to install the dev(el) packages?" ; \
+		exit 1 ; \
+	fi ; \
+	TVARC=`pkg-config --cflags $(1) $(NOERR)` ; \
+	TVARL=`pkg-config --static --libs $(1) $(NOERR)` ; \
+	echo $(2)=$$TVARC >> config.mak ; \
+	echo $(3)=$$TVARL >> config.mak ;
+endef
+
+config-gtk-flags: config-pkg-config
+	$(call CONFIG_PKG_CONFIG_PKG,gtk+-2.0,GTK_CFLAGS,GTK_LDFLAGS,2.0)
+
+config-gthread-flags: config-pkg-config
+	$(call CONFIG_PKG_CONFIG_PKG,gthread-2.0,GTHREAD_CFLAGS,GTHREAD_LDFLAGS,2.0)
+
+configure: clean-config.mak \
+           config-cc-flags \
+           config-gtk-flags \
+           config-gthread-flags
+	@echo AR?=ar >> config.mak
+	@echo RANLIB?=ranlib >> config.mak
+	@echo STRIP?=strip >> config.mak
+	@echo EXESUF= >> config.mak
+	@echo OBJSUF=.o >> config.mak
+	@echo AR_FLAGS=cru >> config.mak
+	@echo CONFIGURE_DONE=yes >> config.mak
+
+.PHONY: clean-config.mak configure config-cc config-cc-vendor-and-version \
+        config-cc-flags config-cc-vendor-and-version-restrict \
+        config-pkg-config config-gtk-flags config-gthread-flags
+
+# ---------- DEPENDENCIES ----------
+
 -include .depend

Deleted: trunk/target.mak
===================================================================
--- trunk/target.mak	2007-08-29 15:49:29 UTC (rev 5)
+++ trunk/target.mak	2007-08-29 16:08:49 UTC (rev 6)
@@ -1,43 +0,0 @@
-TARGET ?= linux-gcc
-
-ifeq ($(TARGET),linux-gcc)
-CC = gcc
-CC_DEP = $(CC)
-AR ?= ar
-RANLIB ?= ranlib
-STRIP ?= strip
-PKG_CONFIG ?= pkg-config
-STD_FLAGS=-std=c99
-WARN_FLAGS=-Wall -W
-OPT_FLAGS=-O3
-DEBUG_FLAGS=-g
-GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0`
-GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0`
-GTHREAD_CFLAGS = `$(PKG_CONFIG) --cflags gthread-2.0`
-GTHREAD_LDFLAGS = `$(PKG_CONFIG) --static --libs gthread-2.0`
-DEP_FLAGS = -MM
-AR_FLAGS = cru
-EXESUF =
-OBJSUF = .o
-endif
-
-ifeq ($(TARGET),linux-suncc)
-CC = suncc
-CC_DEP = $(CC)
-AR ?= ar
-RANLIB ?= ranlib
-STRIP ?= strip
-PKG_CONFIG ?= pkg-config
-STD_FLAGS=-Xc
-WARN_FLAGS=
-OPT_FLAGS=-xO5
-DEBUG_FLAGS=-g
-GTK_CFLAGS = `$(PKG_CONFIG) --cflags gtk+-2.0`
-GTK_LDFLAGS = `$(PKG_CONFIG) --static --libs gtk+-2.0`
-GTHREAD_CFLAGS = `$(PKG_CONFIG) --cflags gthread-2.0 | sed 's/-pthread//'`
-GTHREAD_LDFLAGS = `$(PKG_CONFIG) --static --libs gthread-2.0 | sed 's/-pthread//'`
-DEP_FLAGS = -xM
-AR_FLAGS = cru
-EXESUF =
-OBJSUF = .o
-endif



From ivop at mail.berlios.de  Wed Aug 29 21:13:07 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 21:13:07 +0200
Subject: [Hmgen-svnlog] r7 - trunk
Message-ID: <200708291913.l7TJD7Pt009870@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 21:13:06 +0200 (Wed, 29 Aug 2007)
New Revision: 7

Modified:
   trunk/README
Log:
update, new experimental configure/Makefile hybrid


Modified: trunk/README
===================================================================
--- trunk/README	2007-08-29 16:08:49 UTC (rev 6)
+++ trunk/README	2007-08-29 19:13:06 UTC (rev 7)
@@ -33,10 +33,10 @@
     make distclean
     make mrproper
 
-The default target is linux-gcc. To change that, use:
-    make TARGET=linux-suncc all
+Just configure:
+    make configure
 
-Porting to another target can be done by adding it to target.mak.
-
-Yeah, I am too lazy to copy & paste & adjust a proper configure script.
-Send a patch if you want. I will not accept any autotools stuff though.
+Or specify a different C compiler:
+    make CC=suncc configure
+    or
+    make CC=suncc all



From ivop at mail.berlios.de  Wed Aug 29 21:13:35 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 21:13:35 +0200
Subject: [Hmgen-svnlog] r8 - trunk
Message-ID: <200708291913.l7TJDZcU009908@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 21:13:35 +0200 (Wed, 29 Aug 2007)
New Revision: 8

Modified:
   trunk/Makefile
Log:
move clean targets


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 19:13:06 UTC (rev 7)
+++ trunk/Makefile	2007-08-29 19:13:35 UTC (rev 8)
@@ -13,6 +13,9 @@
 $(DEFGOAL) all::
 	@make configure
 	@make $(MAKECMDGOALS)
+
+clean:
+
 else
 
 # ---------- PROJECT ----------
@@ -93,20 +96,15 @@
 size-long:
 	@wc -l *.[ch] Makefile *.mak
 
-endif	# END CONFIGURE PREAMBLE
-
-# ---------- CLEAN UP ----------
-
 clean:
 	rm -f $(CLI) $(CLIg) $(CLI_OBJS)
 	rm -f $(LIBHMGEN) $(LIBHMGEN_OBJS)
 	rm -f $(GUI) $(GUIg) $(GUI_OBJS)
 
-mrproper distclean: clean
-	rm -f *~ .depend *.pgm *.ppm config.mak
+.PHONY: all dep depend clean verbose $(CLI)-verbose size \
+        $(GUI)-verbose $(LIBHMGEN)-verbose depend-verbose dep-verbose size-long
 
-.PHONY: all dep depend clean distclean mrproper verbose $(CLI)-verbose size
-.PHONY: $(GUI)-verbose $(LIBHMGEN)-verbose depend-verbose dep-verbose size-long
+endif	# END CONFIGURE PREAMBLE
 
 # ---------- CONFIGURE ----------
 
@@ -221,7 +219,11 @@
 	@echo AR_FLAGS=cru >> config.mak
 	@echo CONFIGURE_DONE=yes >> config.mak
 
-.PHONY: clean-config.mak configure config-cc config-cc-vendor-and-version \
+mrproper distclean: clean
+	rm -f *~ .depend *.pgm *.ppm config.mak
+
+.PHONY: mrproper distclean clean-config.mak configure config-cc \
+        config-cc-vendor-and-version \
         config-cc-flags config-cc-vendor-and-version-restrict \
         config-pkg-config config-gtk-flags config-gthread-flags
 



From ivop at mail.berlios.de  Wed Aug 29 23:20:47 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 23:20:47 +0200
Subject: [Hmgen-svnlog] r9 - trunk
Message-ID: <200708292120.l7TLKlCv017020@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 23:20:46 +0200 (Wed, 29 Aug 2007)
New Revision: 9

Modified:
   trunk/Makefile
Log:
cosmetics, line length


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 19:13:35 UTC (rev 8)
+++ trunk/Makefile	2007-08-29 21:20:46 UTC (rev 9)
@@ -188,7 +188,8 @@
 NOERR=2>/dev/null
 
 define CONFIG_PKG_CONFIG_PKG
-	@TMP=`pkg-config --atleast-version=$(4) $(1) $(NOERR) && echo yes || echo no` ;\
+	@TMP=`pkg-config --atleast-version=$(4) $(1) $(NOERR) && \
+		echo yes || echo no` ;\
 	echo $(1)... $$TMP ; \
 	if test "$$TMP" != "yes" ; then \
 		echo "$(1), at least version $(4), not found." ; \



From ivop at mail.berlios.de  Wed Aug 29 23:32:43 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 23:32:43 +0200
Subject: [Hmgen-svnlog] r10 - trunk
Message-ID: <200708292132.l7TLWhp3017616@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 23:32:42 +0200 (Wed, 29 Aug 2007)
New Revision: 10

Modified:
   trunk/Makefile
Log:
print configure results through common function


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 21:20:46 UTC (rev 9)
+++ trunk/Makefile	2007-08-29 21:32:42 UTC (rev 10)
@@ -108,11 +108,15 @@
 
 # ---------- CONFIGURE ----------
 
+define config-print-result
+	printf "%-16s : %s\n" "$(1)" "$(2)"
+endef
+
 clean-config.mak:
 	@> config.mak
 
 config-cc:
-	@echo C compiler... $(CC)
+	@$(call config-print-result,C Compiler,$(CC))
 	@echo CC=$(CC) >> config.mak
 	@echo CC_DEP=$(CC) >> config.mak
 
@@ -136,8 +140,8 @@
 		>>config.mak ;\
 	echo CC_VERSION_SUBMINOR=`echo $$CC_VERSION | cut -d '.' -f 3` \
 		>>config.mak ;\
-	echo Vendor... $$CC_VENDOR ; \
-	echo Version... $$CC_VERSION
+	$(call config-print-result,Vendor,$$CC_VENDOR) ; \
+	$(call config-print-result,Version,$$CC_VERSION)
 
 config-cc-vendor-and-version-restrict:	config-cc-vendor-and-version
 	@. config.mak ; \
@@ -171,15 +175,15 @@
 	echo STD_FLAGS=$$STD_FLAGS >> config.mak ; \
 	echo DEBUG_FLAGS=$$DEBUG_FLAGS >> config.mak ; \
 	echo DEP_FLAGS=$$DEP_FLAGS >> config.mak ; \
-	echo Warnings... $$WARN_FLAGS ; \
-	echo Optimize... $$OPT_FLAGS ; \
-	echo Standards... $$STD_FLAGS ; \
-	echo Debug... $$DEBUG_FLAGS ; \
-	echo Dependencies... $$DEP_FLAGS ;
+	$(call config-print-result,Warnings,$$WARN_FLAGS) ; \
+	$(call config-print-result,Optimize,$$OPT_FLAGS) ; \
+	$(call config-print-result,Standards,$$STD_FLAGS) ; \
+	$(call config-print-result,Debug,$$DEBUG_FLAGS) ; \
+	$(call config-print-result,Dependencies,$$DEP_FLAGS) ;
 
 config-pkg-config:
 	@TMP=`pkg-config --version 2>/dev/null 1>&2 && echo yes || echo no` ; \
-	echo pkg-config... $$TMP ; \
+	$(call config-print-result,pkg-config,$$TMP) ; \
 	if test "$$TMP" != "yes" ; then \
 		echo "pkg-config not found" ; \
 		exit 1 ; \
@@ -190,7 +194,7 @@
 define CONFIG_PKG_CONFIG_PKG
 	@TMP=`pkg-config --atleast-version=$(4) $(1) $(NOERR) && \
 		echo yes || echo no` ;\
-	echo $(1)... $$TMP ; \
+	$(call config-print-result,$(1),$$TMP) ; \
 	if test "$$TMP" != "yes" ; then \
 		echo "$(1), at least version $(4), not found." ; \
 		echo "Perhaps you need to install the dev(el) packages?" ; \



From ivop at mail.berlios.de  Wed Aug 29 23:34:26 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 23:34:26 +0200
Subject: [Hmgen-svnlog] r11 - trunk
Message-ID: <200708292134.l7TLYQS0017789@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 23:34:26 +0200 (Wed, 29 Aug 2007)
New Revision: 11

Modified:
   trunk/Makefile
Log:
cosmetics, upper to lower case


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 21:32:42 UTC (rev 10)
+++ trunk/Makefile	2007-08-29 21:34:26 UTC (rev 11)
@@ -116,7 +116,7 @@
 	@> config.mak
 
 config-cc:
-	@$(call config-print-result,C Compiler,$(CC))
+	@$(call config-print-result,compiler,$(CC))
 	@echo CC=$(CC) >> config.mak
 	@echo CC_DEP=$(CC) >> config.mak
 
@@ -140,8 +140,8 @@
 		>>config.mak ;\
 	echo CC_VERSION_SUBMINOR=`echo $$CC_VERSION | cut -d '.' -f 3` \
 		>>config.mak ;\
-	$(call config-print-result,Vendor,$$CC_VENDOR) ; \
-	$(call config-print-result,Version,$$CC_VERSION)
+	$(call config-print-result,vendor,$$CC_VENDOR) ; \
+	$(call config-print-result,version,$$CC_VERSION)
 
 config-cc-vendor-and-version-restrict:	config-cc-vendor-and-version
 	@. config.mak ; \
@@ -175,11 +175,11 @@
 	echo STD_FLAGS=$$STD_FLAGS >> config.mak ; \
 	echo DEBUG_FLAGS=$$DEBUG_FLAGS >> config.mak ; \
 	echo DEP_FLAGS=$$DEP_FLAGS >> config.mak ; \
-	$(call config-print-result,Warnings,$$WARN_FLAGS) ; \
-	$(call config-print-result,Optimize,$$OPT_FLAGS) ; \
-	$(call config-print-result,Standards,$$STD_FLAGS) ; \
-	$(call config-print-result,Debug,$$DEBUG_FLAGS) ; \
-	$(call config-print-result,Dependencies,$$DEP_FLAGS) ;
+	$(call config-print-result,warnings,$$WARN_FLAGS) ; \
+	$(call config-print-result,optimize,$$OPT_FLAGS) ; \
+	$(call config-print-result,standards,$$STD_FLAGS) ; \
+	$(call config-print-result,debug,$$DEBUG_FLAGS) ; \
+	$(call config-print-result,dependencies,$$DEP_FLAGS) ;
 
 config-pkg-config:
 	@TMP=`pkg-config --version 2>/dev/null 1>&2 && echo yes || echo no` ; \



From ivop at mail.berlios.de  Wed Aug 29 23:35:37 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 23:35:37 +0200
Subject: [Hmgen-svnlog] r12 - trunk
Message-ID: <200708292135.l7TLZbtf017904@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 23:35:34 +0200 (Wed, 29 Aug 2007)
New Revision: 12

Modified:
   trunk/AUTHORS
Log:
credit where credit is due


Modified: trunk/AUTHORS
===================================================================
--- trunk/AUTHORS	2007-08-29 21:34:26 UTC (rev 11)
+++ trunk/AUTHORS	2007-08-29 21:35:34 UTC (rev 12)
@@ -1 +1,3 @@
 Ivo van Poorten <ivop at euronet.nl>
+
+John Walker (most of lib_algo_forge.c code)



From ivop at mail.berlios.de  Wed Aug 29 23:58:17 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 23:58:17 +0200
Subject: [Hmgen-svnlog] r14 - trunk
Message-ID: <200708292158.l7TLwHXD020886@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 23:58:16 +0200 (Wed, 29 Aug 2007)
New Revision: 14

Modified:
   trunk/Makefile
Log:
fix for -pthread in GTHREAD_*FLAGS for suncc. -p turns on profiling.


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-29 21:38:45 UTC (rev 13)
+++ trunk/Makefile	2007-08-29 21:58:16 UTC (rev 14)
@@ -212,10 +212,19 @@
 config-gthread-flags: config-pkg-config
 	$(call CONFIG_PKG_CONFIG_PKG,gthread-2.0,GTHREAD_CFLAGS,GTHREAD_LDFLAGS,2.0)
 
+config-suncc-flags-fix: config-cc-vendor-and-version config-gthread-flags
+	@if grep -q CC_VENDOR=sun config.mak ; then \
+		GTHREAD_CFLAGS=`grep GTHREAD_CFLAGS= config.mak | sed 's/-pthread//'` ; \
+		GTHREAD_LDFLAGS=`grep GTHREAD_LDFLAGS= config.mak | sed 's/-pthread//'` ; \
+		echo $$GTHREAD_CFLAGS >> config.mak ; \
+		echo $$GTHREAD_LDFLAGS >> config.mak ; \
+	fi ;
+
 configure: clean-config.mak \
            config-cc-flags \
            config-gtk-flags \
-           config-gthread-flags
+           config-gthread-flags \
+           config-suncc-flags-fix
 	@echo AR?=ar >> config.mak
 	@echo RANLIB?=ranlib >> config.mak
 	@echo STRIP?=strip >> config.mak



From ivop at mail.berlios.de  Wed Aug 29 23:38:45 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Wed, 29 Aug 2007 23:38:45 +0200
Subject: [Hmgen-svnlog] r13 - in trunk: . assist
Message-ID: <200708292138.l7TLcjwG018144@sheep.berlios.de>

Author: ivop
Date: 2007-08-29 23:38:45 +0200 (Wed, 29 Aug 2007)
New Revision: 13

Added:
   trunk/assist/
   trunk/assist/README
   trunk/assist/hmgengui.glade
Log:
backup of original glade file


Added: trunk/assist/README
===================================================================
--- trunk/assist/README	2007-08-29 21:35:34 UTC (rev 12)
+++ trunk/assist/README	2007-08-29 21:38:45 UTC (rev 13)
@@ -0,0 +1,3 @@
+This file and glade-2.0 was used to bootstrap the GUI. However, I do not use
+any of the buildtools or libglade. Current interface/callbacks/etc. files
+are modified versions.

Added: trunk/assist/hmgengui.glade
===================================================================
--- trunk/assist/hmgengui.glade	2007-08-29 21:35:34 UTC (rev 12)
+++ trunk/assist/hmgengui.glade	2007-08-29 21:38:45 UTC (rev 13)
@@ -0,0 +1,3365 @@
+<?xml version="1.0" standalone="no"?> <!--*- mode: xml -*-->
+<!DOCTYPE glade-interface SYSTEM "http://glade.gnome.org/glade-2.0.dtd">
+
+<glade-interface>
+
+<widget class="GtkWindow" id="hmgengui">
+  <property name="width_request">800</property>
+  <property name="visible">True</property>
+  <property name="title" translatable="yes">hmgengui</property>
+  <property name="type">GTK_WINDOW_TOPLEVEL</property>
+  <property name="window_position">GTK_WIN_POS_NONE</property>
+  <property name="modal">False</property>
+  <property name="resizable">True</property>
+  <property name="destroy_with_parent">False</property>
+  <property name="decorated">True</property>
+  <property name="skip_taskbar_hint">False</property>
+  <property name="skip_pager_hint">False</property>
+  <property name="type_hint">GDK_WINDOW_TYPE_HINT_NORMAL</property>
+  <property name="gravity">GDK_GRAVITY_NORTH_WEST</property>
+  <property name="focus_on_map">True</property>
+  <property name="urgency_hint">False</property>
+  <signal name="delete_event" handler="gtk_main_quit" last_modification_time="Tue, 21 Aug 2007 13:25:27 GMT"/>
+
+  <child>
+    <widget class="GtkVBox" id="vbox1">
+      <property name="visible">True</property>
+      <property name="homogeneous">False</property>
+      <property name="spacing">0</property>
+
+      <child>
+	<widget class="GtkNotebook" id="main_notebook">
+	  <property name="visible">True</property>
+	  <property name="can_focus">True</property>
+	  <property name="show_tabs">True</property>
+	  <property name="show_border">True</property>
+	  <property name="tab_pos">GTK_POS_TOP</property>
+	  <property name="scrollable">False</property>
+	  <property name="enable_popup">False</property>
+
+	  <child>
+	    <widget class="GtkHBox" id="hbox5">
+	      <property name="visible">True</property>
+	      <property name="homogeneous">False</property>
+	      <property name="spacing">0</property>
+
+	      <child>
+		<widget class="GtkNotebook" id="view_sidepanel_notebook">
+		  <property name="visible">True</property>
+		  <property name="can_focus">True</property>
+		  <property name="show_tabs">True</property>
+		  <property name="show_border">False</property>
+		  <property name="tab_pos">GTK_POS_LEFT</property>
+		  <property name="scrollable">False</property>
+		  <property name="enable_popup">False</property>
+
+		  <child>
+		    <widget class="GtkTable" id="table9">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="n_rows">5</property>
+		      <property name="n_columns">3</property>
+		      <property name="homogeneous">False</property>
+		      <property name="row_spacing">8</property>
+		      <property name="column_spacing">8</property>
+
+		      <child>
+			<widget class="GtkLabel" id="label39">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Width</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label40">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Height</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="new_width_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">513 1 16385 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="new_height_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">513 1 16385 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkButton" id="new_create_button">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="label" translatable="yes">Create</property>
+			  <property name="use_underline">True</property>
+			  <property name="relief">GTK_RELIEF_NORMAL</property>
+			  <property name="focus_on_click">True</property>
+			  <signal name="clicked" handler="on_new_create_button_clicked" last_modification_time="Sun, 26 Aug 2007 20:09:40 GMT"/>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">3</property>
+			  <property name="bottom_attach">4</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label41">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Level</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">2</property>
+			  <property name="bottom_attach">3</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="new_level_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">128 0 255 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">2</property>
+			  <property name="bottom_attach">3</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+		    </widget>
+		    <packing>
+		      <property name="tab_expand">False</property>
+		      <property name="tab_fill">True</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label35">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">New</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">False</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">tab</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkTable" id="table10">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="n_rows">4</property>
+		      <property name="n_columns">3</property>
+		      <property name="homogeneous">False</property>
+		      <property name="row_spacing">8</property>
+		      <property name="column_spacing">8</property>
+
+		      <child>
+			<widget class="GtkLabel" id="label43">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Minimum</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label44">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Maximum</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="norm2_min_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">0 0 255 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="norm2_max_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">255 0 255 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkButton" id="norm2_button">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="label" translatable="yes">Normalize</property>
+			  <property name="use_underline">True</property>
+			  <property name="relief">GTK_RELIEF_NORMAL</property>
+			  <property name="focus_on_click">True</property>
+			  <signal name="clicked" handler="on_norm2_button_clicked" last_modification_time="Sun, 26 Aug 2007 20:09:50 GMT"/>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">2</property>
+			  <property name="bottom_attach">3</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+		    </widget>
+		    <packing>
+		      <property name="tab_expand">False</property>
+		      <property name="tab_fill">True</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label36">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">Normalize</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">False</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">tab</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkTable" id="table11">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="n_rows">5</property>
+		      <property name="n_columns">3</property>
+		      <property name="homogeneous">False</property>
+		      <property name="row_spacing">8</property>
+		      <property name="column_spacing">8</property>
+
+		      <child>
+			<widget class="GtkLabel" id="label45">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">X Radius</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label46">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Y Radius</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label47">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">Sigma</property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">2</property>
+			  <property name="bottom_attach">3</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="blur2_xrad_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">3 1 128 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="blur2_yrad_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">0</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">3 1 128 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkSpinButton" id="blur2_sigma_spinbutton">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="climb_rate">1</property>
+			  <property name="digits">2</property>
+			  <property name="numeric">False</property>
+			  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+			  <property name="snap_to_ticks">False</property>
+			  <property name="wrap">False</property>
+			  <property name="adjustment">1 0 100 1 10 10</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">2</property>
+			  <property name="bottom_attach">3</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkButton" id="blur2_button">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="label" translatable="yes">Blur</property>
+			  <property name="use_underline">True</property>
+			  <property name="relief">GTK_RELIEF_NORMAL</property>
+			  <property name="focus_on_click">True</property>
+			  <signal name="clicked" handler="on_blur2_button_clicked" last_modification_time="Sun, 26 Aug 2007 20:09:59 GMT"/>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">3</property>
+			  <property name="bottom_attach">4</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+		    </widget>
+		    <packing>
+		      <property name="tab_expand">False</property>
+		      <property name="tab_fill">True</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label37">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">Blur</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">False</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">tab</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkTable" id="table12">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="n_rows">3</property>
+		      <property name="n_columns">3</property>
+		      <property name="homogeneous">False</property>
+		      <property name="row_spacing">8</property>
+		      <property name="column_spacing">8</property>
+
+		      <child>
+			<widget class="GtkButton" id="invert2_button">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="label" translatable="yes">Invert</property>
+			  <property name="use_underline">True</property>
+			  <property name="relief">GTK_RELIEF_NORMAL</property>
+			  <property name="focus_on_click">True</property>
+			  <signal name="clicked" handler="on_invert2_button_clicked" last_modification_time="Sun, 26 Aug 2007 20:10:07 GMT"/>
+			</widget>
+			<packing>
+			  <property name="left_attach">1</property>
+			  <property name="right_attach">2</property>
+			  <property name="top_attach">1</property>
+			  <property name="bottom_attach">2</property>
+			  <property name="x_options">fill</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+
+		      <child>
+			<widget class="GtkLabel" id="label48">
+			  <property name="visible">True</property>
+			  <property name="label" translatable="yes">          </property>
+			  <property name="use_underline">False</property>
+			  <property name="use_markup">False</property>
+			  <property name="justify">GTK_JUSTIFY_LEFT</property>
+			  <property name="wrap">False</property>
+			  <property name="selectable">False</property>
+			  <property name="xalign">0</property>
+			  <property name="yalign">0.5</property>
+			  <property name="xpad">0</property>
+			  <property name="ypad">0</property>
+			  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			  <property name="width_chars">-1</property>
+			  <property name="single_line_mode">False</property>
+			  <property name="angle">0</property>
+			</widget>
+			<packing>
+			  <property name="left_attach">0</property>
+			  <property name="right_attach">1</property>
+			  <property name="top_attach">0</property>
+			  <property name="bottom_attach">1</property>
+			  <property name="y_options"></property>
+			</packing>
+		      </child>
+		    </widget>
+		    <packing>
+		      <property name="tab_expand">False</property>
+		      <property name="tab_fill">True</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label38">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">Invert</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">False</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">tab</property>
+		    </packing>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">True</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkScrolledWindow" id="view_scrolledwindow">
+		  <property name="visible">True</property>
+		  <property name="can_focus">True</property>
+		  <property name="hscrollbar_policy">GTK_POLICY_ALWAYS</property>
+		  <property name="vscrollbar_policy">GTK_POLICY_ALWAYS</property>
+		  <property name="shadow_type">GTK_SHADOW_NONE</property>
+		  <property name="window_placement">GTK_CORNER_TOP_LEFT</property>
+
+		  <child>
+		    <widget class="GtkViewport" id="viewport1">
+		      <property name="visible">True</property>
+		      <property name="shadow_type">GTK_SHADOW_IN</property>
+
+		      <child>
+			<widget class="GtkDrawingArea" id="view_drawingarea">
+			  <property name="visible">True</property>
+			  <signal name="expose_event" handler="on_view_drawingarea_expose_event" last_modification_time="Tue, 21 Aug 2007 22:18:47 GMT"/>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">True</property>
+		  <property name="fill">True</property>
+		</packing>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="view_label">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">2D View</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkVBox" id="vbox3">
+	      <property name="visible">True</property>
+	      <property name="homogeneous">False</property>
+	      <property name="spacing">0</property>
+
+	      <child>
+		<widget class="GtkFrame" id="frame1">
+		  <property name="border_width">8</property>
+		  <property name="visible">True</property>
+		  <property name="label_xalign">0</property>
+		  <property name="label_yalign">0.5</property>
+		  <property name="shadow_type">GTK_SHADOW_ETCHED_IN</property>
+
+		  <child>
+		    <widget class="GtkAlignment" id="alignment1">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xscale">1</property>
+		      <property name="yscale">1</property>
+		      <property name="top_padding">0</property>
+		      <property name="bottom_padding">0</property>
+		      <property name="left_padding">12</property>
+		      <property name="right_padding">0</property>
+
+		      <child>
+			<widget class="GtkHBox" id="hbox1">
+			  <property name="visible">True</property>
+			  <property name="homogeneous">False</property>
+			  <property name="spacing">8</property>
+
+			  <child>
+			    <widget class="GtkLabel" id="label9">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Algorithm</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkComboBox" id="algorithm_combobox">
+			      <property name="visible">True</property>
+			      <property name="items" translatable="yes">Fault Formation
+Midpoint Displacement (plasma)
+Forge (ppmforge/gforge/fft'd noise)
+</property>
+			      <property name="add_tearoffs">False</property>
+			      <property name="focus_on_click">True</property>
+			      <signal name="changed" handler="on_algorithm_combobox_changed" last_modification_time="Tue, 21 Aug 2007 13:27:00 GMT"/>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="label10">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Size</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkComboBox" id="size_combobox">
+			      <property name="visible">True</property>
+			      <property name="items" translatable="yes">3 x 3
+5 x 5
+9 x 9
+17 x 17
+33 x 33
+65 x 65
+129 x 129
+257 x 257
+513 x 513
+1025 x 1025
+2049 x 2049
+4097 x 4097
+8193 x 8193
+16385 x 16384
+</property>
+			      <property name="add_tearoffs">False</property>
+			      <property name="focus_on_click">True</property>
+			      <signal name="changed" handler="on_size_combobox_changed" last_modification_time="Tue, 21 Aug 2007 13:28:44 GMT"/>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkButton" id="generate_button">
+			      <property name="visible">True</property>
+			      <property name="sensitive">False</property>
+			      <property name="can_focus">True</property>
+			      <property name="label" translatable="yes">Generate!</property>
+			      <property name="use_underline">True</property>
+			      <property name="relief">GTK_RELIEF_NORMAL</property>
+			      <property name="focus_on_click">True</property>
+			      <signal name="clicked" handler="on_generate_button_clicked" last_modification_time="Tue, 21 Aug 2007 13:30:09 GMT"/>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <placeholder/>
+			  </child>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label6">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">Main</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">True</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">label_item</property>
+		    </packing>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkFrame" id="frame2">
+		  <property name="border_width">8</property>
+		  <property name="visible">True</property>
+		  <property name="label_xalign">0</property>
+		  <property name="label_yalign">0.5</property>
+		  <property name="shadow_type">GTK_SHADOW_ETCHED_IN</property>
+
+		  <child>
+		    <widget class="GtkAlignment" id="alignment2">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xscale">1</property>
+		      <property name="yscale">1</property>
+		      <property name="top_padding">0</property>
+		      <property name="bottom_padding">0</property>
+		      <property name="left_padding">12</property>
+		      <property name="right_padding">0</property>
+
+		      <child>
+			<widget class="GtkNotebook" id="postprocessing_notebook">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="show_tabs">True</property>
+			  <property name="show_border">True</property>
+			  <property name="tab_pos">GTK_POS_TOP</property>
+			  <property name="scrollable">False</property>
+			  <property name="enable_popup">False</property>
+
+			  <child>
+			    <widget class="GtkTable" id="table7">
+			      <property name="border_width">8</property>
+			      <property name="visible">True</property>
+			      <property name="n_rows">4</property>
+			      <property name="n_columns">4</property>
+			      <property name="homogeneous">False</property>
+			      <property name="row_spacing">8</property>
+			      <property name="column_spacing">8</property>
+
+			      <child>
+				<widget class="GtkCheckButton" id="normalize_checkbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="label" translatable="yes">Enable</property>
+				  <property name="use_underline">True</property>
+				  <property name="relief">GTK_RELIEF_NORMAL</property>
+				  <property name="focus_on_click">True</property>
+				  <property name="active">False</property>
+				  <property name="inconsistent">False</property>
+				  <property name="draw_indicator">True</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label26">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Minimum</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label27">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Maximum</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="norm_min_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">0 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="norm_max_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">255 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkCheckButton" id="norm_first_checkbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="label" translatable="yes">First</property>
+				  <property name="use_underline">True</property>
+				  <property name="relief">GTK_RELIEF_NORMAL</property>
+				  <property name="focus_on_click">True</property>
+				  <property name="active">False</property>
+				  <property name="inconsistent">False</property>
+				  <property name="draw_indicator">True</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkCheckButton" id="norm_last_checkbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="label" translatable="yes">Last</property>
+				  <property name="use_underline">True</property>
+				  <property name="relief">GTK_RELIEF_NORMAL</property>
+				  <property name="focus_on_click">True</property>
+				  <property name="active">False</property>
+				  <property name="inconsistent">False</property>
+				  <property name="draw_indicator">True</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">2</property>
+				  <property name="right_attach">3</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+			    </widget>
+			    <packing>
+			      <property name="tab_expand">False</property>
+			      <property name="tab_fill">True</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="normalize_label">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Normalize</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="type">tab</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkTable" id="table5">
+			      <property name="border_width">8</property>
+			      <property name="visible">True</property>
+			      <property name="n_rows">5</property>
+			      <property name="n_columns">3</property>
+			      <property name="homogeneous">False</property>
+			      <property name="row_spacing">8</property>
+			      <property name="column_spacing">8</property>
+
+			      <child>
+				<widget class="GtkCheckButton" id="blur_checkbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="label" translatable="yes">Enable</property>
+				  <property name="use_underline">True</property>
+				  <property name="relief">GTK_RELIEF_NORMAL</property>
+				  <property name="focus_on_click">True</property>
+				  <property name="active">False</property>
+				  <property name="inconsistent">False</property>
+				  <property name="draw_indicator">True</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label28">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">X Radius</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label29">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Y Radius</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label30">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Sigma</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">3</property>
+				  <property name="bottom_attach">4</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="blur_sigma_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">2</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">1 0 100 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">3</property>
+				  <property name="bottom_attach">4</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="blur_yradius_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">3 1 128 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="blur_xradius_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">3 1 128 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+			    </widget>
+			    <packing>
+			      <property name="tab_expand">False</property>
+			      <property name="tab_fill">True</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="blur_label">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Blur</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="type">tab</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkTable" id="table6">
+			      <property name="border_width">8</property>
+			      <property name="visible">True</property>
+			      <property name="n_rows">2</property>
+			      <property name="n_columns">2</property>
+			      <property name="homogeneous">False</property>
+			      <property name="row_spacing">8</property>
+			      <property name="column_spacing">8</property>
+
+			      <child>
+				<widget class="GtkCheckButton" id="invert_checkbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="label" translatable="yes">Enable</property>
+				  <property name="use_underline">True</property>
+				  <property name="relief">GTK_RELIEF_NORMAL</property>
+				  <property name="focus_on_click">True</property>
+				  <property name="active">False</property>
+				  <property name="inconsistent">False</property>
+				  <property name="draw_indicator">True</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+			    </widget>
+			    <packing>
+			      <property name="tab_expand">False</property>
+			      <property name="tab_fill">True</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="invert_label">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Invert</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="type">tab</property>
+			    </packing>
+			  </child>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label7">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">Postprocessing</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">True</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">label_item</property>
+		    </packing>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkFrame" id="frame3">
+		  <property name="border_width">8</property>
+		  <property name="visible">True</property>
+		  <property name="label_xalign">0</property>
+		  <property name="label_yalign">0.5</property>
+		  <property name="shadow_type">GTK_SHADOW_ETCHED_IN</property>
+
+		  <child>
+		    <widget class="GtkAlignment" id="alignment3">
+		      <property name="border_width">8</property>
+		      <property name="visible">True</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xscale">1</property>
+		      <property name="yscale">1</property>
+		      <property name="top_padding">0</property>
+		      <property name="bottom_padding">0</property>
+		      <property name="left_padding">12</property>
+		      <property name="right_padding">0</property>
+
+		      <child>
+			<widget class="GtkNotebook" id="algosettings_notebook">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="show_tabs">True</property>
+			  <property name="show_border">True</property>
+			  <property name="tab_pos">GTK_POS_TOP</property>
+			  <property name="scrollable">False</property>
+			  <property name="enable_popup">False</property>
+
+			  <child>
+			    <widget class="GtkTable" id="table1">
+			      <property name="border_width">8</property>
+			      <property name="visible">True</property>
+			      <property name="n_rows">6</property>
+			      <property name="n_columns">3</property>
+			      <property name="homogeneous">False</property>
+			      <property name="row_spacing">8</property>
+			      <property name="column_spacing">8</property>
+
+			      <child>
+				<widget class="GtkLabel" id="label11">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Seed</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label12">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Initial Height</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label13">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Number of Plates</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label14">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Up Factor</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">3</property>
+				  <property name="bottom_attach">4</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label15">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Down Factor</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">4</property>
+				  <property name="bottom_attach">5</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="ff_seed_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">42 0 2147469952 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="ff_init_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">128 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="ff_nplates_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">512 1 65536 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="ff_upfactor_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">1 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">3</property>
+				  <property name="bottom_attach">4</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="ff_downfactor_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">1 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">4</property>
+				  <property name="bottom_attach">5</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+			    </widget>
+			    <packing>
+			      <property name="tab_expand">False</property>
+			      <property name="tab_fill">True</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="ff_label">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">FF</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="type">tab</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkTable" id="table3">
+			      <property name="border_width">8</property>
+			      <property name="visible">True</property>
+			      <property name="n_rows">8</property>
+			      <property name="n_columns">3</property>
+			      <property name="homogeneous">False</property>
+			      <property name="row_spacing">8</property>
+			      <property name="column_spacing">8</property>
+
+			      <child>
+				<widget class="GtkLabel" id="label16">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Seed</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label17">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Top Left</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label18">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Top Right</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label19">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Bottom Left</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">3</property>
+				  <property name="bottom_attach">4</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label20">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Bottom Right</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">4</property>
+				  <property name="bottom_attach">5</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label21">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Displacement</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">5</property>
+				  <property name="bottom_attach">6</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label22">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Roughness</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">6</property>
+				  <property name="bottom_attach">7</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_roughness_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">2</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">0.6 0 16 0.00999999977648 0.10000000149 1</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">6</property>
+				  <property name="bottom_attach">7</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_displacement_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">16 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">5</property>
+				  <property name="bottom_attach">6</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_br_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">128 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">4</property>
+				  <property name="bottom_attach">5</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_bl_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">128 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">3</property>
+				  <property name="bottom_attach">4</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_tr_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">128 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_tl_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">128 0 255 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="mpd_seed_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">42 0 2147469952 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+			    </widget>
+			    <packing>
+			      <property name="tab_expand">False</property>
+			      <property name="tab_fill">True</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="mpd_label">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">MPD</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="type">tab</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkTable" id="table4">
+			      <property name="border_width">8</property>
+			      <property name="visible">True</property>
+			      <property name="n_rows">4</property>
+			      <property name="n_columns">3</property>
+			      <property name="homogeneous">False</property>
+			      <property name="row_spacing">8</property>
+			      <property name="column_spacing">8</property>
+
+			      <child>
+				<widget class="GtkLabel" id="label23">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Seed</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label24">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Fractal Dimension</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkLabel" id="label25">
+				  <property name="visible">True</property>
+				  <property name="label" translatable="yes">Power Scale</property>
+				  <property name="use_underline">False</property>
+				  <property name="use_markup">False</property>
+				  <property name="justify">GTK_JUSTIFY_LEFT</property>
+				  <property name="wrap">False</property>
+				  <property name="selectable">False</property>
+				  <property name="xalign">0</property>
+				  <property name="yalign">0.5</property>
+				  <property name="xpad">0</property>
+				  <property name="ypad">0</property>
+				  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+				  <property name="width_chars">-1</property>
+				  <property name="single_line_mode">False</property>
+				  <property name="angle">0</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">0</property>
+				  <property name="right_attach">1</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="forge_seed_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">0</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">47 0 2147469952 1 10 10</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">0</property>
+				  <property name="bottom_attach">1</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="forge_fracdim_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">2</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">2.40000009537 0 3 0.00999999977648 0.10000000149 1</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">1</property>
+				  <property name="bottom_attach">2</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+
+			      <child>
+				<widget class="GtkSpinButton" id="forge_powscale_spinbutton">
+				  <property name="visible">True</property>
+				  <property name="can_focus">True</property>
+				  <property name="climb_rate">1</property>
+				  <property name="digits">2</property>
+				  <property name="numeric">False</property>
+				  <property name="update_policy">GTK_UPDATE_ALWAYS</property>
+				  <property name="snap_to_ticks">False</property>
+				  <property name="wrap">False</property>
+				  <property name="adjustment">1 0 8 0.00999999977648 0.10000000149 1</property>
+				</widget>
+				<packing>
+				  <property name="left_attach">1</property>
+				  <property name="right_attach">2</property>
+				  <property name="top_attach">2</property>
+				  <property name="bottom_attach">3</property>
+				  <property name="x_options">fill</property>
+				  <property name="y_options"></property>
+				</packing>
+			      </child>
+			    </widget>
+			    <packing>
+			      <property name="tab_expand">False</property>
+			      <property name="tab_fill">True</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="forge_label">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Forge</property>
+			      <property name="use_underline">False</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="type">tab</property>
+			    </packing>
+			  </child>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+
+		  <child>
+		    <widget class="GtkLabel" id="label8">
+		      <property name="visible">True</property>
+		      <property name="label" translatable="yes">Algorithm Settings</property>
+		      <property name="use_underline">False</property>
+		      <property name="use_markup">True</property>
+		      <property name="justify">GTK_JUSTIFY_LEFT</property>
+		      <property name="wrap">False</property>
+		      <property name="selectable">False</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xpad">0</property>
+		      <property name="ypad">0</property>
+		      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		      <property name="width_chars">-1</property>
+		      <property name="single_line_mode">False</property>
+		      <property name="angle">0</property>
+		    </widget>
+		    <packing>
+		      <property name="type">label_item</property>
+		    </packing>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<placeholder/>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="generate_label">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Generate</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkVBox" id="vbox5">
+	      <property name="border_width">8</property>
+	      <property name="visible">True</property>
+	      <property name="homogeneous">False</property>
+	      <property name="spacing">8</property>
+
+	      <child>
+		<widget class="GtkHBox" id="hbox7">
+		  <property name="visible">True</property>
+		  <property name="homogeneous">False</property>
+		  <property name="spacing">0</property>
+
+		  <child>
+		    <widget class="GtkDrawingArea" id="colormap_display">
+		      <property name="width_request">514</property>
+		      <property name="height_request">32</property>
+		      <property name="visible">True</property>
+		    </widget>
+		    <packing>
+		      <property name="padding">0</property>
+		      <property name="expand">False</property>
+		      <property name="fill">False</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <placeholder/>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkTable" id="table14">
+		  <property name="visible">True</property>
+		  <property name="n_rows">9</property>
+		  <property name="n_columns">3</property>
+		  <property name="homogeneous">False</property>
+		  <property name="row_spacing">8</property>
+		  <property name="column_spacing">8</property>
+
+		  <child>
+		    <widget class="GtkAlignment" id="alignment6">
+		      <property name="visible">True</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xscale">1</property>
+		      <property name="yscale">1</property>
+		      <property name="top_padding">0</property>
+		      <property name="bottom_padding">0</property>
+		      <property name="left_padding">0</property>
+		      <property name="right_padding">0</property>
+
+		      <child>
+			<widget class="GtkHScale" id="hscale19">
+			  <property name="visible">True</property>
+			  <property name="can_focus">True</property>
+			  <property name="draw_value">True</property>
+			  <property name="value_pos">GTK_POS_TOP</property>
+			  <property name="digits">0</property>
+			  <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+			  <property name="inverted">False</property>
+			  <property name="adjustment">0 0 255 0 0 0</property>
+			</widget>
+		      </child>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">5</property>
+		      <property name="bottom_attach">6</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton1">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">0</property>
+		      <property name="bottom_attach">1</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton2">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">1</property>
+		      <property name="bottom_attach">2</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton3">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">2</property>
+		      <property name="bottom_attach">3</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton4">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">3</property>
+		      <property name="bottom_attach">4</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton5">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">4</property>
+		      <property name="bottom_attach">5</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton6">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">5</property>
+		      <property name="bottom_attach">6</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton7">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">6</property>
+		      <property name="bottom_attach">7</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkColorButton" id="colorbutton8">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="use_alpha">False</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">7</property>
+		      <property name="bottom_attach">8</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale15">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">1</property>
+		      <property name="bottom_attach">2</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale16">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">2</property>
+		      <property name="bottom_attach">3</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale17">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">3</property>
+		      <property name="bottom_attach">4</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale18">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">4</property>
+		      <property name="bottom_attach">5</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale20">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">6</property>
+		      <property name="bottom_attach">7</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale21">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">7</property>
+		      <property name="bottom_attach">8</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkHScale" id="hscale8">
+		      <property name="width_request">300</property>
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="draw_value">True</property>
+		      <property name="value_pos">GTK_POS_TOP</property>
+		      <property name="digits">0</property>
+		      <property name="update_policy">GTK_UPDATE_CONTINUOUS</property>
+		      <property name="inverted">False</property>
+		      <property name="adjustment">0 0 255 0 0 0</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">0</property>
+		      <property name="bottom_attach">1</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options">fill</property>
+		    </packing>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">True</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkTable" id="table15">
+		  <property name="visible">True</property>
+		  <property name="n_rows">2</property>
+		  <property name="n_columns">4</property>
+		  <property name="homogeneous">False</property>
+		  <property name="row_spacing">8</property>
+		  <property name="column_spacing">8</property>
+
+		  <child>
+		    <widget class="GtkCheckButton" id="colormap_auto_update_checkbutton">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="label" translatable="yes">Auto Update</property>
+		      <property name="use_underline">True</property>
+		      <property name="relief">GTK_RELIEF_NORMAL</property>
+		      <property name="focus_on_click">True</property>
+		      <property name="active">False</property>
+		      <property name="inconsistent">False</property>
+		      <property name="draw_indicator">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">0</property>
+		      <property name="right_attach">1</property>
+		      <property name="top_attach">0</property>
+		      <property name="bottom_attach">1</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options"></property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkButton" id="colormap_update_button">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="label" translatable="yes">Update</property>
+		      <property name="use_underline">True</property>
+		      <property name="relief">GTK_RELIEF_NORMAL</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">1</property>
+		      <property name="right_attach">2</property>
+		      <property name="top_attach">0</property>
+		      <property name="bottom_attach">1</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options"></property>
+		    </packing>
+		  </child>
+
+		  <child>
+		    <widget class="GtkButton" id="colormap_redraw_2dview_button">
+		      <property name="visible">True</property>
+		      <property name="can_focus">True</property>
+		      <property name="label" translatable="yes">Redraw 2D View</property>
+		      <property name="use_underline">True</property>
+		      <property name="relief">GTK_RELIEF_NORMAL</property>
+		      <property name="focus_on_click">True</property>
+		    </widget>
+		    <packing>
+		      <property name="left_attach">2</property>
+		      <property name="right_attach">3</property>
+		      <property name="top_attach">0</property>
+		      <property name="bottom_attach">1</property>
+		      <property name="x_options">fill</property>
+		      <property name="y_options"></property>
+		    </packing>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">True</property>
+		  <property name="fill">True</property>
+		</packing>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="label49">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Colormap</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkTable" id="table13">
+	      <property name="visible">True</property>
+	      <property name="n_rows">3</property>
+	      <property name="n_columns">3</property>
+	      <property name="homogeneous">False</property>
+	      <property name="row_spacing">0</property>
+	      <property name="column_spacing">0</property>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="label42">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Import</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkTable" id="table8">
+	      <property name="border_width">8</property>
+	      <property name="visible">True</property>
+	      <property name="n_rows">3</property>
+	      <property name="n_columns">3</property>
+	      <property name="homogeneous">False</property>
+	      <property name="row_spacing">8</property>
+	      <property name="column_spacing">8</property>
+
+	      <child>
+		<widget class="GtkLabel" id="label31">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">PGM</property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_LEFT</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">0</property>
+		  <property name="right_attach">1</property>
+		  <property name="top_attach">0</property>
+		  <property name="bottom_attach">1</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkLabel" id="label32">
+		  <property name="visible">True</property>
+		  <property name="label" translatable="yes">PPM</property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_LEFT</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="left_attach">0</property>
+		  <property name="right_attach">1</property>
+		  <property name="top_attach">1</property>
+		  <property name="bottom_attach">2</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkButton" id="pgm_save_as_button">
+		  <property name="visible">True</property>
+		  <property name="sensitive">False</property>
+		  <property name="can_focus">True</property>
+		  <property name="relief">GTK_RELIEF_NORMAL</property>
+		  <property name="focus_on_click">True</property>
+		  <signal name="clicked" handler="on_pgm_save_as_button_clicked" last_modification_time="Tue, 21 Aug 2007 13:31:07 GMT"/>
+
+		  <child>
+		    <widget class="GtkAlignment" id="alignment4">
+		      <property name="visible">True</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xscale">0</property>
+		      <property name="yscale">0</property>
+		      <property name="top_padding">0</property>
+		      <property name="bottom_padding">0</property>
+		      <property name="left_padding">0</property>
+		      <property name="right_padding">0</property>
+
+		      <child>
+			<widget class="GtkHBox" id="hbox3">
+			  <property name="visible">True</property>
+			  <property name="homogeneous">False</property>
+			  <property name="spacing">2</property>
+
+			  <child>
+			    <widget class="GtkImage" id="image1">
+			      <property name="visible">True</property>
+			      <property name="stock">gtk-save-as</property>
+			      <property name="icon_size">4</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="label33">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Save As...</property>
+			      <property name="use_underline">True</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="left_attach">1</property>
+		  <property name="right_attach">2</property>
+		  <property name="top_attach">0</property>
+		  <property name="bottom_attach">1</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkButton" id="ppm_save_as_button">
+		  <property name="visible">True</property>
+		  <property name="sensitive">False</property>
+		  <property name="can_focus">True</property>
+		  <property name="relief">GTK_RELIEF_NORMAL</property>
+		  <property name="focus_on_click">True</property>
+		  <signal name="clicked" handler="on_ppm_save_as_button_clicked" last_modification_time="Tue, 21 Aug 2007 13:30:57 GMT"/>
+
+		  <child>
+		    <widget class="GtkAlignment" id="alignment5">
+		      <property name="visible">True</property>
+		      <property name="xalign">0.5</property>
+		      <property name="yalign">0.5</property>
+		      <property name="xscale">0</property>
+		      <property name="yscale">0</property>
+		      <property name="top_padding">0</property>
+		      <property name="bottom_padding">0</property>
+		      <property name="left_padding">0</property>
+		      <property name="right_padding">0</property>
+
+		      <child>
+			<widget class="GtkHBox" id="hbox4">
+			  <property name="visible">True</property>
+			  <property name="homogeneous">False</property>
+			  <property name="spacing">2</property>
+
+			  <child>
+			    <widget class="GtkImage" id="image2">
+			      <property name="visible">True</property>
+			      <property name="stock">gtk-save-as</property>
+			      <property name="icon_size">4</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+
+			  <child>
+			    <widget class="GtkLabel" id="label34">
+			      <property name="visible">True</property>
+			      <property name="label" translatable="yes">Save As...</property>
+			      <property name="use_underline">True</property>
+			      <property name="use_markup">False</property>
+			      <property name="justify">GTK_JUSTIFY_LEFT</property>
+			      <property name="wrap">False</property>
+			      <property name="selectable">False</property>
+			      <property name="xalign">0.5</property>
+			      <property name="yalign">0.5</property>
+			      <property name="xpad">0</property>
+			      <property name="ypad">0</property>
+			      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+			      <property name="width_chars">-1</property>
+			      <property name="single_line_mode">False</property>
+			      <property name="angle">0</property>
+			    </widget>
+			    <packing>
+			      <property name="padding">0</property>
+			      <property name="expand">False</property>
+			      <property name="fill">False</property>
+			    </packing>
+			  </child>
+			</widget>
+		      </child>
+		    </widget>
+		  </child>
+		</widget>
+		<packing>
+		  <property name="left_attach">1</property>
+		  <property name="right_attach">2</property>
+		  <property name="top_attach">1</property>
+		  <property name="bottom_attach">2</property>
+		  <property name="x_options">fill</property>
+		  <property name="y_options"></property>
+		</packing>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="save_label">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">Export</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkVBox" id="vbox4">
+	      <property name="visible">True</property>
+	      <property name="homogeneous">False</property>
+	      <property name="spacing">0</property>
+
+	      <child>
+		<widget class="GtkImage" id="image3">
+		  <property name="visible">True</property>
+		  <property name="pixbuf">hmgen.xpm</property>
+		  <property name="xalign">0.5</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		</widget>
+		<packing>
+		  <property name="padding">64</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+
+	      <child>
+		<widget class="GtkLabel" id="about_message">
+		  <property name="visible">True</property>
+		  <property name="label">
+hmgen.gui - version 0.9.0 - Copyright (C) 2007
+by Ivo van Poorten
+
+This program is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with this program; if not, write to the Free Software
+Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
+</property>
+		  <property name="use_underline">False</property>
+		  <property name="use_markup">False</property>
+		  <property name="justify">GTK_JUSTIFY_CENTER</property>
+		  <property name="wrap">False</property>
+		  <property name="selectable">False</property>
+		  <property name="xalign">0.5</property>
+		  <property name="yalign">0.5</property>
+		  <property name="xpad">0</property>
+		  <property name="ypad">0</property>
+		  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+		  <property name="width_chars">-1</property>
+		  <property name="single_line_mode">False</property>
+		  <property name="angle">0</property>
+		</widget>
+		<packing>
+		  <property name="padding">0</property>
+		  <property name="expand">False</property>
+		  <property name="fill">False</property>
+		</packing>
+	      </child>
+	    </widget>
+	    <packing>
+	      <property name="tab_expand">False</property>
+	      <property name="tab_fill">True</property>
+	    </packing>
+	  </child>
+
+	  <child>
+	    <widget class="GtkLabel" id="about_label">
+	      <property name="visible">True</property>
+	      <property name="label" translatable="yes">About...</property>
+	      <property name="use_underline">False</property>
+	      <property name="use_markup">False</property>
+	      <property name="justify">GTK_JUSTIFY_LEFT</property>
+	      <property name="wrap">False</property>
+	      <property name="selectable">False</property>
+	      <property name="xalign">0.5</property>
+	      <property name="yalign">0.5</property>
+	      <property name="xpad">0</property>
+	      <property name="ypad">0</property>
+	      <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	      <property name="width_chars">-1</property>
+	      <property name="single_line_mode">False</property>
+	      <property name="angle">0</property>
+	    </widget>
+	    <packing>
+	      <property name="type">tab</property>
+	    </packing>
+	  </child>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">True</property>
+	  <property name="fill">True</property>
+	</packing>
+      </child>
+
+      <child>
+	<widget class="GtkProgressBar" id="main_progressbar">
+	  <property name="visible">True</property>
+	  <property name="orientation">GTK_PROGRESS_LEFT_TO_RIGHT</property>
+	  <property name="fraction">0</property>
+	  <property name="pulse_step">0.10000000149</property>
+	  <property name="text" translatable="yes">Idle...</property>
+	  <property name="ellipsize">PANGO_ELLIPSIZE_NONE</property>
+	</widget>
+	<packing>
+	  <property name="padding">0</property>
+	  <property name="expand">False</property>
+	  <property name="fill">False</property>
+	</packing>
+      </child>
+    </widget>
+  </child>
+</widget>
+
+</glade-interface>



From ivop at mail.berlios.de  Thu Aug 30 18:03:38 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 18:03:38 +0200
Subject: [Hmgen-svnlog] r15 - trunk
Message-ID: <200708301603.l7UG3c9f001876@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 18:03:37 +0200 (Thu, 30 Aug 2007)
New Revision: 15

Modified:
   trunk/gui_callbacks.c
Log:
refactor thread code and reuse it for new thread


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-29 21:58:16 UTC (rev 14)
+++ trunk/gui_callbacks.c	2007-08-30 16:03:37 UTC (rev 15)
@@ -41,16 +41,21 @@
     }
 }
 
-static void render_map(GtkWidget *widget) {
-    unsigned int x, y, stride;
-    unsigned char *p, *m;
-
+static void unref_map_pixbuf(void) {
     if (map_pixbuf) {
         gdk_threads_enter();
             g_object_unref(map_pixbuf);
         gdk_threads_leave();
+        map_pixbuf = NULL;
     }
+}
 
+static void render_map(GtkWidget *widget) {
+    unsigned int x, y, stride;
+    unsigned char *p, *m;
+
+    unref_map_pixbuf();
+
     gdk_threads_enter();
         map_pixbuf = gdk_pixbuf_new(GDK_COLORSPACE_RGB, FALSE, 8, map_width, map_height);
         stride = gdk_pixbuf_get_rowstride(map_pixbuf);
@@ -178,6 +183,27 @@
     return settings;
 }
 
+static void set_main_progressbar(void *args) {
+    GtkWidget *widget;
+
+    if (!main_progressbar) {
+        gdk_threads_enter();
+            widget = lookup_widget(GTK_WIDGET(args), "main_progressbar");
+            main_progressbar = GTK_PROGRESS_BAR(widget);
+        gdk_threads_leave();
+    }
+}
+ 
+static void activate_main_notebook(void *args) {
+    GtkWidget *widget;
+
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "main_notebook");
+        gtk_widget_set_sensitive (widget, TRUE);
+        gtk_notebook_set_current_page(GTK_NOTEBOOK(widget), 0);
+    gdk_threads_leave();
+}
+
 static void *generate_thread(void *args) {
     GtkWidget *widget;
     gint active;
@@ -187,26 +213,17 @@
     double blursigma;
     char *settings;
  
-    if (!main_progressbar) {
-        gdk_threads_enter();
-            widget = lookup_widget(GTK_WIDGET(args), "main_progressbar");
-            main_progressbar = GTK_PROGRESS_BAR(widget);
-        gdk_threads_leave();
-    }
- 
+    set_main_progressbar(args);
+
     hmg_progress_meter = gui_progress_meter;
+
     gdk_threads_enter();
         widget = lookup_widget(GTK_WIDGET(args), "size_combobox");
         active = gtk_combo_box_get_active(GTK_COMBO_BOX(widget));
     gdk_threads_leave();
     map_width = map_height = dims[active];
 
-    if (map_pixbuf) {
-        gdk_threads_enter();
-            g_object_unref(map_pixbuf);
-            map_pixbuf = NULL;
-        gdk_threads_leave();
-    }
+    unref_map_pixbuf();
 
     map     = realloc(map,     map_width * map_height);
     tempmap = realloc(tempmap, map_width * map_height);
@@ -267,20 +284,18 @@
     render_map(args);
 
 stopit:
-    gdk_threads_enter();
-        widget = lookup_widget(GTK_WIDGET(args), "main_notebook");
-        gtk_widget_set_sensitive (widget, TRUE);
-        gtk_notebook_set_current_page(GTK_NOTEBOOK(widget), 0);
-    gdk_threads_leave();
-
+    activate_main_notebook(args);
     return NULL;
 }
 
-void on_generate_button_clicked(GtkButton *button, gpointer user_data) {
-    GtkWidget *widget = lookup_widget(GTK_WIDGET(button), "main_notebook");
+static void deactivate_main_notebook(void *args) {
+    GtkWidget *widget = lookup_widget(GTK_WIDGET(args), "main_notebook");
 
     gtk_widget_set_sensitive (widget, FALSE);
+}
 
+void on_generate_button_clicked(GtkButton *button, gpointer user_data) {
+    deactivate_main_notebook(button);
     g_thread_create(generate_thread, button, FALSE, NULL);
 }
 
@@ -323,7 +338,45 @@
     gtk_main_quit();
 }
 
+static void *new_create_thread(void *args) {
+    GtkWidget *widget;
+    unsigned int level;
+
+    set_main_progressbar(args);
+
+    hmg_progress_meter = gui_progress_meter;
+
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "new_width_spinbutton");
+        map_width = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "new_height_spinbutton");
+        map_height = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        widget = lookup_widget(GTK_WIDGET(args), "new_level_spinbutton");
+        level = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+    gdk_threads_leave();
+
+    unref_map_pixbuf();
+
+    map     = realloc(map,     map_width * map_height);
+    tempmap = realloc(tempmap, map_width * map_height);
+
+    if (!map || !tempmap) {
+        gui_progress_meter("Out of memory!", 42);
+        goto stopit;
+    }
+
+    memset(map, level, map_width * map_height);
+
+    render_map(args);
+
+stopit:
+    activate_main_notebook(args);
+    return NULL;
+}
+
 void on_new_create_button_clicked(GtkButton *button, gpointer user_data) {
+    deactivate_main_notebook(button);
+    g_thread_create(new_create_thread, button, FALSE, NULL);
 }
 
 void on_norm2_button_clicked(GtkButton *button, gpointer user_data) {



From ivop at mail.berlios.de  Thu Aug 30 18:06:21 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 18:06:21 +0200
Subject: [Hmgen-svnlog] r16 - trunk
Message-ID: <200708301606.l7UG6LqN002360@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 18:06:21 +0200 (Thu, 30 Aug 2007)
New Revision: 16

Modified:
   trunk/gui_callbacks.c
Log:
no need for goto here


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 16:03:37 UTC (rev 15)
+++ trunk/gui_callbacks.c	2007-08-30 16:06:21 UTC (rev 16)
@@ -362,14 +362,11 @@
 
     if (!map || !tempmap) {
         gui_progress_meter("Out of memory!", 42);
-        goto stopit;
+    } else {
+        memset(map, level, map_width * map_height);
+        render_map(args);
     }
 
-    memset(map, level, map_width * map_height);
-
-    render_map(args);
-
-stopit:
     activate_main_notebook(args);
     return NULL;
 }



From ivop at mail.berlios.de  Thu Aug 30 18:47:52 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 18:47:52 +0200
Subject: [Hmgen-svnlog] r17 - trunk
Message-ID: <200708301647.l7UGlqIg003257@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 18:47:51 +0200 (Thu, 30 Aug 2007)
New Revision: 17

Modified:
   trunk/gui_callbacks.c
Log:
invert from 2d view


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 16:06:21 UTC (rev 16)
+++ trunk/gui_callbacks.c	2007-08-30 16:47:51 UTC (rev 17)
@@ -12,7 +12,7 @@
 
 static unsigned char *map = NULL, *tempmap = NULL;
 static GdkPixbuf *map_pixbuf = NULL;
-static unsigned int map_width = 4097, map_height = 4097;
+static unsigned int map_width = 0, map_height = 0;
 static GtkProgressBar *main_progressbar = NULL;
 static unsigned int algo_combo_set = 0, size_combo_set = 0;
 
@@ -54,6 +54,9 @@
     unsigned int x, y, stride;
     unsigned char *p, *m;
 
+    if (!map_width || !map_height)
+        return;
+
     unref_map_pixbuf();
 
     gdk_threads_enter();
@@ -371,6 +374,17 @@
     return NULL;
 }
 
+static void *new_invert_thread(void *args) {
+    set_main_progressbar(args);
+    hmg_progress_meter = gui_progress_meter;
+
+    hmg_invert(map, map_width, map_height);
+    render_map(args);
+
+    activate_main_notebook(args);
+    return NULL;
+}
+
 void on_new_create_button_clicked(GtkButton *button, gpointer user_data) {
     deactivate_main_notebook(button);
     g_thread_create(new_create_thread, button, FALSE, NULL);
@@ -383,6 +397,8 @@
 }
 
 void on_invert2_button_clicked(GtkButton *button, gpointer user_data) {
+    deactivate_main_notebook(button);
+    g_thread_create(new_invert_thread, button, FALSE, NULL);
 }
 
 gboolean on_colormap_display_expose_event(GtkWidget *widget,



From ivop at mail.berlios.de  Thu Aug 30 19:21:15 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 19:21:15 +0200
Subject: [Hmgen-svnlog] r18 - trunk
Message-ID: <200708301721.l7UHLFet005937@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 19:21:14 +0200 (Thu, 30 Aug 2007)
New Revision: 18

Modified:
   trunk/gui_callbacks.c
Log:
refactor spin_button value look-up


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 16:47:51 UTC (rev 17)
+++ trunk/gui_callbacks.c	2007-08-30 17:21:14 UTC (rev 18)
@@ -109,21 +109,27 @@
     generate_button_sensitivity(combobox);
 }
 
-static void retrieve_settings_ff(GtkWidget *widget, char *buf, int len) {
+/* not thread safe; wrap it yourself */
+static int get_spin_button_int(void *widget, const char *name) {
     GtkWidget *w;
+    w = lookup_widget(GTK_WIDGET(widget), name);
+    return gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+}
+static float get_spin_button_float(void *widget, const char *name) {
+    GtkWidget *w;
+    w = lookup_widget(GTK_WIDGET(widget), name);
+    return gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
+}
+
+static void retrieve_settings_ff(GtkWidget *widget, char *buf, int len) {
     unsigned int seed, init, nplates, up, down;
 
     gdk_threads_enter();
-        w = lookup_widget(widget, "ff_seed_spinbutton");
-        seed = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "ff_init_spinbutton");
-        init = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "ff_nplates_spinbutton");
-        nplates = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "ff_upfactor_spinbutton");
-        up = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "ff_downfactor_spinbutton");
-        down = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
+        seed    = get_spin_button_int(widget, "ff_seed_spinbutton");
+        init    = get_spin_button_int(widget, "ff_init_spinbutton");
+        nplates = get_spin_button_int(widget, "ff_nplates_spinbutton");
+        up      = get_spin_button_int(widget, "ff_upfactor_spinbutton");
+        down    = get_spin_button_int(widget, "ff_downfactor_spinbutton");
     gdk_threads_leave();
 
     snprintf(buf, len, "seed=%u:init=%u:n=%u:up=%u:down=%u", seed, init,
@@ -131,25 +137,17 @@
 }
 
 static void retrieve_settings_mpd(GtkWidget *widget, char *buf, int len) {
-    GtkWidget *w;
     unsigned int seed, tl, tr, bl, br, d;
     float r;
 
     gdk_threads_enter();
-        w = lookup_widget(widget, "mpd_seed_spinbutton");
-        seed = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "mpd_tl_spinbutton");
-        tl = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "mpd_tr_spinbutton");
-        tr = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "mpd_bl_spinbutton");
-        bl = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "mpd_br_spinbutton");
-        br = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "mpd_displacement_spinbutton");
-        d = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "mpd_roughness_spinbutton");
-        r = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
+        seed = get_spin_button_int  (widget, "mpd_seed_spinbutton");
+        tl   = get_spin_button_int  (widget, "mpd_tl_spinbutton");
+        tr   = get_spin_button_int  (widget, "mpd_tr_spinbutton");
+        bl   = get_spin_button_int  (widget, "mpd_bl_spinbutton");
+        br   = get_spin_button_int  (widget, "mpd_br_spinbutton");
+        d    = get_spin_button_int  (widget, "mpd_displacement_spinbutton");
+        r    = get_spin_button_float(widget, "mpd_roughness_spinbutton");
     gdk_threads_leave();
 
     snprintf(buf, len, "seed=%u:tl=%u:tr=%u:bl=%u:br=%u:d=%u:r=%0.2f", seed,
@@ -157,17 +155,13 @@
 }
 
 static void retrieve_settings_forge(GtkWidget *widget, char *buf, int len) {
-    GtkWidget *w;
     unsigned int seed;
     float fracdim, powscale;
 
     gdk_threads_enter();
-        w = lookup_widget(widget, "forge_seed_spinbutton");
-        seed = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "forge_fracdim_spinbutton");
-        fracdim = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
-        w = lookup_widget(widget, "forge_powscale_spinbutton");
-        powscale = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(w));
+        seed     = get_spin_button_int  (widget, "forge_seed_spinbutton");
+        fracdim  = get_spin_button_float(widget, "forge_fracdim_spinbutton");
+        powscale = get_spin_button_float(widget, "forge_powscale_spinbutton");
     gdk_threads_leave();
 
     snprintf(buf, len, "seed=%u:fracdim=%0.2f:powscale=%0.2f", seed, fracdim,
@@ -252,20 +246,15 @@
         normfirst = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
         widget = lookup_widget(GTK_WIDGET(args), "norm_last_checkbutton");
         normlast = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "norm_min_spinbutton");
-        normmin = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "norm_max_spinbutton");
-        normmax = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        normmin = get_spin_button_int(args, "norm_min_spinbutton");
+        normmax = get_spin_button_int(args, "norm_max_spinbutton");
         widget = lookup_widget(GTK_WIDGET(args), "invert_checkbutton");
         inv = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
         widget = lookup_widget(GTK_WIDGET(args), "blur_checkbutton");
         blur = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "blur_xradius_spinbutton");
-        blurx = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "blur_yradius_spinbutton");
-        blury = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "blur_sigma_spinbutton");
-        blursigma = gtk_spin_button_get_value_as_float(GTK_SPIN_BUTTON(widget));
+        blurx     = get_spin_button_int  (args, "blur_xradius_spinbutton");
+        blury     = get_spin_button_int  (args, "blur_yradius_spinbutton");
+        blursigma = get_spin_button_float(args, "blur_sigma_spinbutton");
     gdk_threads_leave();
 
     if (normfirst)
@@ -342,7 +331,6 @@
 }
 
 static void *new_create_thread(void *args) {
-    GtkWidget *widget;
     unsigned int level;
 
     set_main_progressbar(args);
@@ -350,12 +338,9 @@
     hmg_progress_meter = gui_progress_meter;
 
     gdk_threads_enter();
-        widget = lookup_widget(GTK_WIDGET(args), "new_width_spinbutton");
-        map_width = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "new_height_spinbutton");
-        map_height = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
-        widget = lookup_widget(GTK_WIDGET(args), "new_level_spinbutton");
-        level = gtk_spin_button_get_value_as_int(GTK_SPIN_BUTTON(widget));
+        map_width  = get_spin_button_int(args, "new_width_spinbutton");
+        map_height = get_spin_button_int(args, "new_height_spinbutton");
+        level      = get_spin_button_int(args, "new_level_spinbutton");
     gdk_threads_leave();
 
     unref_map_pixbuf();



From ivop at mail.berlios.de  Thu Aug 30 19:23:23 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 19:23:23 +0200
Subject: [Hmgen-svnlog] r19 - trunk
Message-ID: <200708301723.l7UHNNhO006137@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 19:23:23 +0200 (Thu, 30 Aug 2007)
New Revision: 19

Modified:
   trunk/gui_callbacks.c
Log:
cosmetics, line length
attribute unused for render_map widget argument


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 17:21:14 UTC (rev 18)
+++ trunk/gui_callbacks.c	2007-08-30 17:23:23 UTC (rev 19)
@@ -50,7 +50,7 @@
     }
 }
 
-static void render_map(GtkWidget *widget) {
+static void render_map(GtkWidget *widget HMG_ATTR_UNUSED) {
     unsigned int x, y, stride;
     unsigned char *p, *m;
 
@@ -60,7 +60,8 @@
     unref_map_pixbuf();
 
     gdk_threads_enter();
-        map_pixbuf = gdk_pixbuf_new(GDK_COLORSPACE_RGB, FALSE, 8, map_width, map_height);
+        map_pixbuf = gdk_pixbuf_new(GDK_COLORSPACE_RGB, FALSE, 8, map_width,
+                                                                map_height);
         stride = gdk_pixbuf_get_rowstride(map_pixbuf);
         p = gdk_pixbuf_get_pixels(map_pixbuf);
     gdk_threads_leave();



From ivop at mail.berlios.de  Thu Aug 30 19:28:56 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 19:28:56 +0200
Subject: [Hmgen-svnlog] r20 - trunk
Message-ID: <200708301728.l7UHSuGj006918@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 19:28:56 +0200 (Thu, 30 Aug 2007)
New Revision: 20

Modified:
   trunk/gui_callbacks.c
Log:
some unused attributes


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 17:23:23 UTC (rev 19)
+++ trunk/gui_callbacks.c	2007-08-30 17:28:56 UTC (rev 20)
@@ -92,7 +92,8 @@
     }
 }
 
-void on_algorithm_combobox_changed(GtkComboBox *combobox, gpointer user_data) {
+void on_algorithm_combobox_changed(GtkComboBox *combobox,
+                                   gpointer user_data HMG_ATTR_UNUSED) {
     gint active;
     GtkWidget *w;
 
@@ -105,7 +106,8 @@
     gtk_notebook_set_current_page(GTK_NOTEBOOK(w), active);
 }
 
-void on_size_combobox_changed(GtkComboBox *combobox, gpointer user_data) {
+void on_size_combobox_changed(GtkComboBox *combobox,
+                              gpointer user_data HMG_ATTR_UNUSED) {
     size_combo_set = 1;
     generate_button_sensitivity(combobox);
 }
@@ -287,21 +289,24 @@
     gtk_widget_set_sensitive (widget, FALSE);
 }
 
-void on_generate_button_clicked(GtkButton *button, gpointer user_data) {
+void on_generate_button_clicked(GtkButton *button,
+                                gpointer user_data HMG_ATTR_UNUSED) {
     deactivate_main_notebook(button);
     g_thread_create(generate_thread, button, FALSE, NULL);
 }
 
-void on_pgm_save_as_button_clicked(GtkButton *button, gpointer user_data) {
+void on_pgm_save_as_button_clicked(GtkButton *button,
+                                   gpointer user_data HMG_ATTR_UNUSED) {
 }
 
 
-void on_ppm_save_as_button_clicked(GtkButton *button, gpointer user_data) {
+void on_ppm_save_as_button_clicked(GtkButton *button,
+                                   gpointer user_data HMG_ATTR_UNUSED) {
 }
 
 gboolean on_view_drawingarea_expose_event(GtkWidget *widget,
-                                          GdkEventExpose *event,
-                                          gpointer user_data) {
+                                          GdkEventExpose *event HMG_ATTR_UNUSED,
+                                          gpointer user_data HMG_ATTR_UNUSED) {
     GdkDrawable *drawable = widget->window;
     GdkGC *gc = widget->style->fg_gc[GTK_WIDGET_STATE (widget)];
     gint width, height;
@@ -320,7 +325,8 @@
     return FALSE;
 }
 
-void gui_quit(GtkWidget *widget, gpointer user_data) {
+void gui_quit(GtkWidget *widget HMG_ATTR_UNUSED,
+              gpointer user_data HMG_ATTR_UNUSED) {
     if (map_pixbuf)
         g_object_unref(map_pixbuf);
     if (map)
@@ -371,25 +377,29 @@
     return NULL;
 }
 
-void on_new_create_button_clicked(GtkButton *button, gpointer user_data) {
+void on_new_create_button_clicked(GtkButton *button,
+                                  gpointer user_data HMG_ATTR_UNUSED) {
     deactivate_main_notebook(button);
     g_thread_create(new_create_thread, button, FALSE, NULL);
 }
 
-void on_norm2_button_clicked(GtkButton *button, gpointer user_data) {
+void on_norm2_button_clicked(GtkButton *button,
+                             gpointer user_data HMG_ATTR_UNUSED) {
 }
 
-void on_blur2_button_clicked(GtkButton *button, gpointer user_data) {
+void on_blur2_button_clicked(GtkButton *button,
+                             gpointer user_data HMG_ATTR_UNUSED) {
 }
 
-void on_invert2_button_clicked(GtkButton *button, gpointer user_data) {
+void on_invert2_button_clicked(GtkButton *button,
+                               gpointer user_data HMG_ATTR_UNUSED) {
     deactivate_main_notebook(button);
     g_thread_create(new_invert_thread, button, FALSE, NULL);
 }
 
 gboolean on_colormap_display_expose_event(GtkWidget *widget,
-                                          GdkEventExpose *event,
-                                          gpointer user_data) {
+                                          GdkEventExpose *event HMG_ATTR_UNUSED,
+                                          gpointer user_data HMG_ATTR_UNUSED) {
     GdkDrawable *drawable = widget->window;
     GdkGC *gc = gdk_gc_new(drawable);
     unsigned int width = 514, height = 32, x;



From ivop at mail.berlios.de  Thu Aug 30 19:48:47 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 19:48:47 +0200
Subject: [Hmgen-svnlog] r21 - trunk
Message-ID: <200708301748.l7UHmlft008769@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 19:48:47 +0200 (Thu, 30 Aug 2007)
New Revision: 21

Modified:
   trunk/cli_main.c
Log:
shut up compiler warning


Modified: trunk/cli_main.c
===================================================================
--- trunk/cli_main.c	2007-08-30 17:28:56 UTC (rev 20)
+++ trunk/cli_main.c	2007-08-30 17:48:47 UTC (rev 21)
@@ -174,7 +174,7 @@
 }
 
 int main(int argc, char **argv) {
-    FILE *fp1, *fp2;
+    FILE *fp1, *fp2 = NULL;
 
     if (!parse_command_line(argc, argv)) {
         fprintf(stderr, "error, parsing command line\n");



From ivop at mail.berlios.de  Thu Aug 30 19:50:07 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 19:50:07 +0200
Subject: [Hmgen-svnlog] r22 - trunk
Message-ID: <200708301750.l7UHo7iP008847@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 19:50:07 +0200 (Thu, 30 Aug 2007)
New Revision: 22

Modified:
   trunk/Makefile
Log:
change non-verbose pretty printing


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 17:48:47 UTC (rev 21)
+++ trunk/Makefile	2007-08-30 17:50:07 UTC (rev 22)
@@ -44,8 +44,10 @@
 LIBHMGEN_OBJS = $(addsuffix $(OBJSUF), $(LIBHMGEN_BASENAMES))
 LIBHMGEN_SRCS = $(addsuffix .c, $(LIBHMGEN_BASENAMES))
 
+build_pretty = printf "[%-7s] %s\n" "$(1)" "$(2)"
 SILENT ?= yes
-SILENT_EXEC = @test "$(SILENT)" = "yes" && echo "$(2)" || echo "$(1)"; $(1)
+SILENT_EXEC = @test "$(SILENT)" = "yes" && $(call build_pretty,$(2),$(3)) \
+                                        || echo "$(1)"; $(1)
 
 all: $(GUI) $(CLI)
 
@@ -55,40 +57,40 @@
 $(CLI)-verbose: SILENT=no
 $(CLI)-verbose: $(CLI)
 $(CLI): $(CLIg)
-	$(call SILENT_EXEC,cp $(CLIg) $@,CP $(CLIg) $@)
-	$(call SILENT_EXEC,$(STRIP) $@,STRIP $@)
+	$(call SILENT_EXEC,cp $(CLIg) $@,COPY,$(CLIg) $@)
+	$(call SILENT_EXEC,$(STRIP) $@,STRIP,$@)
 
 $(CLIg): CFLAGS = $(DEF_CFLAGS)
 $(CLIg): LDFLAGS = $(DEF_LDFLAGS)
 $(CLIg): $(LIBHMGEN) $(CLI_OBJS)
-	$(call SILENT_EXEC,$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS),LD $@)
+	$(call SILENT_EXEC,$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS),LINK,$@)
 
 $(GUI)-verbose: SILENT=no
 $(GUI)-verbose: $(GUI)
 $(GUI): $(GUIg)
-	$(call SILENT_EXEC,cp $(GUIg) $@,CP $(GUIg) $@)
-	$(call SILENT_EXEC,$(STRIP) $@,STRIP $@)
+	$(call SILENT_EXEC,cp $(GUIg) $@,COPY,$(GUIg) $@)
+	$(call SILENT_EXEC,$(STRIP) $@,STRIP,$@)
 
 $(GUIg): CFLAGS = $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $(DEF_CFLAGS)
 $(GUIg): LDFLAGS = $(GTK_LDFLAGS) $(GTHREAD_LDFLAGS) $(DEF_LDFLAGS)
 $(GUIg): $(LIBHMGEN) $(GUI_OBJS)
-	$(call SILENT_EXEC,$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS),LD $@)
+	$(call SILENT_EXEC,$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS),LINK,$@)
 
 $(LIBHMGEN)-verbose: SILENT=no
 $(LIBHMGEN)-verbose: $(LIBHMGEN)
 $(LIBHMGEN): CFLAGS = $(DEF_CFLAGS)
 $(LIBHMGEN): LDFLAGS = $(DEF_LDFLAGS)
 $(LIBHMGEN): $(LIBHMGEN_OBJS)
-	$(call SILENT_EXEC,$(AR) $(AR_FLAGS) $@ $^,AR $@)
-	$(call SILENT_EXEC,$(RANLIB) $@,RANLIB $@)
+	$(call SILENT_EXEC,$(AR) $(AR_FLAGS) $@ $^,ARCHIVE,$@)
+	$(call SILENT_EXEC,$(RANLIB) $@,RANLIB,$@)
 
 .c.o:
-	$(call SILENT_EXEC,$(CC) -c -o $@ $< $(CFLAGS),CC $<)
+	$(call SILENT_EXEC,$(CC) -c -o $@ $< $(CFLAGS),COMPILE,$<)
 
 depend-verbose dep-verbose: SILENT=no
 depend-verbose dep-verbose: dep
 depend dep: $(CLI_SRCS) $(LIBHMGEN_SRCS) $(GUI_SRCS)
-	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $^ 1>.depend,CCDEP >.depend)
+	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $^ 1>.depend,CCDEP,>.depend)
 
 size:
 	@wc -l *.[ch] Makefile *.mak | tail -1



From ivop at mail.berlios.de  Thu Aug 30 20:03:48 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 20:03:48 +0200
Subject: [Hmgen-svnlog] r23 - trunk
Message-ID: <200708301803.l7UI3mC2009757@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 20:03:47 +0200 (Thu, 30 Aug 2007)
New Revision: 23

Modified:
   trunk/Makefile
Log:
pretty printing in bold/bright; turn off with colors=no


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 17:50:07 UTC (rev 22)
+++ trunk/Makefile	2007-08-30 18:03:47 UTC (rev 23)
@@ -2,6 +2,16 @@
 # Makefile with built-in configure experiment
 # Needs GNU Make to run properly
 
+# ---------- COLORS ----------
+
+ifneq ($(colors),no)
+Bon = "[1m"
+Boff = "[0m"
+else
+Bon = "["
+Boff = "]"
+endif
+
 # ---------- CONFIGURE PREAMBLE ----------
 
 -include config.mak
@@ -44,7 +54,7 @@
 LIBHMGEN_OBJS = $(addsuffix $(OBJSUF), $(LIBHMGEN_BASENAMES))
 LIBHMGEN_SRCS = $(addsuffix .c, $(LIBHMGEN_BASENAMES))
 
-build_pretty = printf "[%-7s] %s\n" "$(1)" "$(2)"
+build_pretty = printf "$(Bon)%s$(Boff) %s\n" "$(1)" "$(2)"
 SILENT ?= yes
 SILENT_EXEC = @test "$(SILENT)" = "yes" && $(call build_pretty,$(2),$(3)) \
                                         || echo "$(1)"; $(1)
@@ -57,40 +67,40 @@
 $(CLI)-verbose: SILENT=no
 $(CLI)-verbose: $(CLI)
 $(CLI): $(CLIg)
-	$(call SILENT_EXEC,cp $(CLIg) $@,COPY,$(CLIg) $@)
-	$(call SILENT_EXEC,$(STRIP) $@,STRIP,$@)
+	$(call SILENT_EXEC,cp $(CLIg) $@,copy,$(CLIg) $@)
+	$(call SILENT_EXEC,$(STRIP) $@,strip,$@)
 
 $(CLIg): CFLAGS = $(DEF_CFLAGS)
 $(CLIg): LDFLAGS = $(DEF_LDFLAGS)
 $(CLIg): $(LIBHMGEN) $(CLI_OBJS)
-	$(call SILENT_EXEC,$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS),LINK,$@)
+	$(call SILENT_EXEC,$(CC) -o $@ $(CLI_OBJS) $(LIBHMGEN) $(LDFLAGS),link,$@)
 
 $(GUI)-verbose: SILENT=no
 $(GUI)-verbose: $(GUI)
 $(GUI): $(GUIg)
-	$(call SILENT_EXEC,cp $(GUIg) $@,COPY,$(GUIg) $@)
-	$(call SILENT_EXEC,$(STRIP) $@,STRIP,$@)
+	$(call SILENT_EXEC,cp $(GUIg) $@,copy,$(GUIg) $@)
+	$(call SILENT_EXEC,$(STRIP) $@,strip,$@)
 
 $(GUIg): CFLAGS = $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $(DEF_CFLAGS)
 $(GUIg): LDFLAGS = $(GTK_LDFLAGS) $(GTHREAD_LDFLAGS) $(DEF_LDFLAGS)
 $(GUIg): $(LIBHMGEN) $(GUI_OBJS)
-	$(call SILENT_EXEC,$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS),LINK,$@)
+	$(call SILENT_EXEC,$(CC) -o $@ $(GUI_OBJS) $(LIBHMGEN) $(LDFLAGS),link,$@)
 
 $(LIBHMGEN)-verbose: SILENT=no
 $(LIBHMGEN)-verbose: $(LIBHMGEN)
 $(LIBHMGEN): CFLAGS = $(DEF_CFLAGS)
 $(LIBHMGEN): LDFLAGS = $(DEF_LDFLAGS)
 $(LIBHMGEN): $(LIBHMGEN_OBJS)
-	$(call SILENT_EXEC,$(AR) $(AR_FLAGS) $@ $^,ARCHIVE,$@)
-	$(call SILENT_EXEC,$(RANLIB) $@,RANLIB,$@)
+	$(call SILENT_EXEC,$(AR) $(AR_FLAGS) $@ $^,archive,$@)
+	$(call SILENT_EXEC,$(RANLIB) $@,ranlib,$@)
 
 .c.o:
-	$(call SILENT_EXEC,$(CC) -c -o $@ $< $(CFLAGS),COMPILE,$<)
+	$(call SILENT_EXEC,$(CC) -c -o $@ $< $(CFLAGS),compile,$<)
 
 depend-verbose dep-verbose: SILENT=no
 depend-verbose dep-verbose: dep
 depend dep: $(CLI_SRCS) $(LIBHMGEN_SRCS) $(GUI_SRCS)
-	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $^ 1>.depend,CCDEP,>.depend)
+	$(call SILENT_EXEC,$(CC_DEP) $(DEP_FLAGS) $(DEF_CFLAGS) $(GTK_CFLAGS) $(GTHREAD_CFLAGS) $^ 1>.depend,ccdep,>.depend)
 
 size:
 	@wc -l *.[ch] Makefile *.mak | tail -1



From ivop at mail.berlios.de  Thu Aug 30 21:14:34 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 21:14:34 +0200
Subject: [Hmgen-svnlog] r24 - trunk
Message-ID: <200708301914.l7UJEYG0016219@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 21:14:34 +0200 (Thu, 30 Aug 2007)
New Revision: 24

Modified:
   trunk/Makefile
Log:
more silly colors


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 18:03:47 UTC (rev 23)
+++ trunk/Makefile	2007-08-30 19:14:34 UTC (rev 24)
@@ -7,9 +7,12 @@
 ifneq ($(colors),no)
 Bon = "[1m"
 Boff = "[0m"
+Red = "[31m"
+Green = "[32m"
 else
 Bon = "["
 Boff = "]"
+Red =
 endif
 
 # ---------- CONFIGURE PREAMBLE ----------
@@ -121,7 +124,14 @@
 # ---------- CONFIGURE ----------
 
 define config-print-result
-	printf "%-16s : %s\n" "$(1)" "$(2)"
+	if test "$(2)" = "no" ; then \
+		col="$(Bon)$(Red)" ; \
+	elif test "$(2)" = "yes" ; then \
+		col="$(Bon)$(Green)" ; \
+	else \
+		col="$(Bon)" ; \
+	fi ; \
+	printf "%-16s : $$col%s$(Boff)\n" "$(1)" "$(2)"
 endef
 
 clean-config.mak:



From ivop at mail.berlios.de  Thu Aug 30 21:15:15 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 21:15:15 +0200
Subject: [Hmgen-svnlog] r25 - trunk
Message-ID: <200708301915.l7UJFFA2016327@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 21:15:15 +0200 (Thu, 30 Aug 2007)
New Revision: 25

Modified:
   trunk/Makefile
Log:
forgot empty Green


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 19:14:34 UTC (rev 24)
+++ trunk/Makefile	2007-08-30 19:15:15 UTC (rev 25)
@@ -13,6 +13,7 @@
 Bon = "["
 Boff = "]"
 Red =
+Green =
 endif
 
 # ---------- CONFIGURE PREAMBLE ----------



From ivop at mail.berlios.de  Thu Aug 30 21:16:30 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 21:16:30 +0200
Subject: [Hmgen-svnlog] r26 - trunk
Message-ID: <200708301916.l7UJGUPC016511@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 21:16:30 +0200 (Thu, 30 Aug 2007)
New Revision: 26

Modified:
   trunk/Makefile
Log:
no brackets in no-color mode


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 19:15:15 UTC (rev 25)
+++ trunk/Makefile	2007-08-30 19:16:30 UTC (rev 26)
@@ -10,8 +10,8 @@
 Red = "[31m"
 Green = "[32m"
 else
-Bon = "["
-Boff = "]"
+Bon =
+Boff =
 Red =
 Green =
 endif



From ivop at mail.berlios.de  Thu Aug 30 21:34:42 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 21:34:42 +0200
Subject: [Hmgen-svnlog] r27 - trunk
Message-ID: <200708301934.l7UJYg7j018195@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 21:34:42 +0200 (Thu, 30 Aug 2007)
New Revision: 27

Modified:
   trunk/gui_callbacks.c
Log:
sidebar blur and normalize
rename invert2


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 19:16:30 UTC (rev 26)
+++ trunk/gui_callbacks.c	2007-08-30 19:34:42 UTC (rev 27)
@@ -272,9 +272,12 @@
     if (inv)
         hmg_invert(map, map_width, map_height);
 
+/* hmmm, some "sidebar" commands may need tempmap, like gaussian blur
+ * FIXME increases memory requirements
     if (tempmap)
         free(tempmap);
     tempmap = NULL;
+*/
 
     render_map(args);
 
@@ -366,7 +369,7 @@
     return NULL;
 }
 
-static void *new_invert_thread(void *args) {
+static void *invert2_thread(void *args) {
     set_main_progressbar(args);
     hmg_progress_meter = gui_progress_meter;
 
@@ -377,6 +380,45 @@
     return NULL;
 }
 
+static void *norm2_thread(void *args) {
+    unsigned int normmin, normmax;
+
+    set_main_progressbar(args);
+    hmg_progress_meter = gui_progress_meter;
+
+    gdk_threads_enter();
+        normmin = get_spin_button_int  (args, "norm2_min_spinbutton");
+        normmax = get_spin_button_int  (args, "norm2_max_spinbutton");
+    gdk_threads_leave();
+
+    hmg_normalize(map, normmin, normmax, map_width, map_height);
+    render_map(args);
+
+    activate_main_notebook(args);
+    return NULL;
+}
+
+static void *blur2_thread(void *args) {
+    unsigned int blurx, blury;
+    double blursigma;
+
+    set_main_progressbar(args);
+    hmg_progress_meter = gui_progress_meter;
+
+    gdk_threads_enter();
+        blurx     = get_spin_button_int  (args, "blur2_xrad_spinbutton");
+        blury     = get_spin_button_int  (args, "blur2_yrad_spinbutton");
+        blursigma = get_spin_button_float(args, "blur2_sigma_spinbutton");
+    gdk_threads_leave();
+
+    hmg_gaussian_blur(map, tempmap, blurx, blury, blursigma, map_width,
+                                                                map_height);
+    render_map(args);
+
+    activate_main_notebook(args);
+    return NULL;
+}
+
 void on_new_create_button_clicked(GtkButton *button,
                                   gpointer user_data HMG_ATTR_UNUSED) {
     deactivate_main_notebook(button);
@@ -385,16 +427,20 @@
 
 void on_norm2_button_clicked(GtkButton *button,
                              gpointer user_data HMG_ATTR_UNUSED) {
+    deactivate_main_notebook(button);
+    g_thread_create(norm2_thread, button, FALSE, NULL);
 }
 
 void on_blur2_button_clicked(GtkButton *button,
                              gpointer user_data HMG_ATTR_UNUSED) {
+    deactivate_main_notebook(button);
+    g_thread_create(blur2_thread, button, FALSE, NULL);
 }
 
 void on_invert2_button_clicked(GtkButton *button,
                                gpointer user_data HMG_ATTR_UNUSED) {
     deactivate_main_notebook(button);
-    g_thread_create(new_invert_thread, button, FALSE, NULL);
+    g_thread_create(invert2_thread, button, FALSE, NULL);
 }
 
 gboolean on_colormap_display_expose_event(GtkWidget *widget,



From ivop at mail.berlios.de  Thu Aug 30 22:52:54 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 22:52:54 +0200
Subject: [Hmgen-svnlog] r28 - trunk
Message-ID: <200708302052.l7UKqsSj025374@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 22:52:54 +0200 (Thu, 30 Aug 2007)
New Revision: 28

Modified:
   trunk/Makefile
   trunk/cli_main.c
   trunk/gui_interface.c
   trunk/version.h
Log:
proper versioning x.y.r

for releases:
* increase y (or reset to 0 if you increase x)
* export the svn tree
* build, r will be 0
* tar up sources for source release

for development:
* normal svn co of trunk
* build, r will be svn revision



Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 19:34:42 UTC (rev 27)
+++ trunk/Makefile	2007-08-30 20:52:54 UTC (rev 28)
@@ -37,7 +37,7 @@
 .SUFFIXES:
 .SUFFIXES: $(OBJSUF) .c
 
-DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS)
+DEF_CFLAGS = $(STD_FLAGS) $(WARN_FLAGS) $(OPT_FLAGS) $(DEBUG_FLAGS) $(DEFINES)
 DEF_LDFLAGS = -lm $(DEBUG_FLAGS)
 
 CLI = hmgen$(EXESUF)
@@ -243,11 +243,29 @@
 		echo $$GTHREAD_LDFLAGS >> config.mak ; \
 	fi ;
 
+config-define-none:
+	@echo DEFINES= >> config.mak
+
+config-define-svnrev: config-define-none
+	@svn_rev=`LC_ALL=C svn info * 2>/dev/null | grep ^Revision: \
+		| cut -d ' ' -f 2 | xargs -n 1 -I '{}' printf "%05i\n" '{}' \
+		| sort -r | head -n 1 | sed 's/^0//' | sed 's/^0//' \
+		| sed 's/^0//'` ; \
+	test $$svn_rev || svn_rev=`grep revision .svn/entries 2>/dev/null \
+		| cut -d '"' -f 2` | xargs -n 1 -I '{}' printf "%05i\n" '{}' \
+		| sort -r | head -n 1 | sed 's/^0//' | sed 's/^0//' \
+		| sed 's/^0//' ; \
+	test $$svn_rev || svn_rev=`sed -n -e '/^dir$/{n;p;q;}' \
+		.svn/entries 2>/dev/null` ; \
+	test $$svn_rev || svn_rev=0 ; \
+	echo DEFINES=-DSVN_REVISION=$$svn_rev >> config.mak
+
 configure: clean-config.mak \
            config-cc-flags \
            config-gtk-flags \
            config-gthread-flags \
-           config-suncc-flags-fix
+           config-suncc-flags-fix \
+           config-define-svnrev
 	@echo AR?=ar >> config.mak
 	@echo RANLIB?=ranlib >> config.mak
 	@echo STRIP?=strip >> config.mak

Modified: trunk/cli_main.c
===================================================================
--- trunk/cli_main.c	2007-08-30 19:34:42 UTC (rev 27)
+++ trunk/cli_main.c	2007-08-30 20:52:54 UTC (rev 28)
@@ -30,7 +30,7 @@
 
 static void help_message(char **argv) {
     fprintf(stderr,
-"\nHeight Map Generator - Version %s - %s\n\n"
+"\nHeight Map Generator - %s - %s\n\n"
 "usage: %s [options]\n\n"
 "-s INT         size, 2^VAL+1 [default: 8]\n"
 "-o FILE        output filename [default: output.pgm]\n"
@@ -68,7 +68,7 @@
 "-bs FLOAT      blur sigma [default: %0.2f]\n"
 "-i             postprocess, invert heightmap [default: no]\n"
 "\n",
-        VERSION_STRING, COPYRIGHT_STRING, argv[0],
+        HMG_VERSION_STRING, HMG_COPYRIGHT_STRING, argv[0],
         DEF_NORMMIN, DEF_NORMMAX,
         DEF_BLURX, DEF_BLURY, DEF_BLURSIGMA);
     exit(0);

Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-30 19:34:42 UTC (rev 27)
+++ trunk/gui_interface.c	2007-08-30 20:52:54 UTC (rev 28)
@@ -8,6 +8,7 @@
 #include "gui_callbacks.h"
 #include "gui_interface.h"
 #include "gui_support.h"
+#include "version.h"
 
 #define GLADE_HOOKUP_OBJECT(component,widget,name) \
   g_object_set_data_full (G_OBJECT (component), name, \
@@ -879,7 +880,7 @@
   gtk_widget_show (image3);
   gtk_box_pack_start (GTK_BOX (vbox4), image3, FALSE, FALSE, 64);
 
-  about_message = gtk_label_new("\nVersion 0.9.0");
+  about_message = gtk_label_new(HMG_VERSION_STRING);
   gtk_widget_show (about_message);
   gtk_box_pack_start (GTK_BOX (vbox4), about_message, FALSE, FALSE, 0);
   gtk_label_set_justify (GTK_LABEL (about_message), GTK_JUSTIFY_CENTER);

Modified: trunk/version.h
===================================================================
--- trunk/version.h	2007-08-30 19:34:42 UTC (rev 27)
+++ trunk/version.h	2007-08-30 20:52:54 UTC (rev 28)
@@ -1,11 +1,18 @@
 #ifndef VERSION_H
 #define VERSION_H
 
-#define VERSION_MAJOR       0
-#define VERSION_MINOR       9
-#define VERSION_MICRO       0
-#define VERSION_INT         (VERSION_MAJOR<<8)+(VERSION_MINOR<<4)+VERSION_MICRO
-#define VERSION_STRING      "0.9.0"
-#define COPYRIGHT_STRING    "Copyright (C) 2007"
+#define HMG_STRINGIFY(s)    HMG_TOSTRING(s)
+#define HMG_TOSTRING(s)     #s
 
+#define HMG_VERSION_MAJOR       0
+#define HMG_VERSION_MINOR       8
+#define HMG_VERSION_MICRO       SVN_REVISION
+#define HMG_VERSION_INT         ((HMG_VERSION_MAJOR<<8) + \
+                                 (HMG_VERSION_MINOR<<4) + \
+                                  HMG_VERSION_MICRO)
+#define HMG_VERSION_STRING      "Version " HMG_STRINGIFY(HMG_VERSION_MAJOR) \
+                                "."        HMG_STRINGIFY(HMG_VERSION_MINOR) \
+                                "."        HMG_STRINGIFY(HMG_VERSION_MICRO)
+#define HMG_COPYRIGHT_STRING    "Copyright (C) 2007 Ivo van Poorten"
+
 #endif



From ivop at mail.berlios.de  Thu Aug 30 23:00:30 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Thu, 30 Aug 2007 23:00:30 +0200
Subject: [Hmgen-svnlog] r29 - trunk
Message-ID: <200708302100.l7UL0UKl027002@sheep.berlios.de>

Author: ivop
Date: 2007-08-30 23:00:30 +0200 (Thu, 30 Aug 2007)
New Revision: 29

Modified:
   trunk/gui_callbacks.c
Log:
as soon as there's a map, activate save buttons


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-30 20:52:54 UTC (rev 28)
+++ trunk/gui_callbacks.c	2007-08-30 21:00:30 UTC (rev 29)
@@ -194,6 +194,17 @@
     }
 }
  
+static void activate_save_buttons(void *args) {
+    GtkWidget *widget;
+
+    gdk_threads_enter();
+        widget = lookup_widget(GTK_WIDGET(args), "pgm_save_as_button");
+        gtk_widget_set_sensitive (widget, TRUE);
+        widget = lookup_widget(GTK_WIDGET(args), "ppm_save_as_button");
+        gtk_widget_set_sensitive (widget, TRUE);
+    gdk_threads_leave();
+}
+
 static void activate_main_notebook(void *args) {
     GtkWidget *widget;
 
@@ -281,6 +292,8 @@
 
     render_map(args);
 
+    activate_save_buttons(args);
+
 stopit:
     activate_main_notebook(args);
     return NULL;
@@ -365,6 +378,7 @@
         render_map(args);
     }
 
+    activate_save_buttons(args);
     activate_main_notebook(args);
     return NULL;
 }



From ivop at mail.berlios.de  Fri Aug 31 00:59:29 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 00:59:29 +0200
Subject: [Hmgen-svnlog] r30 - trunk
Message-ID: <200708302259.l7UMxTPr019813@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 00:59:28 +0200 (Fri, 31 Aug 2007)
New Revision: 30

Modified:
   trunk/gui_interface.c
Log:
colormap interface, not connected to anything yet


Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-30 21:00:30 UTC (rev 29)
+++ trunk/gui_interface.c	2007-08-30 22:59:28 UTC (rev 30)
@@ -52,7 +52,15 @@
   GtkWidget *norm2_button, *label45, *label46, *label47, *vbox5, *hbox7;
   GtkWidget *blur2_xrad_spinbutton, *blur2_yrad_spinbutton, *colormap_display;
   GtkWidget *blur2_sigma_spinbutton, *blur2_button, *label48, *invert2_button;
-  GtkWidget *label49, *table14;
+  GtkWidget *label49, *table14, *alignment6, *colormap_scale6;
+  GtkWidget *colormap_colorbutton1, *colormap_colorbutton2;
+  GtkWidget *colormap_colorbutton3, *colormap_colorbutton4;
+  GtkWidget *colormap_colorbutton5, *colormap_colorbutton6;
+  GtkWidget *colormap_colorbutton7, *colormap_colorbutton8;
+  GtkWidget *colormap_scale1, *colormap_scale2, *colormap_scale3;
+  GtkWidget *colormap_scale4, *colormap_scale5, *colormap_scale7;
+  GtkWidget *colormap_scale8, *table15, *colormap_auto_update_checkbutton;
+  GtkWidget *colormap_update_button, *colormap_redraw_2dview_button;
 
   GtkObject *norm_min_spinbutton_adj, *norm_max_spinbutton_adj;
   GtkObject *blur_sigma_spinbutton_adj, *blur_yradius_spinbutton_adj;
@@ -785,10 +793,145 @@
   gtk_box_pack_start (GTK_BOX (hbox7), colormap_display, FALSE, FALSE, 0);
   gtk_widget_set_size_request (colormap_display, 258, 32);
 
-  table14 = gtk_table_new (3, 3, FALSE);
+  table14 = gtk_table_new (9, 3, FALSE);
   gtk_widget_show (table14);
-  gtk_box_pack_start (GTK_BOX (vbox5), table14, TRUE, TRUE, 0);
+  gtk_box_pack_start (GTK_BOX (vbox5), table14, FALSE, TRUE, 0);
+  gtk_table_set_row_spacings (GTK_TABLE (table14), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table14), 8);
 
+  alignment6 = gtk_alignment_new (0.5, 0.5, 1, 1);
+  gtk_widget_show (alignment6);
+  gtk_table_attach (GTK_TABLE (table14), alignment6, 1, 2, 5, 6,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_scale6 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale6);
+  gtk_container_add (GTK_CONTAINER (alignment6), colormap_scale6);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale6), 0);
+
+  colormap_colorbutton1 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton1);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton1, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  
+  colormap_colorbutton2 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton2);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton2, 0, 1, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_colorbutton3 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton3);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton3, 0, 1, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_colorbutton4 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton4);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton4, 0, 1, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_colorbutton5 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton5);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton5, 0, 1, 4, 5,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_colorbutton6 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton6);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton6, 0, 1, 5, 6,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_colorbutton7 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton7);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton7, 0, 1, 6, 7,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_colorbutton8 = gtk_color_button_new ();
+  gtk_widget_show (colormap_colorbutton8);
+  gtk_table_attach (GTK_TABLE (table14), colormap_colorbutton8, 0, 1, 7, 8,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+
+  colormap_scale2 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale2);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale2, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale2), 0);
+
+  colormap_scale3 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale3);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale3, 1, 2, 2, 3,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale3), 0);
+
+  colormap_scale4 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale4);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale4, 1, 2, 3, 4,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale4), 0);
+
+  colormap_scale5 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale5);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale5, 1, 2, 4, 5,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale5), 0);
+
+  colormap_scale7  = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale7);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale7, 1, 2, 6, 7,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale7), 0);
+
+  colormap_scale8 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale8);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale8, 1, 2, 7, 8,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale8), 0);
+
+  colormap_scale1 = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 255, 0, 0, 0)));
+  gtk_widget_show (colormap_scale1);
+  gtk_table_attach (GTK_TABLE (table14), colormap_scale1, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  gtk_widget_set_size_request (colormap_scale1, 300, -1);
+  gtk_scale_set_digits (GTK_SCALE (colormap_scale1), 0);
+
+  table15 = gtk_table_new (2, 4, FALSE);
+  gtk_widget_show (table15);
+  gtk_box_pack_start (GTK_BOX (vbox5), table15, TRUE, TRUE, 0);
+  gtk_table_set_row_spacings (GTK_TABLE (table15), 8);
+  gtk_table_set_col_spacings (GTK_TABLE (table15), 8);
+
+  colormap_auto_update_checkbutton = gtk_check_button_new_with_mnemonic ("Auto Update");
+  gtk_widget_show (colormap_auto_update_checkbutton);
+  gtk_table_attach (GTK_TABLE (table15), colormap_auto_update_checkbutton, 0, 1, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  colormap_update_button = gtk_button_new_with_mnemonic ("Update");
+  gtk_widget_show (colormap_update_button);
+  gtk_table_attach (GTK_TABLE (table15), colormap_update_button, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
+  colormap_redraw_2dview_button = gtk_button_new_with_mnemonic ("Redraw 2D View");
+  gtk_widget_show (colormap_redraw_2dview_button);
+  gtk_table_attach (GTK_TABLE (table15), colormap_redraw_2dview_button, 2, 3, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (0), 0, 0);
+
   label49 = gtk_label_new ("Colormap");
   gtk_widget_show (label49);
   gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 2), label49);
@@ -994,6 +1137,26 @@
   GLADE_HOOKUP_OBJECT (hmgengui, invert2_button, "invert2_button");
   GLADE_HOOKUP_OBJECT (hmgengui, colormap_display, "colormap_display");
 
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton1, "colormap_colorbutton1");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton2, "colormap_colorbutton2");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton3, "colormap_colorbutton3");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton4, "colormap_colorbutton4");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton5, "colormap_colorbutton5");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton6, "colormap_colorbutton6");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton7, "colormap_colorbutton7");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_colorbutton8, "colormap_colorbutton8");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale1, "colormap_scale1");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale2, "colormap_scale2");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale3, "colormap_scale3");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale4, "colormap_scale4");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale5, "colormap_scale5");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale6, "colormap_scale6");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale7, "colormap_scale7");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_scale8, "colormap_scale8");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_auto_update_checkbutton, "colormap_auto_update_checkbutton");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_update_button, "colormap_update_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, colormap_redraw_2dview_button, "colormap_redraw_2dview_button");
+
   gtk_notebook_set_current_page(GTK_NOTEBOOK(main_notebook), 1);
 
   return hmgengui;



From ivop at mail.berlios.de  Fri Aug 31 01:07:28 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 01:07:28 +0200
Subject: [Hmgen-svnlog] r31 - trunk
Message-ID: <200708302307.l7UN7SbH025894@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 01:07:28 +0200 (Fri, 31 Aug 2007)
New Revision: 31

Modified:
   trunk/Makefile
Log:
fix make all


Modified: trunk/Makefile
===================================================================
--- trunk/Makefile	2007-08-30 22:59:28 UTC (rev 30)
+++ trunk/Makefile	2007-08-30 23:07:28 UTC (rev 31)
@@ -23,8 +23,8 @@
 MAKEFLAGS += --no-print-directory
 
 ifneq ($(CONFIGURE_DONE),yes)
-DEFGOAL=$(filter-out clean distclean configure, $(MAKECMDGOALS))
-$(DEFGOAL) all::
+DEFGOAL=$(filter-out all clean distclean configure, $(MAKECMDGOALS))
+$(DEFGOAL) all:
 	@make configure
 	@make $(MAKECMDGOALS)
 



From ivop at mail.berlios.de  Fri Aug 31 13:00:50 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 13:00:50 +0200
Subject: [Hmgen-svnlog] r32 - trunk
Message-ID: <200708311100.l7VB0obC002487@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 13:00:48 +0200 (Fri, 31 Aug 2007)
New Revision: 32

Modified:
   trunk/gui_interface.c
Log:
different export gui


Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-30 23:07:28 UTC (rev 31)
+++ trunk/gui_interface.c	2007-08-31 11:00:48 UTC (rev 32)
@@ -40,9 +40,8 @@
   GtkWidget *mpd_seed_spinbutton, *mpd_label, *table4, *label23, *label24;
   GtkWidget *label25, *forge_seed_spinbutton, *forge_fracdim_spinbutton;
   GtkWidget *forge_powscale_spinbutton, *forge_label, *label8, *generate_label;
-  GtkWidget *table8, *label31, *label32, *pgm_save_as_button, *alignment4;
-  GtkWidget *hbox3, *image1, *label33, *ppm_save_as_button, *alignment5;
-  GtkWidget *hbox4, *image2, *label34, *save_label, *vbox4, *image3;
+  GtkWidget *table8, *label31, *label32, *pgm_save_as_button;
+  GtkWidget *ppm_save_as_button, *save_label, *vbox4, *image3;
   GtkWidget *about_message, *about_label, *main_progressbar;
   GtkWidget *hbox5, *view_sidepanel_notebook, *table9, *label39, *label40;
   GtkWidget *new_width_spinbutton, *new_height_spinbutton, *new_create_button;
@@ -61,6 +60,7 @@
   GtkWidget *colormap_scale4, *colormap_scale5, *colormap_scale7;
   GtkWidget *colormap_scale8, *table15, *colormap_auto_update_checkbutton;
   GtkWidget *colormap_update_button, *colormap_redraw_2dview_button;
+  GtkWidget *filechooserbutton1, *filechooserbutton2;
 
   GtkObject *norm_min_spinbutton_adj, *norm_max_spinbutton_adj;
   GtkObject *blur_sigma_spinbutton_adj, *blur_yradius_spinbutton_adj;
@@ -944,7 +944,7 @@
   gtk_widget_show (label42);
   gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 3), label42);
 
-  table8 = gtk_table_new (3, 3, FALSE);
+  table8 = gtk_table_new (3, 4, FALSE);
   gtk_widget_show (table8);
   gtk_container_add (GTK_CONTAINER (main_notebook), table8);
   gtk_container_set_border_width (GTK_CONTAINER (table8), 8);
@@ -965,52 +965,34 @@
                     (GtkAttachOptions) (0), 0, 0);
   gtk_misc_set_alignment (GTK_MISC (label32), 0, 0.5);
 
-  pgm_save_as_button = gtk_button_new ();
+  pgm_save_as_button = gtk_button_new_from_stock ("gtk-save");
   gtk_widget_show (pgm_save_as_button);
-  gtk_table_attach (GTK_TABLE (table8), pgm_save_as_button, 1, 2, 0, 1,
+  gtk_table_attach (GTK_TABLE (table8), pgm_save_as_button, 2, 3, 0, 1,
                     (GtkAttachOptions) (GTK_FILL),
                     (GtkAttachOptions) (0), 0, 0);
   gtk_widget_set_sensitive (pgm_save_as_button, FALSE);
 
-  alignment4 = gtk_alignment_new (0.5, 0.5, 0, 0);
-  gtk_widget_show (alignment4);
-  gtk_container_add (GTK_CONTAINER (pgm_save_as_button), alignment4);
-
-  hbox3 = gtk_hbox_new (FALSE, 2);
-  gtk_widget_show (hbox3);
-  gtk_container_add (GTK_CONTAINER (alignment4), hbox3);
-
-  image1 = gtk_image_new_from_stock ("gtk-save-as", GTK_ICON_SIZE_BUTTON);
-  gtk_widget_show (image1);
-  gtk_box_pack_start (GTK_BOX (hbox3), image1, FALSE, FALSE, 0);
-
-  label33 = gtk_label_new_with_mnemonic ("Save As...");
-  gtk_widget_show (label33);
-  gtk_box_pack_start (GTK_BOX (hbox3), label33, FALSE, FALSE, 0);
-
-  ppm_save_as_button = gtk_button_new ();
+  ppm_save_as_button = gtk_button_new_from_stock ("gtk-save");
   gtk_widget_show (ppm_save_as_button);
-  gtk_table_attach (GTK_TABLE (table8), ppm_save_as_button, 1, 2, 1, 2,
+  gtk_table_attach (GTK_TABLE (table8), ppm_save_as_button, 2, 3, 1, 2,
                     (GtkAttachOptions) (GTK_FILL),
                     (GtkAttachOptions) (0), 0, 0);
   gtk_widget_set_sensitive (ppm_save_as_button, FALSE);
 
-  alignment5 = gtk_alignment_new (0.5, 0.5, 0, 0);
-  gtk_widget_show (alignment5);
-  gtk_container_add (GTK_CONTAINER (ppm_save_as_button), alignment5);
+  filechooserbutton1 = gtk_file_chooser_button_new ("Select A File", GTK_FILE_CHOOSER_ACTION_OPEN);
+  gtk_widget_show (filechooserbutton1);
+  gtk_table_attach (GTK_TABLE (table8), filechooserbutton1, 1, 2, 0, 1,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  g_object_set (filechooserbutton1, "show-hidden", TRUE, "width-chars", 32, NULL);
 
-  hbox4 = gtk_hbox_new (FALSE, 2);
-  gtk_widget_show (hbox4);
-  gtk_container_add (GTK_CONTAINER (alignment5), hbox4);
+  filechooserbutton2 = gtk_file_chooser_button_new ("Select A File", GTK_FILE_CHOOSER_ACTION_OPEN);
+  gtk_widget_show (filechooserbutton2);
+  gtk_table_attach (GTK_TABLE (table8), filechooserbutton2, 1, 2, 1, 2,
+                    (GtkAttachOptions) (GTK_FILL),
+                    (GtkAttachOptions) (GTK_FILL), 0, 0);
+  g_object_set (filechooserbutton2, "show-hidden", TRUE, "width-chars", 32, NULL);
 
-  image2 = gtk_image_new_from_stock ("gtk-save-as", GTK_ICON_SIZE_BUTTON);
-  gtk_widget_show (image2);
-  gtk_box_pack_start (GTK_BOX (hbox4), image2, FALSE, FALSE, 0);
-
-  label34 = gtk_label_new_with_mnemonic ("Save As...");
-  gtk_widget_show (label34);
-  gtk_box_pack_start (GTK_BOX (hbox4), label34, FALSE, FALSE, 0);
-
   save_label = gtk_label_new ("Export");
   gtk_widget_show (save_label);
   gtk_notebook_set_tab_label (GTK_NOTEBOOK (main_notebook), gtk_notebook_get_nth_page (GTK_NOTEBOOK (main_notebook), 4), save_label);
@@ -1156,6 +1138,8 @@
   GLADE_HOOKUP_OBJECT (hmgengui, colormap_auto_update_checkbutton, "colormap_auto_update_checkbutton");
   GLADE_HOOKUP_OBJECT (hmgengui, colormap_update_button, "colormap_update_button");
   GLADE_HOOKUP_OBJECT (hmgengui, colormap_redraw_2dview_button, "colormap_redraw_2dview_button");
+  GLADE_HOOKUP_OBJECT (hmgengui, filechooserbutton1, "filechooserbutton1");
+  GLADE_HOOKUP_OBJECT (hmgengui, filechooserbutton2, "filechooserbutton2");
 
   gtk_notebook_set_current_page(GTK_NOTEBOOK(main_notebook), 1);
 



From ivop at mail.berlios.de  Fri Aug 31 13:08:45 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 13:08:45 +0200
Subject: [Hmgen-svnlog] r33 - trunk
Message-ID: <200708311108.l7VB8jbk007286@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 13:08:36 +0200 (Fri, 31 Aug 2007)
New Revision: 33

Modified:
   trunk/gui_main.c
Log:
suppress stupid/buggy libgtk warning messages to stderr

it looks like libgtk has no sane mechanism for redirecting stdout/stderr, so
we just close fd 2 and reopen it to /dev/null

to disable this functionality, export HMGENGUI_SHOW_STDERR= before starting
the gui


Modified: trunk/gui_main.c
===================================================================
--- trunk/gui_main.c	2007-08-31 11:00:48 UTC (rev 32)
+++ trunk/gui_main.c	2007-08-31 11:08:36 UTC (rev 33)
@@ -1,13 +1,24 @@
 #include <gtk/gtk.h>
 #include <locale.h>
 #include <stdlib.h>
+#include <unistd.h>
+#include <fcntl.h>
 #include "gui_interface.h"
 #include "gui_support.h"
 #include "lib_hmgen.c"
 
 int main(int argc, char *argv[]) {
     GtkWidget *hmgengui;
+    char *show_stderr;
 
+    /* stop gtk spamming stderr with warnings about gnome icons
+     * this is a bug in gtk */
+    show_stderr = getenv("HMGENGUI_SHOW_STDERR");
+    if (!show_stderr) {
+        close(2);
+        open("/dev/null", O_WRONLY);
+    }
+
     gtk_disable_setlocale();
     setlocale(LC_ALL, "C");
 



From ivop at mail.berlios.de  Fri Aug 31 13:21:36 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 13:21:36 +0200
Subject: [Hmgen-svnlog] r34 - trunk
Message-ID: <200708311121.l7VBLa24031984@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 13:21:36 +0200 (Fri, 31 Aug 2007)
New Revision: 34

Modified:
   trunk/
Log:
ignore files



Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   + hmgen
hmgengui
libhmgen.a
.depend
hmgen_g
hmgengui_g
config.mak




From ivop at mail.berlios.de  Fri Aug 31 13:22:32 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 13:22:32 +0200
Subject: [Hmgen-svnlog] r35 - trunk
Message-ID: <200708311122.l7VBMWDI032284@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 13:22:32 +0200 (Fri, 31 Aug 2007)
New Revision: 35

Modified:
   trunk/
Log:
ignore more files



Property changes on: trunk
___________________________________________________________________
Name: svn:ignore
   - hmgen
hmgengui
libhmgen.a
.depend
hmgen_g
hmgengui_g
config.mak

   + hmgen
hmgengui
libhmgen.a
.depend
hmgen_g
hmgengui_g
config.mak
svn-commit.*




From ivop at mail.berlios.de  Fri Aug 31 13:27:07 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 13:27:07 +0200
Subject: [Hmgen-svnlog] r36 - in trunk: . assist
Message-ID: <200708311127.l7VBR7WF000611@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 13:27:06 +0200 (Fri, 31 Aug 2007)
New Revision: 36

Modified:
   trunk/
   trunk/AUTHORS
   trunk/LICENSE
   trunk/Makefile
   trunk/README
   trunk/assist/
   trunk/assist/README
   trunk/assist/hmgengui.glade
   trunk/cli_main.c
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
   trunk/gui_interface.h
   trunk/gui_main.c
   trunk/gui_support.c
   trunk/gui_support.h
   trunk/hmgen.png
   trunk/lib_algo_ff.c
   trunk/lib_algo_forge.c
   trunk/lib_algo_mpd.c
   trunk/lib_hmgen.c
   trunk/lib_hmgen.h
   trunk/lib_postproc.c
   trunk/lib_util.c
   trunk/version.h
Log:
copyright and license properties



Property changes on: trunk
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/AUTHORS
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/LICENSE
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/Makefile
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/README
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/assist
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/assist/README
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/assist/hmgengui.glade
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/cli_main.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_callbacks.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_callbacks.h
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_interface.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_interface.h
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_main.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_support.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/gui_support.h
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/hmgen.png
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_algo_ff.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_algo_forge.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_algo_mpd.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_hmgen.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_hmgen.h
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_postproc.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/lib_util.c
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten


Property changes on: trunk/version.h
___________________________________________________________________
Name: license
   + GNU General Public License Version 2
Name: copyright
   + Copyright (C) 2007 Ivo van Poorten



From ivop at mail.berlios.de  Fri Aug 31 13:28:11 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 13:28:11 +0200
Subject: [Hmgen-svnlog] r37 - trunk
Message-ID: <200708311128.l7VBSBvL000780@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 13:28:11 +0200 (Fri, 31 Aug 2007)
New Revision: 37

Modified:
   trunk/lib_algo_forge.c
Log:
update copyright



Property changes on: trunk/lib_algo_forge.c
___________________________________________________________________
Name: copyright
   - Copyright (C) 2007 Ivo van Poorten
   + Copyright (C) 1989 John Walker
Copyright (C) 2007 Ivo van Poorten




From ivop at mail.berlios.de  Fri Aug 31 14:48:14 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 14:48:14 +0200
Subject: [Hmgen-svnlog] r38 - trunk
Message-ID: <200708311248.l7VCmEU3007571@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 14:48:14 +0200 (Fri, 31 Aug 2007)
New Revision: 38

Modified:
   trunk/README
Log:
update


Modified: trunk/README
===================================================================
--- trunk/README	2007-08-31 11:28:11 UTC (rev 37)
+++ trunk/README	2007-08-31 12:48:14 UTC (rev 38)
@@ -21,9 +21,11 @@
     make hmgen
 
 Developer build:
-    make dep verbose
+    make dep
+    make verbose
     or
-    make dep hmgen-verbose
+    make dep
+    make hmgen-verbose
     etc...
 
 Clean up:



From ivop at mail.berlios.de  Fri Aug 31 17:22:46 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 17:22:46 +0200
Subject: [Hmgen-svnlog] r39 - trunk
Message-ID: <200708311522.l7VFMk01019996@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 17:22:46 +0200 (Fri, 31 Aug 2007)
New Revision: 39

Modified:
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
Log:
colormap scales; auto-adjust other scales so the next one is always >= current
one


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 12:48:14 UTC (rev 38)
+++ trunk/gui_callbacks.c	2007-08-31 15:22:46 UTC (rev 39)
@@ -482,3 +482,65 @@
     return FALSE;
 }
 
+static void adjust_other_scales(GtkRange *range, int curscale, double val) {
+    double v;
+    GtkWidget *w;
+    int c;
+    char name[] = "colormap_scalex";
+    char nums[] = "0123456789";
+
+    for (c=curscale-1; c>0; c--) {
+        name[14] = nums[c];
+        w = lookup_widget(GTK_WIDGET(range), name);
+        v = gtk_range_get_value(GTK_RANGE(w));
+        if (v>val)
+            gtk_range_set_value(GTK_RANGE(w), val);
+    }
+    for (c=curscale+1; c<9; c++) {
+        name[14] = nums[c];
+        w = lookup_widget(GTK_WIDGET(range), name);
+        v = gtk_range_get_value(GTK_RANGE(w));
+        if (v<val)
+            gtk_range_set_value(GTK_RANGE(w), val);
+    }
+}
+
+void on_colormap_scale1_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 1, gtk_range_get_value(range));
+}
+
+void on_colormap_scale2_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 2, gtk_range_get_value(range));
+}
+
+void on_colormap_scale3_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 3, gtk_range_get_value(range));
+}
+
+void on_colormap_scale4_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 4, gtk_range_get_value(range));
+}
+
+void on_colormap_scale5_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 5, gtk_range_get_value(range));
+}
+
+void on_colormap_scale6_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 6, gtk_range_get_value(range));
+}
+
+void on_colormap_scale7_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 7, gtk_range_get_value(range));
+}
+
+void on_colormap_scale8_value_changed(GtkRange *range,
+                                      gpointer user_data HMG_ATTR_UNUSED) {
+    adjust_other_scales(range, 8, gtk_range_get_value(range));
+}

Modified: trunk/gui_callbacks.h
===================================================================
--- trunk/gui_callbacks.h	2007-08-31 12:48:14 UTC (rev 38)
+++ trunk/gui_callbacks.h	2007-08-31 15:22:46 UTC (rev 39)
@@ -21,4 +21,13 @@
 gboolean on_colormap_display_expose_event (GtkWidget *widget,
                                     GdkEventExpose *event, gpointer user_data);
 
+void on_colormap_scale1_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale2_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale3_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale4_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale5_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale6_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale7_value_changed(GtkRange *range, gpointer user_data);
+void on_colormap_scale8_value_changed(GtkRange *range, gpointer user_data);
+
 #endif

Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-31 12:48:14 UTC (rev 38)
+++ trunk/gui_interface.c	2007-08-31 15:22:46 UTC (rev 39)
@@ -1055,6 +1055,30 @@
   g_signal_connect ((gpointer) colormap_display, "expose_event",
                     G_CALLBACK (on_colormap_display_expose_event),
                     NULL);
+  g_signal_connect ((gpointer) colormap_scale1, "value_changed",
+                    G_CALLBACK (on_colormap_scale1_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale2, "value_changed",
+                    G_CALLBACK (on_colormap_scale2_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale3, "value_changed",
+                    G_CALLBACK (on_colormap_scale3_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale4, "value_changed",
+                    G_CALLBACK (on_colormap_scale4_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale5, "value_changed",
+                    G_CALLBACK (on_colormap_scale5_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale6, "value_changed",
+                    G_CALLBACK (on_colormap_scale6_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale7, "value_changed",
+                    G_CALLBACK (on_colormap_scale7_value_changed),
+                    NULL);
+  g_signal_connect ((gpointer) colormap_scale8, "value_changed",
+                    G_CALLBACK (on_colormap_scale8_value_changed),
+                    NULL);
 
   /* Store pointers to all widgets, for use by lookup_widget(). */
   GLADE_HOOKUP_OBJECT_NO_REF (hmgengui, hmgengui, "hmgengui");



From ivop at mail.berlios.de  Fri Aug 31 17:32:51 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 17:32:51 +0200
Subject: [Hmgen-svnlog] r40 - trunk
Message-ID: <200708311532.l7VFWpid020560@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 17:32:51 +0200 (Fri, 31 Aug 2007)
New Revision: 40

Modified:
   trunk/lib_util.c
Log:
remove dead code


Modified: trunk/lib_util.c
===================================================================
--- trunk/lib_util.c	2007-08-31 15:22:46 UTC (rev 39)
+++ trunk/lib_util.c	2007-08-31 15:32:51 UTC (rev 40)
@@ -8,16 +8,6 @@
 #define B_GRASS_ROCK     96
 #define B_ROCK_SNOW      192
 
-#if 0
-static unsigned char waterstart[3] = {   0,   0, 128 },
-                     waterend[3]   = {   0,   0, 255 },
-                     grassstart[3] = {   0, 128,   0 },
-                     grassend[3]   = {   0, 255,   0 },
-                     rockstart[3]  = { 128,   0,   0 },
-                     rockend[3]    = { 255, 128, 128 },
-                     snowstart[3]  = { 128, 128, 128 },
-                     snowend[3]    = { 255, 255, 255 };
-#endif
 static unsigned char waterstart[3] = {   0,   0, 96 },
                      waterend[3]   = {   0,   0, 192 },
                      grassstart[3] = {   0, 0,  192 },



From ivop at mail.berlios.de  Fri Aug 31 17:50:19 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 17:50:19 +0200
Subject: [Hmgen-svnlog] r41 - trunk
Message-ID: <200708311550.l7VFoJPg021548@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 17:50:19 +0200 (Fri, 31 Aug 2007)
New Revision: 41

Modified:
   trunk/cli_main.c
   trunk/gui_main.c
   trunk/lib_hmgen.h
   trunk/lib_util.c
Log:
more flexible colormap initialization


Modified: trunk/cli_main.c
===================================================================
--- trunk/cli_main.c	2007-08-31 15:32:51 UTC (rev 40)
+++ trunk/cli_main.c	2007-08-31 15:50:19 UTC (rev 41)
@@ -245,7 +245,7 @@
 
         fprintf(fp2, "P6\n# Generated by HMGEN\n%i %i\n255\n", w, h);
 
-        hmg_init_colormap();
+        hmg_init_colormap(NULL);
         for (i=0; i<w*h; i++)
             fwrite(hmg_colormap[map[i]], 1, 3, fp2);
 

Modified: trunk/gui_main.c
===================================================================
--- trunk/gui_main.c	2007-08-31 15:32:51 UTC (rev 40)
+++ trunk/gui_main.c	2007-08-31 15:50:19 UTC (rev 41)
@@ -22,7 +22,7 @@
     gtk_disable_setlocale();
     setlocale(LC_ALL, "C");
 
-    hmg_init_colormap();
+    hmg_init_colormap(NULL);
 
     g_thread_init(NULL);
     gdk_threads_init();

Modified: trunk/lib_hmgen.h
===================================================================
--- trunk/lib_hmgen.h	2007-08-31 15:32:51 UTC (rev 40)
+++ trunk/lib_hmgen.h	2007-08-31 15:50:19 UTC (rev 41)
@@ -39,8 +39,13 @@
 
 extern unsigned char hmg_colormap[256][3];
 
-void hmg_init_colormap(void);
+typedef struct hmg_colormap_settings_s {
+        unsigned int scales[8];
+            unsigned char colors[8][3];
+} hmg_colormap_settings_t;
 
+void hmg_init_colormap(hmg_colormap_settings_t *settings);
+
 void hmg_rng_initgauss(unsigned int seed);
 double hmg_rng_gauss(void);
 

Modified: trunk/lib_util.c
===================================================================
--- trunk/lib_util.c	2007-08-31 15:32:51 UTC (rev 40)
+++ trunk/lib_util.c	2007-08-31 15:50:19 UTC (rev 41)
@@ -1,33 +1,29 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <math.h>
+#include "lib_hmgen.h"
 
 unsigned char hmg_colormap[256][3];
 
-#define B_WATER_GRASS    32
-#define B_GRASS_ROCK     96
-#define B_ROCK_SNOW      192
+static hmg_colormap_settings_t default_colormap_settings = {
+    { 0, 32, 96, 192, 255, 255, 255, 255 },
+    { { 0, 0, 96 }, { 0, 0, 192 }, { 0, 192, 0 }, { 192, 128, 128 },
+      { 255, 255, 255 }, { 0, 0, 0 }, { 0, 0, 0 }, { 0, 0, 0 } }
+};
 
-static unsigned char waterstart[3] = {   0,   0, 96 },
-                     waterend[3]   = {   0,   0, 192 },
-                     grassstart[3] = {   0, 0,  192 },
-                     grassend[3]   = {   0, 192,   0 },
-                     rockstart[3]  = { 0,   192,   0 },
-                     rockend[3]    = { 192, 128, 128 },
-                     snowstart[3]  = { 192, 128, 128 },
-                     snowend[3]    = { 255, 255, 255 };
-
-// colormap[last] is NOT set
 static void do_gradient(unsigned char start[3], unsigned char end[3],
                         int first, int last) {
     double d[3];
-    int steps = last - first - 1, i;
+    int steps = last - first, i;
 
+    if (!steps)     /* no divide by zero */
+        return;
+
     d[0] = (double)(end[0] - start[0]) / steps;
     d[1] = (double)(end[1] - start[1]) / steps;
     d[2] = (double)(end[2] - start[2]) / steps;
 
-    for (i=first; i<last; i++) {
+    for (i=first; i<=last; i++) {
         int j = i-first;
         hmg_colormap[i][0] = round((double)start[0] + d[0]*j);
         hmg_colormap[i][1] = round((double)start[1] + d[1]*j);
@@ -35,11 +31,16 @@
     }
 }
 
-void hmg_init_colormap(void) {
-    do_gradient(waterstart, waterend, 0,             B_WATER_GRASS);
-    do_gradient(grassstart, grassend, B_WATER_GRASS, B_GRASS_ROCK);
-    do_gradient(rockstart,  rockend,  B_GRASS_ROCK,  B_ROCK_SNOW);
-    do_gradient(snowstart,  snowend,  B_ROCK_SNOW,   256);
+void hmg_init_colormap(hmg_colormap_settings_t *settings) {
+    hmg_colormap_settings_t *set = settings;
+    int i;
+
+    if (!set)
+        set =&default_colormap_settings;
+
+    for (i=0; i<7; i++)
+        do_gradient(set->colors[i], set->colors[i+1], set->scales[i],
+                    set->scales[i+1]);
 }
 
 #define nrand 4



From ivop at mail.berlios.de  Fri Aug 31 22:00:54 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 22:00:54 +0200
Subject: [Hmgen-svnlog] r42 - trunk
Message-ID: <200708312000.l7VK0snI018572@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 22:00:54 +0200 (Fri, 31 Aug 2007)
New Revision: 42

Modified:
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
Log:
connect update button and update colormap according to current settings


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 15:50:19 UTC (rev 41)
+++ trunk/gui_callbacks.c	2007-08-31 20:00:54 UTC (rev 42)
@@ -544,3 +544,39 @@
                                       gpointer user_data HMG_ATTR_UNUSED) {
     adjust_other_scales(range, 8, gtk_range_get_value(range));
 }
+
+void on_colormap_update_button_clicked(GtkButton *button,
+                                       gpointer user_data HMG_ATTR_UNUSED) {
+    hmg_colormap_settings_t settings;
+    GtkWidget *w;
+    GdkColor color;
+    GdkRectangle rect;
+    GdkWindow *win;
+    int i;
+    char name[]  = "colormap_colorbuttonx";
+    char name2[] = "colormap_scalex";
+    char nums[]  = "0123456789";
+
+    for (i=1; i<=8; i++) {
+        name[20] = nums[i];
+        w = lookup_widget(GTK_WIDGET(button), name);
+        gtk_color_button_get_color(GTK_COLOR_BUTTON(w), &color);
+        settings.colors[i-1][0] = color.red >> 8;
+        settings.colors[i-1][1] = color.green >> 8;
+        settings.colors[i-1][2] = color.blue >> 8;
+
+        name2[14] = nums[i];
+        w = lookup_widget(GTK_WIDGET(button), name2);
+        settings.scales[i-1] = gtk_range_get_value(GTK_RANGE(w));
+    }
+
+    hmg_init_colormap(&settings);
+
+    w = lookup_widget(GTK_WIDGET(button), "colormap_display");
+    win = w->window;
+    rect.x = rect.y = 0;
+    rect.width = 514;
+    rect.height = 32;
+    gdk_window_invalidate_rect(win, &rect, TRUE);
+}
+

Modified: trunk/gui_callbacks.h
===================================================================
--- trunk/gui_callbacks.h	2007-08-31 15:50:19 UTC (rev 41)
+++ trunk/gui_callbacks.h	2007-08-31 20:00:54 UTC (rev 42)
@@ -15,6 +15,7 @@
 void on_norm2_button_clicked      (GtkButton *button, gpointer user_data);
 void on_blur2_button_clicked      (GtkButton *button, gpointer user_data);
 void on_invert2_button_clicked    (GtkButton *button, gpointer user_data);
+void on_colormap_update_button_clicked(GtkButton *button, gpointer user_data);
 
 gboolean on_view_drawingarea_expose_event (GtkWidget *widget,
                                     GdkEventExpose *event, gpointer user_data);

Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-31 15:50:19 UTC (rev 41)
+++ trunk/gui_interface.c	2007-08-31 20:00:54 UTC (rev 42)
@@ -1079,6 +1079,9 @@
   g_signal_connect ((gpointer) colormap_scale8, "value_changed",
                     G_CALLBACK (on_colormap_scale8_value_changed),
                     NULL);
+  g_signal_connect ((gpointer) colormap_update_button, "clicked",
+                    G_CALLBACK (on_colormap_update_button_clicked),
+                    NULL);
 
   /* Store pointers to all widgets, for use by lookup_widget(). */
   GLADE_HOOKUP_OBJECT_NO_REF (hmgengui, hmgengui, "hmgengui");



From ivop at mail.berlios.de  Fri Aug 31 22:01:27 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 22:01:27 +0200
Subject: [Hmgen-svnlog] r43 - trunk
Message-ID: <200708312001.l7VK1R6R018706@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 22:01:27 +0200 (Fri, 31 Aug 2007)
New Revision: 43

Modified:
   trunk/gui_callbacks.c
Log:
simplify


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 20:00:54 UTC (rev 42)
+++ trunk/gui_callbacks.c	2007-08-31 20:01:27 UTC (rev 43)
@@ -551,7 +551,6 @@
     GtkWidget *w;
     GdkColor color;
     GdkRectangle rect;
-    GdkWindow *win;
     int i;
     char name[]  = "colormap_colorbuttonx";
     char name2[] = "colormap_scalex";
@@ -573,10 +572,9 @@
     hmg_init_colormap(&settings);
 
     w = lookup_widget(GTK_WIDGET(button), "colormap_display");
-    win = w->window;
     rect.x = rect.y = 0;
     rect.width = 514;
     rect.height = 32;
-    gdk_window_invalidate_rect(win, &rect, TRUE);
+    gdk_window_invalidate_rect(w->window, &rect, TRUE);
 }
 



From ivop at mail.berlios.de  Fri Aug 31 22:49:03 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 22:49:03 +0200
Subject: [Hmgen-svnlog] r44 - trunk
Message-ID: <200708312049.l7VKn3hs020927@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 22:49:03 +0200 (Fri, 31 Aug 2007)
New Revision: 44

Modified:
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
Log:
redraw 2d view with new colormap


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 20:01:27 UTC (rev 43)
+++ trunk/gui_callbacks.c	2007-08-31 20:49:03 UTC (rev 44)
@@ -578,3 +578,19 @@
     gdk_window_invalidate_rect(w->window, &rect, TRUE);
 }
 
+static void *rerender_thread(void *args) {
+    set_main_progressbar(args);
+    hmg_progress_meter = gui_progress_meter;
+
+    render_map(args);
+
+    activate_main_notebook(args);
+    return NULL;
+}
+
+void on_colormap_redraw_2dview_button_clicked(GtkButton *button,
+                                              gpointer user_data
+                                              HMG_ATTR_UNUSED) {
+    deactivate_main_notebook(button);
+    g_thread_create(rerender_thread, button, FALSE, (void*)button);
+}

Modified: trunk/gui_callbacks.h
===================================================================
--- trunk/gui_callbacks.h	2007-08-31 20:01:27 UTC (rev 43)
+++ trunk/gui_callbacks.h	2007-08-31 20:49:03 UTC (rev 44)
@@ -16,6 +16,8 @@
 void on_blur2_button_clicked      (GtkButton *button, gpointer user_data);
 void on_invert2_button_clicked    (GtkButton *button, gpointer user_data);
 void on_colormap_update_button_clicked(GtkButton *button, gpointer user_data);
+void on_colormap_redraw_2dview_button_clicked(GtkButton *button,
+                                              gpointer user_data);
 
 gboolean on_view_drawingarea_expose_event (GtkWidget *widget,
                                     GdkEventExpose *event, gpointer user_data);

Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-31 20:01:27 UTC (rev 43)
+++ trunk/gui_interface.c	2007-08-31 20:49:03 UTC (rev 44)
@@ -1082,6 +1082,9 @@
   g_signal_connect ((gpointer) colormap_update_button, "clicked",
                     G_CALLBACK (on_colormap_update_button_clicked),
                     NULL);
+  g_signal_connect ((gpointer) colormap_redraw_2dview_button, "clicked",
+                    G_CALLBACK (on_colormap_redraw_2dview_button_clicked),
+                    NULL);
 
   /* Store pointers to all widgets, for use by lookup_widget(). */
   GLADE_HOOKUP_OBJECT_NO_REF (hmgengui, hmgengui, "hmgengui");



From ivop at mail.berlios.de  Fri Aug 31 23:09:10 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 23:09:10 +0200
Subject: [Hmgen-svnlog] r45 - trunk
Message-ID: <200708312109.l7VL9AMP021982@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 23:09:09 +0200 (Fri, 31 Aug 2007)
New Revision: 45

Modified:
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
Log:
make colormap's auto update work


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 20:49:03 UTC (rev 44)
+++ trunk/gui_callbacks.c	2007-08-31 21:09:09 UTC (rev 45)
@@ -15,6 +15,7 @@
 static unsigned int map_width = 0, map_height = 0;
 static GtkProgressBar *main_progressbar = NULL;
 static unsigned int algo_combo_set = 0, size_combo_set = 0;
+static unsigned int colormap_auto_adjust = 0;
 
 static void gui_progress_meter(char *context, int p) {
     static char *prevcontext = NULL;
@@ -503,6 +504,11 @@
         if (v<val)
             gtk_range_set_value(GTK_RANGE(w), val);
     }
+
+    /* the button is not used as a button inside the update function, so we
+     * can safely convert our range to a button */
+    if (colormap_auto_adjust)
+        on_colormap_update_button_clicked(GTK_BUTTON(range), NULL);
 }
 
 void on_colormap_scale1_value_changed(GtkRange *range,
@@ -594,3 +600,9 @@
     deactivate_main_notebook(button);
     g_thread_create(rerender_thread, button, FALSE, (void*)button);
 }
+
+void on_colormap_auto_update_checkbutton_toggled(GtkToggleButton *togglebutton,
+                                                 gpointer user_data
+                                                 HMG_ATTR_UNUSED) {
+    colormap_auto_adjust = gtk_toggle_button_get_active(togglebutton);
+}

Modified: trunk/gui_callbacks.h
===================================================================
--- trunk/gui_callbacks.h	2007-08-31 20:49:03 UTC (rev 44)
+++ trunk/gui_callbacks.h	2007-08-31 21:09:09 UTC (rev 45)
@@ -18,6 +18,8 @@
 void on_colormap_update_button_clicked(GtkButton *button, gpointer user_data);
 void on_colormap_redraw_2dview_button_clicked(GtkButton *button,
                                               gpointer user_data);
+void on_colormap_auto_update_checkbutton_toggled(GtkToggleButton *togglebutton,
+                                                 gpointer user_data);
 
 gboolean on_view_drawingarea_expose_event (GtkWidget *widget,
                                     GdkEventExpose *event, gpointer user_data);

Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-31 20:49:03 UTC (rev 44)
+++ trunk/gui_interface.c	2007-08-31 21:09:09 UTC (rev 45)
@@ -1085,6 +1085,9 @@
   g_signal_connect ((gpointer) colormap_redraw_2dview_button, "clicked",
                     G_CALLBACK (on_colormap_redraw_2dview_button_clicked),
                     NULL);
+  g_signal_connect ((gpointer) colormap_auto_update_checkbutton, "toggled",
+                    G_CALLBACK (on_colormap_auto_update_checkbutton_toggled),
+                    NULL);
 
   /* Store pointers to all widgets, for use by lookup_widget(). */
   GLADE_HOOKUP_OBJECT_NO_REF (hmgengui, hmgengui, "hmgengui");



From ivop at mail.berlios.de  Fri Aug 31 23:11:05 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 23:11:05 +0200
Subject: [Hmgen-svnlog] r46 - trunk
Message-ID: <200708312111.l7VLB5H3022104@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 23:11:05 +0200 (Fri, 31 Aug 2007)
New Revision: 46

Modified:
   trunk/gui_callbacks.c
Log:
also update when auto update is enabled


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 21:09:09 UTC (rev 45)
+++ trunk/gui_callbacks.c	2007-08-31 21:11:05 UTC (rev 46)
@@ -605,4 +605,6 @@
                                                  gpointer user_data
                                                  HMG_ATTR_UNUSED) {
     colormap_auto_adjust = gtk_toggle_button_get_active(togglebutton);
+    if (colormap_auto_adjust)
+        on_colormap_update_button_clicked(GTK_BUTTON(togglebutton), NULL);
 }



From ivop at mail.berlios.de  Fri Aug 31 23:12:00 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 23:12:00 +0200
Subject: [Hmgen-svnlog] r47 - trunk
Message-ID: <200708312112.l7VLC0QD022201@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 23:12:00 +0200 (Fri, 31 Aug 2007)
New Revision: 47

Modified:
   trunk/gui_callbacks.c
Log:
rename auto_adjust to auto_update


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 21:11:05 UTC (rev 46)
+++ trunk/gui_callbacks.c	2007-08-31 21:12:00 UTC (rev 47)
@@ -15,7 +15,7 @@
 static unsigned int map_width = 0, map_height = 0;
 static GtkProgressBar *main_progressbar = NULL;
 static unsigned int algo_combo_set = 0, size_combo_set = 0;
-static unsigned int colormap_auto_adjust = 0;
+static unsigned int colormap_auto_update = 0;
 
 static void gui_progress_meter(char *context, int p) {
     static char *prevcontext = NULL;
@@ -507,7 +507,7 @@
 
     /* the button is not used as a button inside the update function, so we
      * can safely convert our range to a button */
-    if (colormap_auto_adjust)
+    if (colormap_auto_update)
         on_colormap_update_button_clicked(GTK_BUTTON(range), NULL);
 }
 
@@ -604,7 +604,7 @@
 void on_colormap_auto_update_checkbutton_toggled(GtkToggleButton *togglebutton,
                                                  gpointer user_data
                                                  HMG_ATTR_UNUSED) {
-    colormap_auto_adjust = gtk_toggle_button_get_active(togglebutton);
-    if (colormap_auto_adjust)
+    colormap_auto_update = gtk_toggle_button_get_active(togglebutton);
+    if (colormap_auto_update)
         on_colormap_update_button_clicked(GTK_BUTTON(togglebutton), NULL);
 }



From ivop at mail.berlios.de  Fri Aug 31 23:19:06 2007
From: ivop at mail.berlios.de (ivop at BerliOS)
Date: Fri, 31 Aug 2007 23:19:06 +0200
Subject: [Hmgen-svnlog] r48 - trunk
Message-ID: <200708312119.l7VLJ6l3022682@sheep.berlios.de>

Author: ivop
Date: 2007-08-31 23:19:06 +0200 (Fri, 31 Aug 2007)
New Revision: 48

Modified:
   trunk/gui_callbacks.c
   trunk/gui_callbacks.h
   trunk/gui_interface.c
Log:
update colormap if auto_update is enabled and one of the colors is changed


Modified: trunk/gui_callbacks.c
===================================================================
--- trunk/gui_callbacks.c	2007-08-31 21:12:00 UTC (rev 47)
+++ trunk/gui_callbacks.c	2007-08-31 21:19:06 UTC (rev 48)
@@ -608,3 +608,10 @@
     if (colormap_auto_update)
         on_colormap_update_button_clicked(GTK_BUTTON(togglebutton), NULL);
 }
+
+void on_colormap_colorbutton_color_set(GtkColorButton  *colorbutton,
+                                               gpointer user_data
+                                               HMG_ATTR_UNUSED) {
+    if (colormap_auto_update)
+        on_colormap_update_button_clicked(GTK_BUTTON(colorbutton), NULL);
+}

Modified: trunk/gui_callbacks.h
===================================================================
--- trunk/gui_callbacks.h	2007-08-31 21:12:00 UTC (rev 47)
+++ trunk/gui_callbacks.h	2007-08-31 21:19:06 UTC (rev 48)
@@ -20,6 +20,8 @@
                                               gpointer user_data);
 void on_colormap_auto_update_checkbutton_toggled(GtkToggleButton *togglebutton,
                                                  gpointer user_data);
+void on_colormap_colorbutton_color_set(GtkColorButton  *colorbutton,
+                                       gpointer user_data);
 
 gboolean on_view_drawingarea_expose_event (GtkWidget *widget,
                                     GdkEventExpose *event, gpointer user_data);

Modified: trunk/gui_interface.c
===================================================================
--- trunk/gui_interface.c	2007-08-31 21:12:00 UTC (rev 47)
+++ trunk/gui_interface.c	2007-08-31 21:19:06 UTC (rev 48)
@@ -1088,6 +1088,22 @@
   g_signal_connect ((gpointer) colormap_auto_update_checkbutton, "toggled",
                     G_CALLBACK (on_colormap_auto_update_checkbutton_toggled),
                     NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton1, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton2, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton3, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton4, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton5, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton6, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton7, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
+  g_signal_connect ((gpointer) colormap_colorbutton8, "color_set",
+                    G_CALLBACK (on_colormap_colorbutton_color_set), NULL);
 
   /* Store pointers to all widgets, for use by lookup_widget(). */
   GLADE_HOOKUP_OBJECT_NO_REF (hmgengui, hmgengui, "hmgengui");



